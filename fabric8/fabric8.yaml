[debug] Created tunnel using local port: '32768'

[debug] SERVER: "127.0.0.1:32768"

[debug] Original chart version: ""
[debug] Fetched fabric8/fabric8-platform to /root/.helm/cache/archive/fabric8-platform-2.4.24-helm.tar.gz

[debug] CHART PATH: /root/.helm/cache/archive/fabric8-platform-2.4.24-helm.tar.gz

NAME:   messy-lambkin
REVISION: 1
RELEASED: Wed Jul 18 09:33:06 2018
CHART: fabric8-platform-2.4.24
USER-SUPPLIED VALUES:
{}

COMPUTED VALUES:
{}

HOOKS:
MANIFEST:

---
# Source: fabric8-platform/templates/user-secrets-source-admin-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    provider: fabric8
    project: console
    version: 2.4.24
    group: io.fabric8.platform.packages
  name: user-secrets-source-admin
---
# Source: fabric8-platform/templates/default-gogs-git-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    group: io.fabric8.devops.apps
    project: gogs
    repository: gogs
    scm: git
    version: 2.2.311
  name: default-gogs-git
  namespace: user-secrets-source-admin
data:
  password: UmVkSGF0JDE=
  username: Z29nc2FkbWlu
---
# Source: fabric8-platform/templates/jenkins-docker-cfg-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-docker-cfg
data:
  config.json: ""
type: fabric8.io/jenkins-docker-cfg
---
# Source: fabric8-platform/templates/jenkins-git-ssh-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-git-ssh
data:
  ssh-key: ""
  ssh-key.pub: ""
type: fabric8.io/jenkins-git-ssh
---
# Source: fabric8-platform/templates/jenkins-hub-api-token-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-hub-api-token
data:
  hub: ""
type: fabric8.io/jenkins-hub-api-token
---
# Source: fabric8-platform/templates/jenkins-master-ssh-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-master-ssh
data:
  idrsa: ""
type: fabric8.io/jenkins-master-ssh
---
# Source: fabric8-platform/templates/jenkins-maven-settings-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-maven-settings
data:
  settings.xml: PHNldHRpbmdzPgogIDwhLS0gc2V0cyB0aGUgbG9jYWwgbWF2ZW4gcmVwb3NpdG9yeSBvdXRzaWRlIG9mIHRoZSB+Ly5tMiBmb2xkZXIgZm9yIGVhc2llciBtb3VudGluZyBvZiBzZWNyZXRzIGFuZCByZXBvIC0tPgogIDxsb2NhbFJlcG9zaXRvcnk+JHt1c2VyLmhvbWV9Ly5tdm5yZXBvc2l0b3J5PC9sb2NhbFJlcG9zaXRvcnk+CiAgPG1pcnJvcnM+CiAgICA8bWlycm9yPgogICAgICA8aWQ+bmV4dXM8L2lkPgogICAgICA8bWlycm9yT2Y+ZXh0ZXJuYWw6KjwvbWlycm9yT2Y+CiAgICAgIDx1cmw+aHR0cDovL25leHVzL2NvbnRlbnQvZ3JvdXBzL3B1YmxpYzwvdXJsPgogICAgPC9taXJyb3I+CiAgPC9taXJyb3JzPgoKICA8IS0tIGxldHMgZGlzYWJsZSB0aGUgZG93bmxvYWQgcHJvZ3Jlc3MgaW5kaWNhdG9yIHRoYXQgZmlsbHMgdXAgbG9ncyAtLT4KICA8aW50ZXJhY3RpdmVNb2RlPmZhbHNlPC9pbnRlcmFjdGl2ZU1vZGU+CgogIDxzZXJ2ZXJzPgogICAgPHNlcnZlcj4KICAgICAgPGlkPmxvY2FsLW5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm9zcy1zb25hdHlwZS1zdGFnaW5nPC9pZD4KICAgICAgPHVzZXJuYW1lPjwvdXNlcm5hbWU+CiAgICAgIDxwYXNzd29yZD48L3Bhc3N3b3JkPgogICAgPC9zZXJ2ZXI+CiAgPC9zZXJ2ZXJzPgoKICA8cHJvZmlsZXM+CiAgICA8cHJvZmlsZT4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGFsdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc3RhZ2luZy88L2FsdERlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRSZWxlYXNlRGVwbG95bWVudFJlcG9zaXRvcnk+bG9jYWwtbmV4dXM6OmRlZmF1bHQ6Omh0dHA6Ly9uZXh1cy9jb250ZW50L3JlcG9zaXRvcmllcy9zdGFnaW5nLzwvYWx0UmVsZWFzZURlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRTbmFwc2hvdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc25hcHNob3RzLzwvYWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT4KICAgICAgPC9wcm9wZXJ0aWVzPgogICAgICA8cmVwb3NpdG9yaWVzPgogICAgICAgIDxyZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3JlcG9zaXRvcnk+CiAgICAgIDwvcmVwb3NpdG9yaWVzPgogICAgICA8cGx1Z2luUmVwb3NpdG9yaWVzPgogICAgICAgIDxwbHVnaW5SZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3BsdWdpblJlcG9zaXRvcnk+CiAgICAgIDwvcGx1Z2luUmVwb3NpdG9yaWVzPgogICAgPC9wcm9maWxlPgogICAgPHByb2ZpbGU+CiAgICAgIDxpZD5yZWxlYXNlPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGdwZy5leGVjdXRhYmxlPmdwZzwvZ3BnLmV4ZWN1dGFibGU+CiAgICAgICAgPGdwZy5wYXNzcGhyYXNlPm15c2VjcmV0cGFzc3BocmFzZTwvZ3BnLnBhc3NwaHJhc2U+CiAgICAgIDwvcHJvcGVydGllcz4KICAgIDwvcHJvZmlsZT4KICA8L3Byb2ZpbGVzPgogIDxhY3RpdmVQcm9maWxlcz4KICAgIDwhLS1tYWtlIHRoZSBwcm9maWxlIGFjdGl2ZSBhbGwgdGhlIHRpbWUgLS0+CiAgICA8YWN0aXZlUHJvZmlsZT5uZXh1czwvYWN0aXZlUHJvZmlsZT4KICA8L2FjdGl2ZVByb2ZpbGVzPgo8L3NldHRpbmdzPgo=
type: fabric8.io/secret-maven-settings
---
# Source: fabric8-platform/templates/jenkins-release-gpg-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-release-gpg
data:
  trustdb.gpg: ""
  pubring.gpg: ""
  gpg.conf: ""
  secring.gpg: ""
type: fabric8.io/jenkins-release-gpg
---
# Source: fabric8-platform/templates/jenkins-ssh-config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-ssh-config
data:
  config: ""
type: fabric8.io/jenkins-ssh-config
---
# Source: fabric8-platform/templates/catalog-apiman-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 0b90360981bed67ebde7b71cc6a96d34cca3dcc6
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.168
    maven.fabric8.io/app-catalog: "true"
  labels:
    component: ApimanManagerAPI
    provider: fabric8
    project: apiman
    version: 2.2.168
    expose: "true"
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-apiman
data:
  catalog-apiman.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.168"
      finalizers: []
      labels:
        component: "ApimanManagerAPI"
        provider: "fabric8"
        project: "apiman"
        version: "2.2.168"
        expose: "true"
        group: "io.fabric8.ipaas.apps"
      name: "apiman"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/description-language: "SwaggerJSON"
          api.service.kubernetes.io/path: "apiman"
          api.service.kubernetes.io/protocol: "REST"
          api.service.kubernetes.io/description-path: "apiman/swagger.json"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          component: "ApimanManagerAPI"
          provider: "fabric8"
          project: "apiman"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "apiman"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "default"
          port: 7070
          protocol: "TCP"
          targetPort: 7070
        selector:
          project: "apiman"
          component: "ApimanManagerAPI"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/description-language: "SwaggerJSON"
          api.service.kubernetes.io/path: "api"
          api.service.kubernetes.io/protocol: "REST"
          api.service.kubernetes.io/description-path: "api/swagger.json"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "default"
          port: 7777
          protocol: "TCP"
          targetPort: 7777
        selector:
          project: "apiman-gateway"
          component: "ApimanGateway"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman&var-version=2.2.168"
        finalizers: []
        labels:
          component: "ApimanManagerAPI"
          provider: "fabric8"
          project: "apiman"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "apiman"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            component: "ApimanManagerAPI"
            provider: "fabric8"
            project: "apiman"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman&var-version=2.2.168"
            finalizers: []
            labels:
              component: "ApimanManagerAPI"
              provider: "fabric8"
              project: "apiman"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "AB_JOLOKIA_AUTH_OPENSHIFT"
                value: "true"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/apiman:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "apiman"
              ports:
              - containerPort: 7070
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/apiman/"
                  port: 7070
                initialDelaySeconds: 15
                timeoutSeconds: 60
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            component: "ApimanGateway"
            provider: "fabric8"
            project: "apiman-gateway"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              component: "ApimanGateway"
              provider: "fabric8"
              project: "apiman-gateway"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "AB_JOLOKIA_AUTH_OPENSHIFT"
                value: "true"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/apiman-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "apiman-gateway"
              ports:
              - containerPort: 7777
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/api/system/status"
                  port: 7777
                initialDelaySeconds: 5
                timeoutSeconds: 60
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "elasticsearch-v1"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch-v1"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE_DNS"
                value: "elasticsearch-v1-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-v1:2.2.168"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch-v1"
              ports:
              - containerPort: 9200
                name: "http"
              - containerPort: 9300
                name: "transport"
              readinessProbe:
                exec:
                  command:
                  - "/probe.sh"
                  - "http"
                initialDelaySeconds: 30
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "elasticsearch-data"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "elasticsearch-data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-apiman-gateway-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 0b90360981bed67ebde7b71cc6a96d34cca3dcc6
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.168
    maven.fabric8.io/app-catalog: "true"
  labels:
    component: ApimanGateway
    provider: fabric8
    project: apiman-gateway
    version: 2.2.168
    expose: "true"
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-apiman-gateway
data:
  catalog-apiman-gateway.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.168"
      finalizers: []
      labels:
        component: "ApimanGateway"
        provider: "fabric8"
        project: "apiman-gateway"
        version: "2.2.168"
        expose: "true"
        group: "io.fabric8.ipaas.apps"
      name: "apiman-gateway"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/description-language: "SwaggerJSON"
          api.service.kubernetes.io/path: "api"
          api.service.kubernetes.io/protocol: "REST"
          api.service.kubernetes.io/description-path: "api/swagger.json"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "default"
          port: 7777
          protocol: "TCP"
          targetPort: 7777
        selector:
          project: "apiman-gateway"
          component: "ApimanGateway"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            component: "ApimanGateway"
            provider: "fabric8"
            project: "apiman-gateway"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              component: "ApimanGateway"
              provider: "fabric8"
              project: "apiman-gateway"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "AB_JOLOKIA_AUTH_OPENSHIFT"
                value: "true"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/apiman-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "apiman-gateway"
              ports:
              - containerPort: 7777
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/api/system/status"
                  port: 7777
                initialDelaySeconds: 5
                timeoutSeconds: 60
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-artifactory-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: artifactory
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-artifactory
data:
  catalog-artifactory.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "artifactory"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "artifactory"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "artifactory"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "artifactory"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8081
        selector:
          project: "artifactory"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=artifactory&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "artifactory"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "artifactory"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "artifactory"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=artifactory&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "artifactory"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "jfrog-docker-registry.bintray.io/artifactory/artifactory-oss"
              name: "artifactory"
              ports:
              - containerPort: 8081
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-cd-pipeline-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: cd-pipeline
    repository: gogs
    scm: git
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-cd-pipeline
data:
  catalog-cd-pipeline.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "cd-pipeline"
        repository: "gogs"
        scm: "git"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "cd-pipeline"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          repository: "gogs"
          scm: "git"
          version: "2.2.311"
        name: "default-gogs-git"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        password: "UmVkSGF0JDE="
        username: "Z29nc2FkbWlu"
      stringData: {}
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-docker-cfg"
        ownerReferences: []
      data:
        config.json: ""
      stringData: {}
      type: "fabric8.io/jenkins-docker-cfg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-git-ssh"
        ownerReferences: []
      data:
        ssh-key: ""
        ssh-key.pub: ""
      stringData: {}
      type: "fabric8.io/jenkins-git-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-hub-api-token"
        ownerReferences: []
      data:
        hub: ""
      stringData: {}
      type: "fabric8.io/jenkins-hub-api-token"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-master-ssh"
        ownerReferences: []
      data:
        idrsa: ""
      stringData: {}
      type: "fabric8.io/jenkins-master-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-maven-settings"
        ownerReferences: []
      data:
        settings.xml: "PHNldHRpbmdzPgogIDwhLS0gc2V0cyB0aGUgbG9jYWwgbWF2ZW4gcmVwb3NpdG9yeSBvdXRzaWRlIG9mIHRoZSB+Ly5tMiBmb2xkZXIgZm9yIGVhc2llciBtb3VudGluZyBvZiBzZWNyZXRzIGFuZCByZXBvIC0tPgogIDxsb2NhbFJlcG9zaXRvcnk+JHt1c2VyLmhvbWV9Ly5tdm5yZXBvc2l0b3J5PC9sb2NhbFJlcG9zaXRvcnk+CiAgPG1pcnJvcnM+CiAgICA8bWlycm9yPgogICAgICA8aWQ+bmV4dXM8L2lkPgogICAgICA8bWlycm9yT2Y+ZXh0ZXJuYWw6KjwvbWlycm9yT2Y+CiAgICAgIDx1cmw+aHR0cDovL25leHVzL2NvbnRlbnQvZ3JvdXBzL3B1YmxpYzwvdXJsPgogICAgPC9taXJyb3I+CiAgPC9taXJyb3JzPgoKICA8IS0tIGxldHMgZGlzYWJsZSB0aGUgZG93bmxvYWQgcHJvZ3Jlc3MgaW5kaWNhdG9yIHRoYXQgZmlsbHMgdXAgbG9ncyAtLT4KICA8aW50ZXJhY3RpdmVNb2RlPmZhbHNlPC9pbnRlcmFjdGl2ZU1vZGU+CgogIDxzZXJ2ZXJzPgogICAgPHNlcnZlcj4KICAgICAgPGlkPmxvY2FsLW5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm9zcy1zb25hdHlwZS1zdGFnaW5nPC9pZD4KICAgICAgPHVzZXJuYW1lPjwvdXNlcm5hbWU+CiAgICAgIDxwYXNzd29yZD48L3Bhc3N3b3JkPgogICAgPC9zZXJ2ZXI+CiAgPC9zZXJ2ZXJzPgoKICA8cHJvZmlsZXM+CiAgICA8cHJvZmlsZT4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGFsdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc3RhZ2luZy88L2FsdERlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRSZWxlYXNlRGVwbG95bWVudFJlcG9zaXRvcnk+bG9jYWwtbmV4dXM6OmRlZmF1bHQ6Omh0dHA6Ly9uZXh1cy9jb250ZW50L3JlcG9zaXRvcmllcy9zdGFnaW5nLzwvYWx0UmVsZWFzZURlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRTbmFwc2hvdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc25hcHNob3RzLzwvYWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT4KICAgICAgPC9wcm9wZXJ0aWVzPgogICAgICA8cmVwb3NpdG9yaWVzPgogICAgICAgIDxyZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3JlcG9zaXRvcnk+CiAgICAgIDwvcmVwb3NpdG9yaWVzPgogICAgICA8cGx1Z2luUmVwb3NpdG9yaWVzPgogICAgICAgIDxwbHVnaW5SZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3BsdWdpblJlcG9zaXRvcnk+CiAgICAgIDwvcGx1Z2luUmVwb3NpdG9yaWVzPgogICAgPC9wcm9maWxlPgogICAgPHByb2ZpbGU+CiAgICAgIDxpZD5yZWxlYXNlPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGdwZy5leGVjdXRhYmxlPmdwZzwvZ3BnLmV4ZWN1dGFibGU+CiAgICAgICAgPGdwZy5wYXNzcGhyYXNlPm15c2VjcmV0cGFzc3BocmFzZTwvZ3BnLnBhc3NwaHJhc2U+CiAgICAgIDwvcHJvcGVydGllcz4KICAgIDwvcHJvZmlsZT4KICA8L3Byb2ZpbGVzPgogIDxhY3RpdmVQcm9maWxlcz4KICAgIDwhLS1tYWtlIHRoZSBwcm9maWxlIGFjdGl2ZSBhbGwgdGhlIHRpbWUgLS0+CiAgICA8YWN0aXZlUHJvZmlsZT5uZXh1czwvYWN0aXZlUHJvZmlsZT4KICA8L2FjdGl2ZVByb2ZpbGVzPgo8L3NldHRpbmdzPgo="
      stringData: {}
      type: "fabric8.io/secret-maven-settings"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-release-gpg"
        ownerReferences: []
      data:
        trustdb.gpg: ""
        pubring.gpg: ""
        gpg.conf: ""
        secring.gpg: ""
      stringData: {}
      type: "fabric8.io/jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-ssh-config"
        ownerReferences: []
      data:
        config: ""
      stringData: {}
      type: "fabric8.io/jenkins-ssh-config"
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          version: "2.2.311"
        name: "gogs"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      imagePullSecrets: []
      secrets:
      - name: "jenkins-git-ssh"
      - name: "jenkins-master-ssh"
      - name: "jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 5000
        selector:
          project: "fabric8-docker-registry"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
          expose: "true"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "fabric8-forge"
          provider: "fabric8"
          group: "io.fabric8.forge.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 22
          protocol: "TCP"
          targetPort: 2222
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          api.service.kubernetes.io/path: "/blue"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jnlp"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "agent"
          port: 50000
          protocol: "TCP"
          targetPort: 50000
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "nexus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8081
        selector:
          project: "nexus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "5Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jobs"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-mvn-local-repo"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteMany"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-workspace"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.fabric8-forge/summary: "Fabric8 :: Forge"
          description: "Fabric8 :: Forge"
          fabric8.fabric8-forge/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/yaml-schema: "type: object\nproperties:\n  jenkinsfile-library-git-repository:\n\
            \    type: string\n    description: The git clone URL for the library of Jenkinsfiles\
            \ used to associate CD pipelines with projects\n      reused across projects\n\
            \    default: https://github.com/fabric8io/jenkins-workflow-library.git\n\
            \  use-external-git-address:\n    type: boolean\n    description: Whether\
            \ we should use the external git URLs. Using internal tends to avoid DNS issues\
            \ of kubernetes pods not seeing external host names.\n  jenkins-gogs-user:\n\
            \    type: string\n    description: The user name for Jenkins to login to\
            \ Gogs\n    default: gogsadmin\n  jenkins-gogs-email:\n    type: string\n\
            \    description: The email address of the Jenkins user on Gogs\n    default:\
            \ 'gogsadmin@fabric8.local'\n  jenkins-gogs-password:\n    type: string\n\
            \    description: The password for Jenkins to login to Gogs\n    default:\
            \ RedHat$1\n  fabric8-default-environments:\n    type: string\n    description:\
            \ The list of default environment names to actual kubernetes namespaces\n\
            \    default: Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod\n"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      data:
        fabric8-default-environments: "Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod"
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        jenkinsfile-library-git-repository: "https://github.com/fabric8io/fabric8-jenkinsfile-library.git"
        jenkinsfile-library-git-tag: "v2.2.311"
        use-external-git-address: "false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-git-app-secrets"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        gogs: "default-git-gogs"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gogs/summary: "[Gogs](http://gogs/) - A self-hosted Git service written\
            \ in Go"
          description: "Gogs is a self-hosted Git service written in Go.\n\nMore details\
            \ on the <a href=\"http://gogs.io/\" target=\"gogs\">Gogs home page</a>.\n"
          fabric8.gogs/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          expose.config.fabric8.io/url-key: "gogs-server--root-url"
          expose.config.fabric8.io/oauth-authorize-url-key: "oauth-authorize-uri"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"GOGS_SERVER__ROOT_URL\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"The root URL for the gogs server\"\n    },\n    \"DOMAIN\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The domain\
            \ name applications are installed on\",\n      \"default\" : \"vagrant.f8\"\
            \n    },\n    \"ADMIN_USER_EMAIL\" : {\n      \"type\" : \"string\",\n   \
            \   \"description\" : \"The email address of the admin user on Gogs\",\n \
            \     \"default\" : \"gogsadmin@fabric8.local\"\n    },\n    \"ADMIN_USER_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n    \"GOGS_SERVER__PROTOCOL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The protocol\
            \ for gogs to use; either http or https\",\n      \"default\" : \"http\"\n\
            \    },\n    \"GOGS_OAUTH_OPENSHIFT__ENABLED\" : {\n      \"type\" : \"string\"\
            ,\n      \"default\" : \"true\"\n    },\n    \"ADMIN_USER_CREATE\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"Should we create an\
            \ admin user on startup\",\n      \"default\" : \"true\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__TOKEN_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__SCOPES\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__AUTH_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_WEBHOOK__TASK_INTERVAL\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_WEBHOOK__SKIP_TLS_VERIFY\" : {\n      \"type\" : \"string\",\n\
            \      \"default\" : \"true\"\n    },\n    \"GOGS_SERVER__DOMAIN\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"The gogs server name\"\
            ,\n      \"default\" : \"gogs.vagrant.f8\"\n    },\n    \"ADMIN_USER_NAME\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The user name\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"GOGS_OAUTH__ENABLED\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_OAUTH_TWITTER__ENABLED\" : {\n      \"type\" : \"string\",\n \
            \     \"default\" : \"false\"\n    },\n    \"KUBERNETES_ADMIN_USER\" : {\n\
            \      \"type\" : \"string\",\n      \"description\" : \"The default Kubernetes\
            \ admin user\",\n      \"default\" : \"admin\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__CLIENT_ID\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"gogs\"\n    }\n\
            \  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      data:
        admin-user-create: "true"
        admin-user-email: "gogsadmin@fabric8.local"
        admin-user-name: "gogsadmin"
        admin-user-password: "RedHat$1"
        gogs-oauth--enabled: "true"
        gogs-oauth-openshift--auth-url: ""
        gogs-oauth-openshift--client-id: "gogs"
        gogs-oauth-openshift--enabled: "true"
        gogs-oauth-openshift--scopes: ""
        gogs-oauth-openshift--token-url: ""
        gogs-oauth-twitter--enabled: "false"
        gogs-server--root-url: ""
        gogs-webhook--skip-tls-verify: "true"
        gogs-webhook--task-interval: "true"
        kubernetes-admin-user: "admin"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.jenkins/summary: "[Jenkins](http://jenkins-ci.org/) extendable open\
            \ source continuous integration server"
          description: "Jenkins CI is a leading open-source continuous integration server.\
            \ Built with Java, it provides 985 plugins to support building and testing\
            \ virtually any project.\n\n[http://jenkins-ci.org/](http://jenkins-ci.org/)"
          fabric8.jenkins/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"PIPELINE_ELASTICSEARCH_PROTOCOL\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"Protocol used to connect to elasticsearch\",\n\
            \      \"default\" : \"http\"\n    },\n    \"JENKINS_GOGS_USER\" : {\n   \
            \   \"type\" : \"string\",\n      \"description\" : \"The user name for Jenkins\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"JENKINS_GOGS_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ for Jenkins to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n\
            \    \"PIPELINE_ELASTICSEARCH_HOST\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"Elasticsearch hostname used for pipeline events\"\
            ,\n      \"default\" : \"elasticsearch\"\n    },\n    \"JENKINS_GOGS_EMAIL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The email address\
            \ of the Jenkins user on Gogs\",\n      \"default\" : \"gogsadmin@fabric8.local\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      data:
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        pipeline-elasticsearch-protocol: "http"
        pipeline-elasticsearch-host: "elasticsearch"
        project-version: "2.2.311"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-docker-registry"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/registry\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/registry\"\
                ,\"name\":\"fabric8-docker-registry-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-docker-registry"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "registry:2"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-docker-registry"
              ports:
              - containerPort: 5000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/lib/registry"
                name: "fabric8-docker-registry-storage"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "fabric8-docker-registry-storage"
              persistentVolumeClaim:
                claimName: "fabric8-docker-registry-storage"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
          fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-forge"
            group: "io.fabric8.forge.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
              fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
              fabric8.io/git-branch: "release-v2.3.88"
              fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-forge"
              version: "2.3.88"
              group: "io.fabric8.forge.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "FABRIC8_DEFAULT_ENVIRONMENTS"
                valueFrom:
                  configMapKeyRef:
                    key: "fabric8-default-environments"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_REPOSITORY"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-repository"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_TAG"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-tag"
                    name: "fabric8-forge"
              - name: "USE_EXTERNAL_GIT_ADDRESS"
                valueFrom:
                  configMapKeyRef:
                    key: "use-external-git-address"
                    name: "fabric8-forge"
              - name: "KUBERNETES_TRUST_CERTIFICATES"
                value: "true"
              - name: "SKIP_TLS_VERIFY"
                value: "true"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "fabric8-forge"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "fabric8-forge"
              - name: "FABRIC8_ARCHETYPES_VERSION"
                value: "2.2.195"
              - name: "JAVA_OPTIONS"
                value: "-Dorg.apache.maven.log_transfer=true -Dorg.apache.cxf.logging.enabled=false"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "fabric8-forge"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default.svc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/fabric8-forge:2.3.88"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-forge"
              ports:
              - containerPort: 8080
                name: "http"
                protocol: "TCP"
              - containerPort: 8778
                name: "jolokia"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_ping"
                  port: 8080
                initialDelaySeconds: 30
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "gogs"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gogs"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              configmap.fabric8.io/update-on-change: "gogs"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /app/gogs/data\"],\"volumeMounts\":[{\"mountPath\":\"/app/gogs/data\"\
                ,\"name\":\"gogs-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gogs"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "GOGS_SERVER__ROOT_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "gogs-server--root-url"
                    name: "gogs"
              - name: "ADMIN_USER_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-email"
                    name: "gogs"
              - name: "ADMIN_USER_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-password"
                    name: "gogs"
              - name: "ADMIN_USER_CREATE"
                value: "true"
              - name: "GOGS_WEBHOOK__TASK_INTERVAL"
                value: "true"
              - name: "GOGS_WEBHOOK__SKIP_TLS_VERIFY"
                value: "true"
              - name: "ADMIN_USER_NAME"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-name"
                    name: "gogs"
              - name: "KUBERNETES_ADMIN_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "kubernetes-admin-user"
                    name: "gogs"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/gogs:v0.9.97"
              imagePullPolicy: "IfNotPresent"
              name: "gogs"
              ports:
              - containerPort: 2222
                name: "ssh"
              - containerPort: 3000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/app/gogs/data"
                name: "gogs-data"
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "gogs"
            volumes:
            - name: "gogs-data"
              persistentVolumeClaim:
                claimName: "gogs-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "jenkins"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/secret-ssh-key: "jenkins-git-ssh,jenkins-master-ssh"
              fabric8.io/secret-ssh-config: "jenkins-ssh-config"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
              fabric8.io/secret-gpg-key: "jenkins-release-gpg"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
              fabric8.io/secret-maven-settings: "jenkins-maven-settings"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/secret-hub-api-token: "jenkins-hub-api-token"
              fabric8.io/secret-docker-cfg: "jenkins-docker-cfg"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/jenkins_home/workspace\",\"/var/jenkins_home/jobs\"],\"volumeMounts\"\
                :[{\"mountPath\":\"/var/jenkins_home/jobs\",\"name\":\"jenkins-jobs\"\
                },{\"mountPath\":\"/var/jenkins_home/workspace\",\"name\":\"jenkins-workspace\"\
                }]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "jenkins"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROJECT_VERSION"
                valueFrom:
                  configMapKeyRef:
                    key: "project-version"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_PROTOCOL"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-protocol"
                    name: "jenkins"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "jenkins"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "jenkins"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-host"
                    name: "jenkins"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default"
              image: "fabric8/jenkins-docker:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "jenkins"
              ports:
              - containerPort: 50000
                name: "slave"
              - containerPort: 8080
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 20
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/jenkins_home/jobs"
                name: "jenkins-jobs"
                readOnly: false
              - mountPath: "/var/jenkins_home/workspace"
                name: "jenkins-workspace"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "jenkins"
            volumes:
            - name: "jenkins-jobs"
              persistentVolumeClaim:
                claimName: "jenkins-jobs"
            - name: "jenkins-workspace"
              persistentVolumeClaim:
                claimName: "jenkins-workspace"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "nexus"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /sonatype-work/storage\"],\"volumeMounts\":[{\"mountPath\":\"/sonatype-work/storage\"\
                ,\"name\":\"nexus-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "nexus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/nexus:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 180
                timeoutSeconds: 10
              name: "nexus"
              ports:
              - containerPort: 8081
                name: "http"
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 60
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/sonatype-work/storage"
                name: "nexus-storage"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "nexus-storage"
              persistentVolumeClaim:
                claimName: "nexus-storage"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-chaos-monkey-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: chaos-monkey
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-chaos-monkey
data:
  catalog-chaos-monkey.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "chaos-monkey"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "chaos-monkey"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "chaos-monkey"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "chaos-monkey"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "chaos-monkey"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.chaos-monkey/summary: "Kills random pods for chaos fun!"
          description: "Randomly kills pods to help check your environment can withstand\
            \ failures"
          fabric8.chaos-monkey/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"CHAOS_MONKEY_INCLUDES\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"Comma separated list of patterns for pods which should be\
            \ considered for deletion\",\n      \"default\" : \"*\"\n    },\n    \"CHAOS_MONKEY_EXCLUDES\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Comma separated\
            \ list of patterns for pods which should not be deleted\",\n      \"default\"\
            \ : \"letschat*,gogs*\"\n    },\n    \"CHAOS_MONKEY_ROOM\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The chat room to talk to\",\n \
            \     \"default\" : \"#fabric8_${namespace}\"\n    },\n    \"CHAOS_MONKEY_KILL_FREQUENCY_SECONDS\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The number\
            \ of seconds between a kill\",\n      \"default\" : \"60\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "chaos-monkey"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "chaos-monkey"
        ownerReferences: []
      data:
        chaos-monkey-kill-frequency-seconds: "60"
        chaos-monkey-excludes: "letschat*,gogs*"
        chaos-monkey-room: "#fabric8_${namespace}"
        chaos-monkey-includes: "*"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=chaos-monkey&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "chaos-monkey"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "chaos-monkey"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "chaos-monkey"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=chaos-monkey&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "chaos-monkey"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "CHAOS_MONKEY_INCLUDES"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-includes"
                    name: "chaos-monkey"
              - name: "CHAOS_MONKEY_EXCLUDES"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-excludes"
                    name: "chaos-monkey"
              - name: "CHAOS_MONKEY_ROOM"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-room"
                    name: "chaos-monkey"
              - name: "CHAOS_MONKEY_KILL_FREQUENCY_SECONDS"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-kill-frequency-seconds"
                    name: "chaos-monkey"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default.svc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_USERNAME"
                value: ""
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_PASSWORD"
                value: ""
              image: "fabric8/chaos-monkey:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "chaos-monkey"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-chat-irc-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: chat-irc
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-chat-irc
data:
  catalog-chat-irc.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "chat-irc"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "chat-irc"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-irc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "hubot"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "hubot-irc"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "hubot-notifier"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-irc/summary: "[Hubot](http://hubot.github.com) IRC chat bot"
          description: "Chat bot app using [Hubot](https://hubot.github.com/) and an IRC\
            \ server to communicate with fabric8."
          fabric8.hubot-irc/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_IRC_USESSL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"Use SSL\",\n      \"default\" : \"1\"\n    },\n    \"HUBOT_GRAFANA_API_KEY\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"API key for\
            \ a particular user\"\n    },\n    \"HUBOT_IRC_NICK\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The name that hubot should joing\
            \ the room as\",\n      \"default\" : \"fabric8\"\n    },\n    \"HUBOT_IRC_DEBUG\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Enables debug\
            \ logging\",\n      \"default\" : \"true\"\n    },\n    \"HUBOT_IRC_ROOMS\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"List of rooms\
            \ to join including '#' prefix\",\n      \"default\" : \"#fabric8_default,#random\"\
            \n    },\n    \"HUBOT_GRAFANA_HOST\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"Host for your Grafana 2.0 install, e.g. 'http://play.grafana.org'\"\
            \n    },\n    \"HUBOT_IRC_UNFLOOD\" : {\n      \"type\" : \"string\",\n  \
            \    \"description\" : \"Unflood\",\n      \"default\" : \"false\"\n    },\n\
            \    \"HUBOT_JENKINS_URL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The URL for the Jenkins CI server\",\n      \"default\" : \"http://jenkins\"\
            \n    },\n    \"HUBOT_IRC_SERVER\" : {\n      \"type\" : \"string\",\n   \
            \   \"description\" : \"The IRC server\",\n      \"default\" : \"irc.freenode.net\"\
            \n    },\n    \"HUBOT_IRC_NICKSERV_PASSWORD\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"IRC nick password\"\n    },\n    \"HUBOT_IRC_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"IRC password\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-irc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-irc"
        ownerReferences: []
      data:
        hubot-irc-server: "irc.freenode.net"
        hubot-irc-password: ""
        hubot-irc-unflood: "false"
        hubot-grafana-host: ""
        hubot-jenkins-url: "http://jenkins"
        hubot-irc-usessl: "1"
        hubot-irc-debug: "true"
        hubot-irc-nickserv-password: ""
        hubot-grafana-api-key: ""
        hubot-irc-rooms: "#fabric8_default,#random"
        hubot-irc-nick: "fabric8"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-notifier/summary: "Watches the OpenShift environment and notifies\
            \ Hubot of events such as builds completing or failing"
          description: "Watches the OpenShift environment and notifies Hubot of events\
            \ such as builds completing or failing."
          fabric8.hubot-notifier/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"KUBERNETES_DNS_DOMAIN\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The DNS domain added to the serviceName.namespace.svc.\
            \ to make the DNS name\",\n      \"default\" : \"cluster.local\"\n    },\n\
            \    \"HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        kubernetes-dns-domain: "cluster.local"
        hubot-username: "fabric8"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-irc&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-irc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-irc"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-irc"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-irc&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-irc"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_IRC_USESSL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-usessl"
                    name: "hubot-irc"
              - name: "HUBOT_GRAFANA_API_KEY"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-api-key"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_NICK"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-nick"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_DEBUG"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-debug"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_ROOMS"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-rooms"
                    name: "hubot-irc"
              - name: "HUBOT_GRAFANA_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-host"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_UNFLOOD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-unflood"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_SERVER"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-server"
                    name: "hubot-irc"
              - name: "HUBOT_JENKINS_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-url"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_NICKSERV_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-nickserv-password"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-password"
                    name: "hubot-irc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/hubot-irc:2.2.311"
              name: "hubot-irc"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-notifier"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-notifier"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_KUBERNETES_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "hubot-notifier"
              - name: "HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "hubot-notifier"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              image: "fabric8/hubot-notifier:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "hubot-notifier"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-chat-letschat-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    name: letschat
    project: chat-letschat
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-chat-letschat
data:
  catalog-chat-letschat.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        name: "letschat"
        project: "chat-letschat"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "chat-letschat"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "hubot"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "hubot-letschat"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "hubot-letschat"
          provider: "fabric8"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-jenkins-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 5555
          protocol: "TCP"
          targetPort: 5555
        selector:
          project: "hubot-letschat"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "hubot-notifier"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 5000
        selector:
          name: "letschat"
          project: "letschat"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-letschat/summary: "[Hubot](http://hubot.github.com) chat bot for\
            \ Lets Chat"
          description: "Chat bot app using [Hubot](https://hubot.github.com/) for [Lets\
            \ Chat](http://sdelements.github.io/lets-chat/)"
          fabric8.hubot-letschat/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_GRAFANA_API_KEY\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"API key for a particular user\"\n    },\n    \"LETSCHAT_HUBOT_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ for the Fabric8 Hubot bot\",\n      \"default\" : \"RedHat$1\"\n    },\n\
            \    \"HUBOT_GRAFANA_HOST\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"Host for your Grafana 2.0 install, e.g. 'http://play.grafana.org'\"\n\
            \    },\n    \"LETSCHAT_DEFAULT_ROOMS\" : {\n      \"type\" : \"string\",\n\
            \      \"description\" : \"Comma delimited list of rooms for hubot to join\
            \ on startup\",\n      \"default\" : \"fabric8_default\"\n    },\n    \"HUBOT_JENKINS_URL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The URL for\
            \ the Jenkins CI server\",\n      \"default\" : \"http://jenkins.default.svc.cluster.local\"\
            \n    },\n    \"LETSCHAT_HUBOT_USERNAME\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"The username for the Fabric8 Hubot bot\",\n \
            \     \"default\" : \"fabric8\"\n    },\n    \"LETSCHAT_HUBOT_SCRIPTS\" :\
            \ {\n      \"type\" : \"string\",\n      \"description\" : \"Coffeescripts\
            \ for hubot\",\n      \"default\" : \"https://github.com/fabric8io/fabric8-hubot-scripts.git\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-letschat"
        ownerReferences: []
      data:
        hubot-grafana-host: ""
        hubot-grafana-api-key: ""
        hubot-jenkins-url: "http://jenkins"
        hubot-jenkins-auth: ""
        letschat-hubot-username: "fabric8"
        letschat-hubot-password: "RedHat$1"
        letschat-default-rooms: "fabric8_default"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-notifier/summary: "Watches the OpenShift environment and notifies\
            \ Hubot of events such as builds completing or failing"
          description: "Watches the OpenShift environment and notifies Hubot of events\
            \ such as builds completing or failing."
          fabric8.hubot-notifier/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"KUBERNETES_DNS_DOMAIN\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The DNS domain added to the serviceName.namespace.svc.\
            \ to make the DNS name\",\n      \"default\" : \"cluster.local\"\n    },\n\
            \    \"HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        kubernetes-dns-domain: "cluster.local"
        hubot-username: "fabric8"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"LETSCHAT_DEFAULT_ROOMS\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"Default rooms to create and for\
            \ hubot to join\",\n      \"default\" : \"fabric8_default\"\n    },\n    \"\
            HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          name: "letschat"
          provider: "fabric8"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        hubot-username: "fabric8"
        letschat-default-rooms: "fabric8_default"
        hubot-token: ""
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-letschat&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-letschat"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-letschat"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-letschat&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-letschat"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "LETSCHAT_HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-hubot-username"
                    name: "hubot-letschat"
              - name: "LETSCHAT_HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-hubot-password"
                    name: "hubot-letschat"
              - name: "HUBOT_JENKINS_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-url"
                    name: "hubot-letschat"
              - name: "HUBOT_JENKINS_AUTH"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-auth"
                    name: "hubot-letschat"
              - name: "HUBOT_LCB_ROOMS"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-default-rooms"
                    name: "hubot-letschat"
              - name: "HUBOT_GRAFANA_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-host"
                    name: "hubot-letschat"
              - name: "HUBOT_GRAFANA_API_KEY"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-api-key"
                    name: "hubot-letschat"
              image: "fabric8/hubot-letschat:v1.0.0"
              name: "hubot-letschat"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-notifier"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-notifier"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_KUBERNETES_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "hubot-notifier"
              - name: "HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "hubot-notifier"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              image: "fabric8/hubot-notifier:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "hubot-notifier"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=letschat&var-version=2.2.311"
        finalizers: []
        labels:
          name: "letschat"
          provider: "fabric8"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            name: "letschat"
            project: "letschat"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=letschat&var-version=2.2.311"
            finalizers: []
            labels:
              name: "letschat"
              provider: "fabric8"
              project: "letschat"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "letschat"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "mongo"
              name: "letschat-mongodb"
              ports:
              - containerPort: 27017
                protocol: "TCP"
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "LETSCHAT_CREATE_HUBOT_USER"
                value: "true"
              - name: "LETSCHAT_HUBOT_TOKEN"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-token"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_EMAIL"
                value: "fabric8-admin@googlegroups.com"
              - name: "LETSCHAT_HUBOT_FIRST_NAME"
                value: "fabric8"
              - name: "LETSCHAT_HUBOT_LAST_NAME"
                value: "rocks"
              - name: "LETSCHAT_HUBOT_DISPLAY_NAME"
                value: "fabric8"
              - name: "LETSCHAT_DEFAULT_ROOMS"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-default-rooms"
                    name: "letschat"
              - name: "LCB_NOROBOTS"
                value: "false"
              - name: "LCB_FILES_ENABLE"
                value: "true"
              - name: "LCB_DATABASE_URI"
                value: "mongodb://127.0.0.1:27017/letschat"
              image: "fabric8/lets-chat:2.2.311"
              name: "letschat"
              ports:
              - containerPort: 5000
                name: "commplex-main"
                protocol: "TCP"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-chat-slack-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    name: hubot-slack
    project: chat-slack
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-chat-slack
data:
  catalog-chat-slack.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        name: "hubot-slack"
        project: "chat-slack"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "chat-slack"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "hubot-slack"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 8080
        selector:
          name: "hubot-slack"
          project: "hubot-slack"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "hubot-notifier"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-notifier/summary: "Watches the OpenShift environment and notifies\
            \ Hubot of events such as builds completing or failing"
          description: "Watches the OpenShift environment and notifies Hubot of events\
            \ such as builds completing or failing."
          fabric8.hubot-notifier/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"KUBERNETES_DNS_DOMAIN\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The DNS domain added to the serviceName.namespace.svc.\
            \ to make the DNS name\",\n      \"default\" : \"cluster.local\"\n    },\n\
            \    \"HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        kubernetes-dns-domain: "cluster.local"
        hubot-username: "fabric8"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_SLACK_GRAFANA_HOST\" : {\n      \"type\" : \"string\",\n    \
            \  \"description\" : \"Host for your Grafana 2.0 install, e.g. 'http://play.grafana.org'\"\
            ,\n      \"default\" : \"http://grafana.default.svc.cluster.local\"\n    },\n\
            \    \"HUBOT_SLACK_GRAFANA_API_KEY\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"API key for a particular user\"\n    },\n    \"\
            HUBOT_JENKINS_URL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The URL for the Jenkins CI server\",\n      \"default\" : \"http://jenkins.default.svc.cluster.local\"\
            \n    },\n    \"HUBOT_SLACK_TOKEN\" : {\n      \"type\" : \"string\",\n  \
            \    \"description\" : \"The token for Hubot to login to Slack\"\n    }\n\
            \  }\n}"
        finalizers: []
        labels:
          name: "hubot-slack"
          provider: "fabric8"
          project: "hubot-slack"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-slack"
        ownerReferences: []
      data:
        hubot-jenkins-url: "http://jenkins/"
        hubot-grafana-host: "http://grafana/"
        hubot-slack-token: ""
        hubot-grafana-api-key: ""
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-notifier"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-notifier"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_KUBERNETES_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "hubot-notifier"
              - name: "HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "hubot-notifier"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              image: "fabric8/hubot-notifier:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "hubot-notifier"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-slack&var-version=2.2.311"
        finalizers: []
        labels:
          name: "hubot-slack"
          provider: "fabric8"
          project: "hubot-slack"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-slack"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            name: "hubot-slack"
            project: "hubot-slack"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-slack&var-version=2.2.311"
            finalizers: []
            labels:
              name: "hubot-slack"
              provider: "fabric8"
              project: "hubot-slack"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "hubot-slack"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_GRAFANA_API_KEY"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-api-key"
                    name: "hubot-slack"
              - name: "HUBOT_SLACK_TOKEN"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-slack-token"
                    name: "hubot-slack"
              - name: "HUBOT_GRAFANA_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-host"
                    name: "hubot-slack"
              - name: "HUBOT_JENKINS_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-url"
                    name: "hubot-slack"
              image: "fabric8/hubot-slack:2.2.311"
              name: "hubot-slack"
              ports:
              - containerPort: 8080
                name: "http"
                protocol: "TCP"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-configmapcontroller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: configmapcontroller
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-configmapcontroller
data:
  catalog-configmapcontroller.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "configmapcontroller"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "configmapcontroller"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "configmapcontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "configmapcontroller"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=configmapcontroller&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "configmapcontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "configmapcontroller"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "configmapcontroller"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=configmapcontroller&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "configmapcontroller"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/configmapcontroller:2.3.5"
              name: "configmapcontroller"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "configmapcontroller"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-content-repository-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: content-repository
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-content-repository
data:
  catalog-content-repository.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "content-repository"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "content-repository"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "content-repository"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "content-repository"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 80
        selector:
          project: "content-repository"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=content-repository&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "content-repository"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "content-repository"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "content-repository"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=content-repository&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "content-repository"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/alpine-caddy:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "content-repository"
              ports:
              - containerPort: 80
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/www/html"
                name: "content"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "content"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-elasticsearch-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: elasticsearch
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-elasticsearch
data:
  catalog-elasticsearch.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "elasticsearch"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "elasticsearch"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "discovery"
          port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "es-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "10Gi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "elasticsearch"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /usr/share/elasticsearch/data\"],\"volumeMounts\":[{\"mountPath\":\"/usr/share/elasticsearch/data\"\
                ,\"name\":\"data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE"
                value: "elasticsearch-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-k8s:2.3.4"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_template/logstash"
                  port: 9200
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "data"
            - args: []
              command: []
              env: []
              image: "fabric8/elasticsearch-logstash-template:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "data"
              persistentVolumeClaim:
                claimName: "es-data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-elasticsearch-v1-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 0b90360981bed67ebde7b71cc6a96d34cca3dcc6
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.168
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: elasticsearch-v1
    version: 2.2.168
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-elasticsearch-v1
data:
  catalog-elasticsearch-v1.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.168"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "elasticsearch-v1"
        version: "2.2.168"
        group: "io.fabric8.ipaas.apps"
      name: "elasticsearch-v1"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "elasticsearch-v1"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch-v1"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE_DNS"
                value: "elasticsearch-v1-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-v1:2.2.168"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch-v1"
              ports:
              - containerPort: 9200
                name: "http"
              - containerPort: 9300
                name: "transport"
              readinessProbe:
                exec:
                  command:
                  - "/probe.sh"
                  - "http"
                initialDelaySeconds: 30
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "elasticsearch-data"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "elasticsearch-data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-exposecontroller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: exposecontroller
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-exposecontroller
data:
  catalog-exposecontroller.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "exposecontroller"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "exposecontroller"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "exposecontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "exposecontroller"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "exposecontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "exposecontroller"
        ownerReferences: []
      data:
        config.yml: "domain:\nexposer:\n"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "exposecontroller"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=exposecontroller&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "exposecontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "exposecontroller"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "exposecontroller"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png"
              configmap.fabric8.io/update-on-change: "exposecontroller"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=exposecontroller&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "exposecontroller"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/exposecontroller:2.3.2"
              livenessProbe:
                exec:
                  command:
                  - "cat"
                  - "/tmp/restarteveryday"
                initialDelaySeconds: 86164
              name: "exposecontroller"
              ports: []
              volumeMounts:
              - mountPath: "/etc/exposecontroller"
                name: "config-volume"
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "exposecontroller"
            volumes:
            - configMap:
                items: []
                name: "exposecontroller"
              name: "config-volume"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-fabric8-docker-registry-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: fabric8-docker-registry
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-fabric8-docker-registry
data:
  catalog-fabric8-docker-registry.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "fabric8-docker-registry"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "fabric8-docker-registry"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 5000
        selector:
          project: "fabric8-docker-registry"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "5Gi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-docker-registry"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/registry\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/registry\"\
                ,\"name\":\"fabric8-docker-registry-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-docker-registry"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "registry:2"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-docker-registry"
              ports:
              - containerPort: 5000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/lib/registry"
                name: "fabric8-docker-registry-storage"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "fabric8-docker-registry-storage"
              persistentVolumeClaim:
                claimName: "fabric8-docker-registry-storage"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-fabric8-forge-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: bad661f3285ecbcd6b7a9373e194bda075d832eb
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.3.88
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: fabric8-forge
    version: 2.3.88
    expose: "true"
    group: io.fabric8.forge.apps
    kind: catalog
  name: catalog-fabric8-forge
data:
  catalog-fabric8-forge.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
        fabric8.io/git-branch: "release-v2.3.88"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "fabric8-forge"
        version: "2.3.88"
        expose: "true"
        group: "io.fabric8.forge.apps"
      name: "fabric8-forge"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
          expose: "true"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "fabric8-forge"
          provider: "fabric8"
          group: "io.fabric8.forge.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.fabric8-forge/summary: "Fabric8 :: Forge"
          description: "Fabric8 :: Forge"
          fabric8.fabric8-forge/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/yaml-schema: "type: object\nproperties:\n  jenkinsfile-library-git-repository:\n\
            \    type: string\n    description: The git clone URL for the library of Jenkinsfiles\
            \ used to associate CD pipelines with projects\n      reused across projects\n\
            \    default: https://github.com/fabric8io/jenkins-workflow-library.git\n\
            \  use-external-git-address:\n    type: boolean\n    description: Whether\
            \ we should use the external git URLs. Using internal tends to avoid DNS issues\
            \ of kubernetes pods not seeing external host names.\n  jenkins-gogs-user:\n\
            \    type: string\n    description: The user name for Jenkins to login to\
            \ Gogs\n    default: gogsadmin\n  jenkins-gogs-email:\n    type: string\n\
            \    description: The email address of the Jenkins user on Gogs\n    default:\
            \ 'gogsadmin@fabric8.local'\n  jenkins-gogs-password:\n    type: string\n\
            \    description: The password for Jenkins to login to Gogs\n    default:\
            \ RedHat$1\n  fabric8-default-environments:\n    type: string\n    description:\
            \ The list of default environment names to actual kubernetes namespaces\n\
            \    default: Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod\n"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      data:
        fabric8-default-environments: "Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod"
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        jenkinsfile-library-git-repository: "https://github.com/fabric8io/fabric8-jenkinsfile-library.git"
        jenkinsfile-library-git-tag: "v2.2.311"
        use-external-git-address: "false"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
          fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-forge"
            group: "io.fabric8.forge.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
              fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
              fabric8.io/git-branch: "release-v2.3.88"
              fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-forge"
              version: "2.3.88"
              group: "io.fabric8.forge.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "FABRIC8_DEFAULT_ENVIRONMENTS"
                valueFrom:
                  configMapKeyRef:
                    key: "fabric8-default-environments"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_REPOSITORY"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-repository"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_TAG"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-tag"
                    name: "fabric8-forge"
              - name: "USE_EXTERNAL_GIT_ADDRESS"
                valueFrom:
                  configMapKeyRef:
                    key: "use-external-git-address"
                    name: "fabric8-forge"
              - name: "KUBERNETES_TRUST_CERTIFICATES"
                value: "true"
              - name: "SKIP_TLS_VERIFY"
                value: "true"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "fabric8-forge"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "fabric8-forge"
              - name: "FABRIC8_ARCHETYPES_VERSION"
                value: "2.2.195"
              - name: "JAVA_OPTIONS"
                value: "-Dorg.apache.maven.log_transfer=true -Dorg.apache.cxf.logging.enabled=false"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "fabric8-forge"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default.svc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/fabric8-forge:2.3.88"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-forge"
              ports:
              - containerPort: 8080
                name: "http"
                protocol: "TCP"
              - containerPort: 8778
                name: "jolokia"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_ping"
                  port: 8080
                initialDelaySeconds: 30
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-fluentd-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: fluentd
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-fluentd
data:
  catalog-fluentd.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "fluentd"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "fluentd"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fluentd"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_HOST"
                value: "elasticsearch"
              - name: "ELASTICSEARCH_PORT"
                value: "9200"
              image: "fabric8/fluentd-kubernetes:v1.19"
              name: "fluentd"
              ports:
              - containerPort: 24231
                name: "scrape"
              resources:
                limits:
                  cpu: "100m"
                requests: {}
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/log"
                name: "varlog"
              - mountPath: "/var/lib/docker/containers"
                name: "defaultdocker"
                readOnly: true
              - mountPath: "/mnt/ephemeral/docker/containers"
                name: "awsdocker"
                readOnly: true
              - mountPath: "/mnt/sda1/var/lib/docker/containers"
                name: "minikubedocker"
                readOnly: true
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fluentd"
            volumes:
            - hostPath:
                path: "/var/log"
              name: "varlog"
            - hostPath:
                path: "/var/lib/docker/containers"
              name: "defaultdocker"
            - hostPath:
                path: "/mnt/ephemeral/docker/containers"
              name: "awsdocker"
            - hostPath:
                path: "/mnt/sda1/var/lib/docker/containers"
              name: "minikubedocker"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-funktion-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 3c109abd7d3fc307fb3fdefd117bf8148491ee0b
    fabric8.io/iconUrl: https://funktion.fabric8.io/img/profile.png
    fabric8.io/git-branch: release-v2.4.24
    maven.fabric8.io/app-catalog: "true"
  labels:
    funktion.fabric8.io/kind: Runtime
    provider: fabric8
    project: funktion
    version: target
    group: io.fabric8.platform.apps
    kind: catalog
  name: catalog-funktion
data:
  catalog-funktion.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
        fabric8.io/iconUrl: "https://funktion.fabric8.io/img/profile.png"
        fabric8.io/git-branch: "release-v2.4.24"
      finalizers: []
      labels:
        funktion.fabric8.io/kind: "Runtime"
        provider: "fabric8"
        project: "funktion"
        version: "target"
        group: "io.fabric8.platform.apps"
      name: "funktion"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://funktion.fabric8.io/img/profile.png"
          funktion.fabric8.io/chromeDevTools: "true"
        finalizers: []
        labels:
          funktion.fabric8.io/kind: "Runtime"
          provider: "fabric8"
          project: "funktion-runtimes"
          version: "1.1.44"
          group: "io.fabric8.funktion"
        name: "nodejs"
        ownerReferences: []
      data:
        fileExtensions: "js"
        debugPort: "5858"
        deployment: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        name: connector\n\
          \        imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        deploymentDebug: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        command:\n     \
          \   - node\n        - '--inspect'\n        - '--debug=5858'\n        - server.js\n\
          \        - '--codepath=./funktion/source.js'\n        name: connector\n    \
          \    imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        service: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \nspec:\n  ports:\n  - port: 80\n    targetPort: 8888\n"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
          fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.4.24"
          fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-tag: "app-console-2.0.1"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "funktion-operator"
            provider: "fabric8"
            group: "io.fabric8.platform.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
              fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.4.24"
              fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-tag: "app-console-2.0.1"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "funktion-operator"
              version: "2.4.24"
              group: "io.fabric8.platform.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command:
              - "/bin/operator"
              - "operate"
              env: []
              image: "funktion/funktion:1.0.9"
              imagePullPolicy: "IfNotPresent"
              name: "funktion"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "funktion-operator"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-funktion-operator-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 3c109abd7d3fc307fb3fdefd117bf8148491ee0b
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.4.24
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: funktion-operator
    version: target
    group: io.fabric8.platform.apps
    kind: catalog
  name: catalog-funktion-operator
data:
  catalog-funktion-operator.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.4.24"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "funktion-operator"
        version: "target"
        group: "io.fabric8.platform.apps"
      name: "funktion-operator"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
          fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.4.24"
          fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-tag: "app-console-2.0.1"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "funktion-operator"
            provider: "fabric8"
            group: "io.fabric8.platform.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
              fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.4.24"
              fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-tag: "app-console-2.0.1"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "funktion-operator"
              version: "2.4.24"
              group: "io.fabric8.platform.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command:
              - "/bin/operator"
              - "operate"
              env: []
              image: "funktion/funktion:1.0.9"
              imagePullPolicy: "IfNotPresent"
              name: "funktion"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "funktion-operator"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-funktion-runtimes-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/iconUrl: https://funktion.fabric8.io/img/profile.png
    maven.fabric8.io/app-catalog: "true"
  labels:
    funktion.fabric8.io/kind: Runtime
    provider: fabric8
    project: funktion-runtimes
    version: 1.1.44
    group: io.fabric8.funktion
    kind: catalog
  name: catalog-funktion-runtimes
data:
  catalog-funktion-runtimes.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/iconUrl: "https://funktion.fabric8.io/img/profile.png"
      finalizers: []
      labels:
        funktion.fabric8.io/kind: "Runtime"
        provider: "fabric8"
        project: "funktion-runtimes"
        version: "1.1.44"
        group: "io.fabric8.funktion"
      name: "funktion-runtimes"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://funktion.fabric8.io/img/profile.png"
          funktion.fabric8.io/chromeDevTools: "true"
        finalizers: []
        labels:
          funktion.fabric8.io/kind: "Runtime"
          provider: "fabric8"
          project: "funktion-runtimes"
          version: "1.1.44"
          group: "io.fabric8.funktion"
        name: "nodejs"
        ownerReferences: []
      data:
        fileExtensions: "js"
        debugPort: "5858"
        deployment: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        name: connector\n\
          \        imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        deploymentDebug: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        command:\n     \
          \   - node\n        - '--inspect'\n        - '--debug=5858'\n        - server.js\n\
          \        - '--codepath=./funktion/source.js'\n        name: connector\n    \
          \    imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        service: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \nspec:\n  ports:\n  - port: 80\n    targetPort: 8888\n"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-gerrit-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: gerrit
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-gerrit
data:
  catalog-gerrit.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "gerrit"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "gerrit"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gerrit"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      imagePullSecrets: []
      secrets:
      - name: "gerrit-admin-ssh"
      - name: "gerrit-users-ssh-keys"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gerrit"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "gerrit"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gerrit"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 29418
          protocol: "TCP"
          targetPort: 29418
        selector:
          project: "gerrit"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gerrit/summary: "[Gerrit](https://code.google.com/p/gerrit/) Web based\
            \ code review and project management for Git based projects"
          description: "Gerrit is a web based code review system, facilitating online\
            \ code reviews for projects using the Git version control system.\n\nGerrit\
            \ makes reviews easier by showing changes in a side-by-side display, and allowing\
            \ inline comments to be added by any reviewer.\n\nGerrit simplifies Git based\
            \ project maintainership by permitting any authorized user to submit changes\
            \ to the master Git repository, rather than requiring all approved changes\
            \ to be merged in by hand by the project maintainer. This functionality enables\
            \ a more centralized usage of Git.\n\n[https://www.gerritcodereview.com/](https://www.gerritcodereview.com/)"
          fabric8.gerrit/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"GERRIT_ADMIN_PWD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"Admin password\",\n      \"default\" : \"secret\"\n    },\n    \"GERRIT_INITIAL_COMMIT\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Parameter used\
            \ when the Gerrit Git repo is created using the DevOpsConnector. By default,\
            \ it is false as commits have already been done within gogs repo\",\n    \
            \  \"default\" : \"false\"\n    },\n    \"GERRIT_ADMIN_USER\" : {\n      \"\
            type\" : \"string\",\n      \"description\" : \"Admin user used to perform\
            \ operations on gerrit\",\n      \"default\" : \"admin\"\n    },\n    \"GERRIT_REPO_DESCRIPTION\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Description\
            \ ot add to the Gerrit Git repo created when a CD Project is created\",\n\
            \      \"default\" : \"Description of the gerrit git repo\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gerrit"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      data:
        gerrit-initial-commit: "false"
        gerrit-admin-pwd: "secret"
        gerrit-admin-user: "admin"
        gerrit-repo-description: "Description of the gerrit git repo"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gerrit&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gerrit"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gerrit"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/secret-ssh-key: "gerrit-admin-ssh"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gerrit&var-version=2.2.311"
              fabric8.io/secret-ssh-public-key: "gerrit-users-ssh-keys[id-jenkins-rsa.pub,id-sonar-rsa.pub]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gerrit"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "GERRIT_PUBLIC_KEYS_PATH"
                value: "/home/gerrit/ssh-keys"
              - name: "GIT_SERVER_PASSWORD"
                value: "RedHat$1"
              - name: "GERRIT_ADMIN_FULLNAME"
                value: "Administrator"
              - name: "GERRIT_ACCOUNTS"
                value: "jenkins,jenkins,jenkins@fabric8.io,secret,Non-Interactive Users:Administrators;sonar,sonar,sonar@fabric8.io,secret,Non-Interactive\
                  \ Users"
              - name: "GERRIT_ADMIN_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-admin-user"
                    name: "gerrit"
              - name: "GIT_SERVER_IP"
                value: "gogs.default.svc.cluster.local"
              - name: "GERRIT_ADMIN_PRIVATE_KEY"
                value: "/root/.ssh/id_rsa"
              - name: "GERRIT_REPO_DESCRIPTION"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-repo-description"
                    name: "gerrit"
              - name: "GERRIT_SSH_PATH"
                value: "/root/.ssh"
              - name: "GERRIT_ADMIN_EMAIL"
                value: "admin@fabric8.io"
              - name: "GERRIT_GIT_REMOTEPATH"
                value: "ssh://admin@localhost:29418/All-Projects"
              - name: "GIT_SERVER_PROJ_ROOT"
                value: "gogsadmin"
              - name: "GERRIT_ADMIN_PWD"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-admin-pwd"
                    name: "gerrit"
              - name: "GERRIT_GIT_PROJECT_CONFIG"
                value: "/home/gerrit/configs/project.config"
              - name: "GIT_SERVER_PORT"
                value: "80"
              - name: "GERRIT_INITIAL_COMMIT"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-initial-commit"
                    name: "gerrit"
              - name: "GERRIT_USER_PUBLIC_KEY_SUFFIX"
                value: "-rsa.pub"
              - name: "GIT_SERVER_USER"
                value: "gogsadmin"
              - name: "GERRIT_GIT_LOCALPATH"
                value: "/home/gerrit/git"
              - name: "GERRIT_USER_PUBLIC_KEY_PREFIX"
                value: "id-"
              - name: "AUTH_TYPE"
                value: "DEVELOPMENT_BECOME_ANY_ACCOUNT"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/gerrit:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "gerrit"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/root/.ssh"
                name: "gerrit-admin-ssh-key"
                readOnly: false
              - mountPath: "/home/gerrit/ssh-keys"
                name: "gerrit-users-ssh-keys"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "gerrit"
            volumes:
            - name: "gerrit-admin-ssh-key"
              secret:
                items: []
                secretName: "gerrit-admin-ssh"
            - name: "gerrit-users-ssh-keys"
              secret:
                items: []
                secretName: "gerrit-users-ssh-keys"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-git-collector-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo=
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: git-collector
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-git-collector
data:
  catalog-git-collector.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo="
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "git-collector"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "git-collector"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo="
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "git-collector"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "git-collector"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "git-collector"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo="
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=git-collector&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "git-collector"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "git-collector"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "git-collector"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo="
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=git-collector&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "git-collector"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/git-collector:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "git-collector"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fabric8"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-gitlab-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: gitlab
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-gitlab
data:
  catalog-gitlab.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "gitlab"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "gitlab"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gitlab"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 80
        selector:
          project: "gitlab"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gitlab"
          provider: "fabric8"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 22
          protocol: "TCP"
          targetPort: 22
        selector:
          project: "gitlab"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gitlab/summary: "[Gitlab](http://gitlab.com/) - A self-hosted Git service"
          description: "Gitlab is a self-hosted Git service      \n\nMore details on the\
            \ <a href=\"http://gitlab.com/\" target=\"gitlab\">Gitlab home page</a>.\n"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"JENKINS_GITLAB_USER\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The user name for Jenkins to login to Gitlab\",\n      \"default\" :\
            \ \"jenkins\"\n    },\n    \"JENKINS_GITLAB_PASSWORD\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The password for Jenkins to login\
            \ to Gitlab\",\n      \"default\" : \"RedHat$1\"\n    },\n    \"GITLAB_URL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The GitLab\
            \ server URL\",\n      \"default\" : \"gitlab.vagrant.f8\"\n    },\n    \"\
            JENKINS_GITLAB_EMAIL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The email address of the Jenkins user on Gitlab\",\n      \"default\"\
            \ : \"gitlab@fabric8.local\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gitlab"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab"
        ownerReferences: []
      data:
        jenkins-gitlab-password: "RedHat$1"
        gitlab-url: "gitlab.vagrant.f8"
        jenkins-gitlab-user: "jenkins"
        jenkins-gitlab-email: "gitlab@fabric8.local"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gitlab&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gitlab"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gitlab"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gitlab&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gitlab"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "gitlab/gitlab-ce"
              imagePullPolicy: "IfNotPresent"
              name: "gitlab"
              ports:
              - containerPort: 22
                name: "ssh"
              - containerPort: 80
                name: "http"
              - containerPort: 443
                name: "https"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-gogs-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: gogs
    repository: gogs
    scm: git
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-gogs
data:
  catalog-gogs.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "gogs"
        repository: "gogs"
        scm: "git"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "gogs"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          repository: "gogs"
          scm: "git"
          version: "2.2.311"
        name: "default-gogs-git"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        password: "UmVkSGF0JDE="
        username: "Z29nc2FkbWlu"
      stringData: {}
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          version: "2.2.311"
        name: "gogs"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 22
          protocol: "TCP"
          targetPort: 2222
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-git-app-secrets"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        gogs: "default-git-gogs"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gogs/summary: "[Gogs](http://gogs/) - A self-hosted Git service written\
            \ in Go"
          description: "Gogs is a self-hosted Git service written in Go.\n\nMore details\
            \ on the <a href=\"http://gogs.io/\" target=\"gogs\">Gogs home page</a>.\n"
          fabric8.gogs/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          expose.config.fabric8.io/url-key: "gogs-server--root-url"
          expose.config.fabric8.io/oauth-authorize-url-key: "oauth-authorize-uri"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"GOGS_SERVER__ROOT_URL\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"The root URL for the gogs server\"\n    },\n    \"DOMAIN\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The domain\
            \ name applications are installed on\",\n      \"default\" : \"vagrant.f8\"\
            \n    },\n    \"ADMIN_USER_EMAIL\" : {\n      \"type\" : \"string\",\n   \
            \   \"description\" : \"The email address of the admin user on Gogs\",\n \
            \     \"default\" : \"gogsadmin@fabric8.local\"\n    },\n    \"ADMIN_USER_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n    \"GOGS_SERVER__PROTOCOL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The protocol\
            \ for gogs to use; either http or https\",\n      \"default\" : \"http\"\n\
            \    },\n    \"GOGS_OAUTH_OPENSHIFT__ENABLED\" : {\n      \"type\" : \"string\"\
            ,\n      \"default\" : \"true\"\n    },\n    \"ADMIN_USER_CREATE\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"Should we create an\
            \ admin user on startup\",\n      \"default\" : \"true\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__TOKEN_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__SCOPES\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__AUTH_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_WEBHOOK__TASK_INTERVAL\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_WEBHOOK__SKIP_TLS_VERIFY\" : {\n      \"type\" : \"string\",\n\
            \      \"default\" : \"true\"\n    },\n    \"GOGS_SERVER__DOMAIN\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"The gogs server name\"\
            ,\n      \"default\" : \"gogs.vagrant.f8\"\n    },\n    \"ADMIN_USER_NAME\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The user name\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"GOGS_OAUTH__ENABLED\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_OAUTH_TWITTER__ENABLED\" : {\n      \"type\" : \"string\",\n \
            \     \"default\" : \"false\"\n    },\n    \"KUBERNETES_ADMIN_USER\" : {\n\
            \      \"type\" : \"string\",\n      \"description\" : \"The default Kubernetes\
            \ admin user\",\n      \"default\" : \"admin\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__CLIENT_ID\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"gogs\"\n    }\n\
            \  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      data:
        admin-user-create: "true"
        admin-user-email: "gogsadmin@fabric8.local"
        admin-user-name: "gogsadmin"
        admin-user-password: "RedHat$1"
        gogs-oauth--enabled: "true"
        gogs-oauth-openshift--auth-url: ""
        gogs-oauth-openshift--client-id: "gogs"
        gogs-oauth-openshift--enabled: "true"
        gogs-oauth-openshift--scopes: ""
        gogs-oauth-openshift--token-url: ""
        gogs-oauth-twitter--enabled: "false"
        gogs-server--root-url: ""
        gogs-webhook--skip-tls-verify: "true"
        gogs-webhook--task-interval: "true"
        kubernetes-admin-user: "admin"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "gogs"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gogs"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              configmap.fabric8.io/update-on-change: "gogs"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /app/gogs/data\"],\"volumeMounts\":[{\"mountPath\":\"/app/gogs/data\"\
                ,\"name\":\"gogs-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gogs"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "GOGS_SERVER__ROOT_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "gogs-server--root-url"
                    name: "gogs"
              - name: "ADMIN_USER_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-email"
                    name: "gogs"
              - name: "ADMIN_USER_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-password"
                    name: "gogs"
              - name: "ADMIN_USER_CREATE"
                value: "true"
              - name: "GOGS_WEBHOOK__TASK_INTERVAL"
                value: "true"
              - name: "GOGS_WEBHOOK__SKIP_TLS_VERIFY"
                value: "true"
              - name: "ADMIN_USER_NAME"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-name"
                    name: "gogs"
              - name: "KUBERNETES_ADMIN_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "kubernetes-admin-user"
                    name: "gogs"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/gogs:v0.9.97"
              imagePullPolicy: "IfNotPresent"
              name: "gogs"
              ports:
              - containerPort: 2222
                name: "ssh"
              - containerPort: 3000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/app/gogs/data"
                name: "gogs-data"
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "gogs"
            volumes:
            - name: "gogs-data"
              persistentVolumeClaim:
                claimName: "gogs-data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-grafana-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: grafana
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-grafana
data:
  catalog-grafana.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "grafana"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "grafana"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "grafana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "grafana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/grafana\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/grafana\"\
                ,\"name\":\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "grafana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROMETHEUS_ADDRESS"
                value: "http://prometheus"
              image: "fabric8/grafana:2.6.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              name: "grafana"
              ports:
              - containerPort: 3000
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              volumeMounts:
              - mountPath: "/var/lib/grafana"
                name: "data-volume"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "grafana-data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-ingress-nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/ingress-nginx/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: ingress-nginx
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-ingress-nginx
data:
  catalog-ingress-nginx.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/ingress-nginx/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "ingress-nginx"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "ingress-nginx"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Namespace"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "ingress-nginx"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-system"
        ownerReferences: []
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "ingress-nginx"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nginx-config"
        namespace: "fabric8-system"
        ownerReferences: []
      data:
        client-max-body-size: "2000m"
        proxy-connect-timeout: "500s"
        proxy-read-timeout: "500s"
        server-names-hash-bucket-size: "256"
        server-names-hash-max-size: "1024"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "nginx-config"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/ingress-nginx/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=ingress-nginx&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "ingress-nginx"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "ingress-nginx"
        namespace: "fabric8-system"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "ingress-nginx"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/ingress-nginx/src/main/fabric8/icon.png"
              configmap.fabric8.io/update-on-change: "nginx-config"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=ingress-nginx&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "ingress-nginx"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-v=3"
              - "-nginx-configmaps=fabric8-system/nginx-config"
              command: []
              env: []
              image: "nginxdemos/nginx-ingress:0.3.1"
              name: "nginx-ingress"
              ports:
              - containerPort: 80
                hostPort: 80
                name: "http"
                protocol: "TCP"
              - containerPort: 443
                hostPort: 443
                name: "https"
                protocol: "TCP"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector:
              fabric8.io/externalIP: "true"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-jenkins-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-jenkins
data:
  catalog-jenkins.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "jenkins"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "jenkins"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-docker-cfg"
        ownerReferences: []
      data:
        config.json: ""
      stringData: {}
      type: "fabric8.io/jenkins-docker-cfg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-git-ssh"
        ownerReferences: []
      data:
        ssh-key: ""
        ssh-key.pub: ""
      stringData: {}
      type: "fabric8.io/jenkins-git-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-hub-api-token"
        ownerReferences: []
      data:
        hub: ""
      stringData: {}
      type: "fabric8.io/jenkins-hub-api-token"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-master-ssh"
        ownerReferences: []
      data:
        idrsa: ""
      stringData: {}
      type: "fabric8.io/jenkins-master-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-maven-settings"
        ownerReferences: []
      data:
        settings.xml: "PHNldHRpbmdzPgogIDwhLS0gc2V0cyB0aGUgbG9jYWwgbWF2ZW4gcmVwb3NpdG9yeSBvdXRzaWRlIG9mIHRoZSB+Ly5tMiBmb2xkZXIgZm9yIGVhc2llciBtb3VudGluZyBvZiBzZWNyZXRzIGFuZCByZXBvIC0tPgogIDxsb2NhbFJlcG9zaXRvcnk+JHt1c2VyLmhvbWV9Ly5tdm5yZXBvc2l0b3J5PC9sb2NhbFJlcG9zaXRvcnk+CiAgPG1pcnJvcnM+CiAgICA8bWlycm9yPgogICAgICA8aWQ+bmV4dXM8L2lkPgogICAgICA8bWlycm9yT2Y+ZXh0ZXJuYWw6KjwvbWlycm9yT2Y+CiAgICAgIDx1cmw+aHR0cDovL25leHVzL2NvbnRlbnQvZ3JvdXBzL3B1YmxpYzwvdXJsPgogICAgPC9taXJyb3I+CiAgPC9taXJyb3JzPgoKICA8IS0tIGxldHMgZGlzYWJsZSB0aGUgZG93bmxvYWQgcHJvZ3Jlc3MgaW5kaWNhdG9yIHRoYXQgZmlsbHMgdXAgbG9ncyAtLT4KICA8aW50ZXJhY3RpdmVNb2RlPmZhbHNlPC9pbnRlcmFjdGl2ZU1vZGU+CgogIDxzZXJ2ZXJzPgogICAgPHNlcnZlcj4KICAgICAgPGlkPmxvY2FsLW5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm9zcy1zb25hdHlwZS1zdGFnaW5nPC9pZD4KICAgICAgPHVzZXJuYW1lPjwvdXNlcm5hbWU+CiAgICAgIDxwYXNzd29yZD48L3Bhc3N3b3JkPgogICAgPC9zZXJ2ZXI+CiAgPC9zZXJ2ZXJzPgoKICA8cHJvZmlsZXM+CiAgICA8cHJvZmlsZT4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGFsdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc3RhZ2luZy88L2FsdERlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRSZWxlYXNlRGVwbG95bWVudFJlcG9zaXRvcnk+bG9jYWwtbmV4dXM6OmRlZmF1bHQ6Omh0dHA6Ly9uZXh1cy9jb250ZW50L3JlcG9zaXRvcmllcy9zdGFnaW5nLzwvYWx0UmVsZWFzZURlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRTbmFwc2hvdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc25hcHNob3RzLzwvYWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT4KICAgICAgPC9wcm9wZXJ0aWVzPgogICAgICA8cmVwb3NpdG9yaWVzPgogICAgICAgIDxyZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3JlcG9zaXRvcnk+CiAgICAgIDwvcmVwb3NpdG9yaWVzPgogICAgICA8cGx1Z2luUmVwb3NpdG9yaWVzPgogICAgICAgIDxwbHVnaW5SZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3BsdWdpblJlcG9zaXRvcnk+CiAgICAgIDwvcGx1Z2luUmVwb3NpdG9yaWVzPgogICAgPC9wcm9maWxlPgogICAgPHByb2ZpbGU+CiAgICAgIDxpZD5yZWxlYXNlPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGdwZy5leGVjdXRhYmxlPmdwZzwvZ3BnLmV4ZWN1dGFibGU+CiAgICAgICAgPGdwZy5wYXNzcGhyYXNlPm15c2VjcmV0cGFzc3BocmFzZTwvZ3BnLnBhc3NwaHJhc2U+CiAgICAgIDwvcHJvcGVydGllcz4KICAgIDwvcHJvZmlsZT4KICA8L3Byb2ZpbGVzPgogIDxhY3RpdmVQcm9maWxlcz4KICAgIDwhLS1tYWtlIHRoZSBwcm9maWxlIGFjdGl2ZSBhbGwgdGhlIHRpbWUgLS0+CiAgICA8YWN0aXZlUHJvZmlsZT5uZXh1czwvYWN0aXZlUHJvZmlsZT4KICA8L2FjdGl2ZVByb2ZpbGVzPgo8L3NldHRpbmdzPgo="
      stringData: {}
      type: "fabric8.io/secret-maven-settings"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-release-gpg"
        ownerReferences: []
      data:
        trustdb.gpg: ""
        pubring.gpg: ""
        gpg.conf: ""
        secring.gpg: ""
      stringData: {}
      type: "fabric8.io/jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-ssh-config"
        ownerReferences: []
      data:
        config: ""
      stringData: {}
      type: "fabric8.io/jenkins-ssh-config"
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      imagePullSecrets: []
      secrets:
      - name: "jenkins-git-ssh"
      - name: "jenkins-master-ssh"
      - name: "jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          api.service.kubernetes.io/path: "/blue"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jnlp"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "agent"
          port: 50000
          protocol: "TCP"
          targetPort: 50000
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jobs"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-mvn-local-repo"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteMany"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-workspace"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.jenkins/summary: "[Jenkins](http://jenkins-ci.org/) extendable open\
            \ source continuous integration server"
          description: "Jenkins CI is a leading open-source continuous integration server.\
            \ Built with Java, it provides 985 plugins to support building and testing\
            \ virtually any project.\n\n[http://jenkins-ci.org/](http://jenkins-ci.org/)"
          fabric8.jenkins/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"PIPELINE_ELASTICSEARCH_PROTOCOL\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"Protocol used to connect to elasticsearch\",\n\
            \      \"default\" : \"http\"\n    },\n    \"JENKINS_GOGS_USER\" : {\n   \
            \   \"type\" : \"string\",\n      \"description\" : \"The user name for Jenkins\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"JENKINS_GOGS_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ for Jenkins to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n\
            \    \"PIPELINE_ELASTICSEARCH_HOST\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"Elasticsearch hostname used for pipeline events\"\
            ,\n      \"default\" : \"elasticsearch\"\n    },\n    \"JENKINS_GOGS_EMAIL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The email address\
            \ of the Jenkins user on Gogs\",\n      \"default\" : \"gogsadmin@fabric8.local\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      data:
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        pipeline-elasticsearch-protocol: "http"
        pipeline-elasticsearch-host: "elasticsearch"
        project-version: "2.2.311"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "jenkins"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/secret-ssh-key: "jenkins-git-ssh,jenkins-master-ssh"
              fabric8.io/secret-ssh-config: "jenkins-ssh-config"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
              fabric8.io/secret-gpg-key: "jenkins-release-gpg"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
              fabric8.io/secret-maven-settings: "jenkins-maven-settings"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/secret-hub-api-token: "jenkins-hub-api-token"
              fabric8.io/secret-docker-cfg: "jenkins-docker-cfg"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/jenkins_home/workspace\",\"/var/jenkins_home/jobs\"],\"volumeMounts\"\
                :[{\"mountPath\":\"/var/jenkins_home/jobs\",\"name\":\"jenkins-jobs\"\
                },{\"mountPath\":\"/var/jenkins_home/workspace\",\"name\":\"jenkins-workspace\"\
                }]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "jenkins"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROJECT_VERSION"
                valueFrom:
                  configMapKeyRef:
                    key: "project-version"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_PROTOCOL"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-protocol"
                    name: "jenkins"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "jenkins"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "jenkins"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-host"
                    name: "jenkins"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default"
              image: "fabric8/jenkins-docker:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "jenkins"
              ports:
              - containerPort: 50000
                name: "slave"
              - containerPort: 8080
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 20
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/jenkins_home/jobs"
                name: "jenkins-jobs"
                readOnly: false
              - mountPath: "/var/jenkins_home/workspace"
                name: "jenkins-workspace"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "jenkins"
            volumes:
            - name: "jenkins-jobs"
              persistentVolumeClaim:
                claimName: "jenkins-jobs"
            - name: "jenkins-workspace"
              persistentVolumeClaim:
                claimName: "jenkins-workspace"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-keycloak-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: keycloak
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-keycloak
data:
  catalog-keycloak.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "keycloak"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "keycloak"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "keycloak"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak-config"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=keycloak&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "keycloak"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=keycloak&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /opt/jboss/keycloak/standalone/data\"],\"volumeMounts\":[{\"mountPath\"\
                :\"/opt/jboss/keycloak/standalone/data\",\"name\":\"keycloak-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "keycloak"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KEYCLOAK_USER"
                value: "admin"
              - name: "KEYCLOAK_PASSWORD"
                value: "admin"
              image: "jboss/keycloak:2.2.0.Final"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/auth"
                  port: 8080
                initialDelaySeconds: 60
                timeoutSeconds: 10
              name: "keycloak"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/auth"
                  port: 8080
                initialDelaySeconds: 10
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/opt/jboss/keycloak/standalone/data"
                name: "keycloak-data"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "keycloak-data"
              persistentVolumeClaim:
                claimName: "keycloak-data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-kibana-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: kibana
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-kibana
data:
  catalog-kibana.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "kibana"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "kibana"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 5601
        selector:
          project: "kibana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "kibana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kibana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kibana4:v4.5.3"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 60
                tcpSocket:
                  port: 5601
              name: "kibana"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 5601
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              image: "fabric8/kibana-config:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-kiwiirc-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: kiwiirc
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-kiwiirc
data:
  catalog-kiwiirc.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "kiwiirc"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "kiwiirc"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kiwiirc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "kiwiirc"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 7778
        selector:
          project: "kiwiirc"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kiwiirc&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kiwiirc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kiwiirc"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "kiwiirc"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kiwiirc&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kiwiirc"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/fabric8-kiwiirc:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "kiwiirc"
              ports:
              - containerPort: 7778
                name: "irc"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-kubeflix-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2656e3679d0034bb63c83e429f17135b30ed7d71
    fabric8.io/iconUrl: img/icons/spring-boot.svg
    fabric8.io/git-branch: release-v1.0.28
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: kubeflix
    version: 1.0.28
    expose: "true"
    group: io.fabric8.kubeflix
    kind: catalog
  name: catalog-kubeflix
data:
  catalog-kubeflix.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
        fabric8.io/iconUrl: "img/icons/spring-boot.svg"
        fabric8.io/git-branch: "release-v1.0.28"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "kubeflix"
        version: "1.0.28"
        expose: "true"
        group: "io.fabric8.kubeflix"
      name: "kubeflix"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "turbine-server"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          servicepath: "/turbine.stream"
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
          expose: "true"
        name: "turbine-server"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "turbine-server"
          provider: "fabric8"
          group: "io.fabric8.kubeflix"
        type: "LoadBalancer"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine-server"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "turbine-server"
            provider: "fabric8"
            group: "io.fabric8.kubeflix"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/spring-boot.svg"
              fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
              fabric8.io/git-branch: "release-v1.0.28"
            finalizers: []
            labels:
              project: "turbine-server"
              provider: "fabric8"
              version: "1.0.28"
              group: "io.fabric8.kubeflix"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/turbine-server:1.0.28"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 180
              name: "turbine-server"
              ports:
              - containerPort: 8080
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 10
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "turbine"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-letschat-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: letschat
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-letschat
data:
  catalog-letschat.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        maven.fabric8.io/source-url: "jar:file:/home/jenkins/.mvnrepository/io/fabric8/devops/apps/letschat/2.2.311/letschat-2.2.311.jar!/META-INF/fabric8/openshift.yml"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "letschat"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "letschat"
      ownerReferences: []
    objects:
    - apiVersion: "v1"
      kind: "Namespace"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "ingress-nginx"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-system"
        ownerReferences: []
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          repository: "gogs"
          scm: "git"
          version: "2.2.311"
        name: "default-gogs-git"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        password: "UmVkSGF0JDE="
        username: "Z29nc2FkbWlu"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          repository: "gogs"
          scm: "git"
          version: "2.2.311"
        name: "default-gogs-git"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        password: "UmVkSGF0JDE="
        username: "Z29nc2FkbWlu"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-docker-cfg"
        ownerReferences: []
      data:
        config.json: ""
      type: "fabric8.io/jenkins-docker-cfg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-docker-cfg"
        ownerReferences: []
      data:
        config.json: ""
      type: "fabric8.io/jenkins-docker-cfg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-git-ssh"
        ownerReferences: []
      data:
        ssh-key: ""
        ssh-key.pub: ""
      type: "fabric8.io/jenkins-git-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-git-ssh"
        ownerReferences: []
      data:
        ssh-key: ""
        ssh-key.pub: ""
      type: "fabric8.io/jenkins-git-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-hub-api-token"
        ownerReferences: []
      data:
        hub: ""
      type: "fabric8.io/jenkins-hub-api-token"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-hub-api-token"
        ownerReferences: []
      data:
        hub: ""
      type: "fabric8.io/jenkins-hub-api-token"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-master-ssh"
        ownerReferences: []
      data:
        idrsa: ""
      type: "fabric8.io/jenkins-master-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-master-ssh"
        ownerReferences: []
      data:
        idrsa: ""
      type: "fabric8.io/jenkins-master-ssh"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-maven-settings"
        ownerReferences: []
      data:
        settings.xml: "PHNldHRpbmdzPgogIDwhLS0gc2V0cyB0aGUgbG9jYWwgbWF2ZW4gcmVwb3NpdG9yeSBvdXRzaWRlIG9mIHRoZSB+Ly5tMiBmb2xkZXIgZm9yIGVhc2llciBtb3VudGluZyBvZiBzZWNyZXRzIGFuZCByZXBvIC0tPgogIDxsb2NhbFJlcG9zaXRvcnk+JHt1c2VyLmhvbWV9Ly5tdm5yZXBvc2l0b3J5PC9sb2NhbFJlcG9zaXRvcnk+CiAgPG1pcnJvcnM+CiAgICA8bWlycm9yPgogICAgICA8aWQ+bmV4dXM8L2lkPgogICAgICA8bWlycm9yT2Y+ZXh0ZXJuYWw6KjwvbWlycm9yT2Y+CiAgICAgIDx1cmw+aHR0cDovL25leHVzL2NvbnRlbnQvZ3JvdXBzL3B1YmxpYzwvdXJsPgogICAgPC9taXJyb3I+CiAgPC9taXJyb3JzPgoKICA8IS0tIGxldHMgZGlzYWJsZSB0aGUgZG93bmxvYWQgcHJvZ3Jlc3MgaW5kaWNhdG9yIHRoYXQgZmlsbHMgdXAgbG9ncyAtLT4KICA8aW50ZXJhY3RpdmVNb2RlPmZhbHNlPC9pbnRlcmFjdGl2ZU1vZGU+CgogIDxzZXJ2ZXJzPgogICAgPHNlcnZlcj4KICAgICAgPGlkPmxvY2FsLW5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm9zcy1zb25hdHlwZS1zdGFnaW5nPC9pZD4KICAgICAgPHVzZXJuYW1lPjwvdXNlcm5hbWU+CiAgICAgIDxwYXNzd29yZD48L3Bhc3N3b3JkPgogICAgPC9zZXJ2ZXI+CiAgPC9zZXJ2ZXJzPgoKICA8cHJvZmlsZXM+CiAgICA8cHJvZmlsZT4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGFsdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc3RhZ2luZy88L2FsdERlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRSZWxlYXNlRGVwbG95bWVudFJlcG9zaXRvcnk+bG9jYWwtbmV4dXM6OmRlZmF1bHQ6Omh0dHA6Ly9uZXh1cy9jb250ZW50L3JlcG9zaXRvcmllcy9zdGFnaW5nLzwvYWx0UmVsZWFzZURlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRTbmFwc2hvdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc25hcHNob3RzLzwvYWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT4KICAgICAgPC9wcm9wZXJ0aWVzPgogICAgICA8cmVwb3NpdG9yaWVzPgogICAgICAgIDxyZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3JlcG9zaXRvcnk+CiAgICAgIDwvcmVwb3NpdG9yaWVzPgogICAgICA8cGx1Z2luUmVwb3NpdG9yaWVzPgogICAgICAgIDxwbHVnaW5SZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3BsdWdpblJlcG9zaXRvcnk+CiAgICAgIDwvcGx1Z2luUmVwb3NpdG9yaWVzPgogICAgPC9wcm9maWxlPgogICAgPHByb2ZpbGU+CiAgICAgIDxpZD5yZWxlYXNlPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGdwZy5leGVjdXRhYmxlPmdwZzwvZ3BnLmV4ZWN1dGFibGU+CiAgICAgICAgPGdwZy5wYXNzcGhyYXNlPm15c2VjcmV0cGFzc3BocmFzZTwvZ3BnLnBhc3NwaHJhc2U+CiAgICAgIDwvcHJvcGVydGllcz4KICAgIDwvcHJvZmlsZT4KICA8L3Byb2ZpbGVzPgogIDxhY3RpdmVQcm9maWxlcz4KICAgIDwhLS1tYWtlIHRoZSBwcm9maWxlIGFjdGl2ZSBhbGwgdGhlIHRpbWUgLS0+CiAgICA8YWN0aXZlUHJvZmlsZT5uZXh1czwvYWN0aXZlUHJvZmlsZT4KICA8L2FjdGl2ZVByb2ZpbGVzPgo8L3NldHRpbmdzPgo="
      type: "fabric8.io/secret-maven-settings"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-maven-settings"
        ownerReferences: []
      data:
        settings.xml: "PHNldHRpbmdzPgogIDwhLS0gc2V0cyB0aGUgbG9jYWwgbWF2ZW4gcmVwb3NpdG9yeSBvdXRzaWRlIG9mIHRoZSB+Ly5tMiBmb2xkZXIgZm9yIGVhc2llciBtb3VudGluZyBvZiBzZWNyZXRzIGFuZCByZXBvIC0tPgogIDxsb2NhbFJlcG9zaXRvcnk+JHt1c2VyLmhvbWV9Ly5tdm5yZXBvc2l0b3J5PC9sb2NhbFJlcG9zaXRvcnk+CiAgPG1pcnJvcnM+CiAgICA8bWlycm9yPgogICAgICA8aWQ+bmV4dXM8L2lkPgogICAgICA8bWlycm9yT2Y+ZXh0ZXJuYWw6KjwvbWlycm9yT2Y+CiAgICAgIDx1cmw+aHR0cDovL25leHVzL2NvbnRlbnQvZ3JvdXBzL3B1YmxpYzwvdXJsPgogICAgPC9taXJyb3I+CiAgPC9taXJyb3JzPgoKICA8IS0tIGxldHMgZGlzYWJsZSB0aGUgZG93bmxvYWQgcHJvZ3Jlc3MgaW5kaWNhdG9yIHRoYXQgZmlsbHMgdXAgbG9ncyAtLT4KICA8aW50ZXJhY3RpdmVNb2RlPmZhbHNlPC9pbnRlcmFjdGl2ZU1vZGU+CgogIDxzZXJ2ZXJzPgogICAgPHNlcnZlcj4KICAgICAgPGlkPmxvY2FsLW5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHVzZXJuYW1lPmFkbWluPC91c2VybmFtZT4KICAgICAgPHBhc3N3b3JkPmFkbWluMTIzPC9wYXNzd29yZD4KICAgIDwvc2VydmVyPgogICAgPHNlcnZlcj4KICAgICAgPGlkPm9zcy1zb25hdHlwZS1zdGFnaW5nPC9pZD4KICAgICAgPHVzZXJuYW1lPjwvdXNlcm5hbWU+CiAgICAgIDxwYXNzd29yZD48L3Bhc3N3b3JkPgogICAgPC9zZXJ2ZXI+CiAgPC9zZXJ2ZXJzPgoKICA8cHJvZmlsZXM+CiAgICA8cHJvZmlsZT4KICAgICAgPGlkPm5leHVzPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGFsdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc3RhZ2luZy88L2FsdERlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRSZWxlYXNlRGVwbG95bWVudFJlcG9zaXRvcnk+bG9jYWwtbmV4dXM6OmRlZmF1bHQ6Omh0dHA6Ly9uZXh1cy9jb250ZW50L3JlcG9zaXRvcmllcy9zdGFnaW5nLzwvYWx0UmVsZWFzZURlcGxveW1lbnRSZXBvc2l0b3J5PgogICAgICAgIDxhbHRTbmFwc2hvdERlcGxveW1lbnRSZXBvc2l0b3J5PmxvY2FsLW5leHVzOjpkZWZhdWx0OjpodHRwOi8vbmV4dXMvY29udGVudC9yZXBvc2l0b3JpZXMvc25hcHNob3RzLzwvYWx0U25hcHNob3REZXBsb3ltZW50UmVwb3NpdG9yeT4KICAgICAgPC9wcm9wZXJ0aWVzPgogICAgICA8cmVwb3NpdG9yaWVzPgogICAgICAgIDxyZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3JlcG9zaXRvcnk+CiAgICAgIDwvcmVwb3NpdG9yaWVzPgogICAgICA8cGx1Z2luUmVwb3NpdG9yaWVzPgogICAgICAgIDxwbHVnaW5SZXBvc2l0b3J5PgogICAgICAgICAgPGlkPmNlbnRyYWw8L2lkPgogICAgICAgICAgPHVybD5odHRwOi8vY2VudHJhbDwvdXJsPgogICAgICAgICAgPHJlbGVhc2VzPjxlbmFibGVkPnRydWU8L2VuYWJsZWQ+PC9yZWxlYXNlcz4KICAgICAgICAgIDxzbmFwc2hvdHM+PGVuYWJsZWQ+dHJ1ZTwvZW5hYmxlZD48L3NuYXBzaG90cz4KICAgICAgICA8L3BsdWdpblJlcG9zaXRvcnk+CiAgICAgIDwvcGx1Z2luUmVwb3NpdG9yaWVzPgogICAgPC9wcm9maWxlPgogICAgPHByb2ZpbGU+CiAgICAgIDxpZD5yZWxlYXNlPC9pZD4KICAgICAgPHByb3BlcnRpZXM+CiAgICAgICAgPGdwZy5leGVjdXRhYmxlPmdwZzwvZ3BnLmV4ZWN1dGFibGU+CiAgICAgICAgPGdwZy5wYXNzcGhyYXNlPm15c2VjcmV0cGFzc3BocmFzZTwvZ3BnLnBhc3NwaHJhc2U+CiAgICAgIDwvcHJvcGVydGllcz4KICAgIDwvcHJvZmlsZT4KICA8L3Byb2ZpbGVzPgogIDxhY3RpdmVQcm9maWxlcz4KICAgIDwhLS1tYWtlIHRoZSBwcm9maWxlIGFjdGl2ZSBhbGwgdGhlIHRpbWUgLS0+CiAgICA8YWN0aXZlUHJvZmlsZT5uZXh1czwvYWN0aXZlUHJvZmlsZT4KICA8L2FjdGl2ZVByb2ZpbGVzPgo8L3NldHRpbmdzPgo="
      type: "fabric8.io/secret-maven-settings"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-release-gpg"
        ownerReferences: []
      data:
        trustdb.gpg: ""
        pubring.gpg: ""
        gpg.conf: ""
        secring.gpg: ""
      type: "fabric8.io/jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-release-gpg"
        ownerReferences: []
      data:
        trustdb.gpg: ""
        pubring.gpg: ""
        gpg.conf: ""
        secring.gpg: ""
      type: "fabric8.io/jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-ssh-config"
        ownerReferences: []
      data:
        config: ""
      type: "fabric8.io/jenkins-ssh-config"
    - apiVersion: "v1"
      kind: "Secret"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-ssh-config"
        ownerReferences: []
      data:
        config: ""
      type: "fabric8.io/jenkins-ssh-config"
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "configmapcontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "configmapcontroller"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "exposecontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "exposecontroller"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gerrit"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      imagePullSecrets: []
      secrets:
      - name: "gerrit-admin-ssh"
      - name: "gerrit-users-ssh-keys"
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          version: "2.2.311"
        name: "gogs"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
          project: "gogs"
          version: "2.2.311"
        name: "gogs"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      imagePullSecrets: []
      secrets:
      - name: "jenkins-git-ssh"
      - name: "jenkins-master-ssh"
      - name: "jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      imagePullSecrets: []
      secrets:
      - name: "jenkins-git-ssh"
      - name: "jenkins-master-ssh"
      - name: "jenkins-release-gpg"
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "metrics"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "metrics"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "metrics"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "turbine-server"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "turbine-server"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "activemq"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "activemq"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/description-language: "SwaggerJSON"
          api.service.kubernetes.io/path: "apiman"
          api.service.kubernetes.io/protocol: "REST"
          api.service.kubernetes.io/description-path: "apiman/swagger.json"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          component: "ApimanManagerAPI"
          provider: "fabric8"
          project: "apiman"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "apiman"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "default"
          port: 7070
          protocol: "TCP"
          targetPort: 7070
        selector:
          project: "apiman"
          component: "ApimanManagerAPI"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/description-language: "SwaggerJSON"
          api.service.kubernetes.io/path: "apiman"
          api.service.kubernetes.io/protocol: "REST"
          api.service.kubernetes.io/description-path: "apiman/swagger.json"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          component: "ApimanManagerAPI"
          provider: "fabric8"
          project: "apiman"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "apiman"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "default"
          port: 7070
          protocol: "TCP"
          targetPort: 7070
        selector:
          project: "apiman"
          component: "ApimanManagerAPI"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/description-language: "SwaggerJSON"
          api.service.kubernetes.io/path: "api"
          api.service.kubernetes.io/protocol: "REST"
          api.service.kubernetes.io/description-path: "api/swagger.json"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "default"
          port: 7777
          protocol: "TCP"
          targetPort: 7777
        selector:
          project: "apiman-gateway"
          component: "ApimanGateway"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/description-language: "SwaggerJSON"
          api.service.kubernetes.io/path: "api"
          api.service.kubernetes.io/protocol: "REST"
          api.service.kubernetes.io/description-path: "api/swagger.json"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "default"
          port: 7777
          protocol: "TCP"
          targetPort: 7777
        selector:
          project: "apiman-gateway"
          component: "ApimanGateway"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "artifactory"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "artifactory"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8081
        selector:
          project: "artifactory"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9115"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9115
        selector:
          project: "prometheus-blackbox-exporter"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9115"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9115
        selector:
          project: "prometheus-blackbox-exporter"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9115"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9115
        selector:
          project: "prometheus-blackbox-exporter"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "chaos-monkey"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "chaos-monkey"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "chaos-monkey"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "content-repository"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "content-repository"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 80
        selector:
          project: "content-repository"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "discovery"
          port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "discovery"
          port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "discovery"
          port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          api.service.kubernetes.io/protocol: "REST"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch-v1"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 5000
        selector:
          project: "fabric8-docker-registry"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 5000
        selector:
          project: "fabric8-docker-registry"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
          expose: "true"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "fabric8-forge"
          provider: "fabric8"
          group: "io.fabric8.forge.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
          expose: "true"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "fabric8-forge"
          provider: "fabric8"
          group: "io.fabric8.forge.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gerrit"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "gerrit"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gerrit"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 29418
          protocol: "TCP"
          targetPort: 29418
        selector:
          project: "gerrit"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo="
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "git-collector"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "git-collector"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "git-collector"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gitlab"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 80
        selector:
          project: "gitlab"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "gitlab"
          provider: "fabric8"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 22
          protocol: "TCP"
          targetPort: 22
        selector:
          project: "gitlab"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 22
          protocol: "TCP"
          targetPort: 2222
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "gogs-ssh"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 22
          protocol: "TCP"
          targetPort: 2222
        selector:
          project: "gogs"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "grafana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "grafana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "grafana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "hubot"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "hubot-letschat"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "hubot-slack"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 8080
        selector:
          name: "hubot-slack"
          project: "hubot-slack"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-irc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "hubot"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "hubot-irc"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "hubot-letschat"
          provider: "fabric8"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-jenkins-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 5555
          protocol: "TCP"
          targetPort: 5555
        selector:
          project: "hubot-letschat"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "hubot-notifier"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "hubot-notifier"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "jolokia"
          port: 8778
          protocol: "TCP"
          targetPort: 8778
        selector:
          project: "hubot-notifier"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          api.service.kubernetes.io/path: "/blue"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          api.service.kubernetes.io/path: "/blue"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jnlp"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "agent"
          port: 50000
          protocol: "TCP"
          targetPort: 50000
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          project: "jenkins"
          provider: "fabric8"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jnlp"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "agent"
          port: 50000
          protocol: "TCP"
          targetPort: 50000
        selector:
          project: "jenkins"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kafka"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
        name: "kafka"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9092
          protocol: "TCP"
          targetPort: 9092
        selector:
          project: "kafka"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "keycloak"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 5601
        selector:
          project: "kibana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 5601
        selector:
          project: "kibana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 5601
        selector:
          project: "kibana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kiwiirc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "kiwiirc"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 7778
        selector:
          project: "kiwiirc"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 5000
        selector:
          name: "letschat"
          project: "letschat"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 5000
        selector:
          name: "letschat"
          project: "letschat"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "manageiq"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "manageiq"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 443
          protocol: "TCP"
          targetPort: 443
        selector:
          project: "manageiq"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "nexus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8081
        selector:
          project: "nexus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "nexus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8081
        selector:
          project: "nexus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "orion"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "orion"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "orion"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9090
        selector:
          project: "prometheus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9090
        selector:
          project: "prometheus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9090
        selector:
          project: "prometheus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 80
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 80
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-back"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 8000
          targetPort: 8000
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-back"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 8000
          targetPort: 8000
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          servicepath: "/turbine.stream"
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
          expose: "true"
        name: "turbine-server"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "turbine-server"
          provider: "fabric8"
          group: "io.fabric8.kubeflix"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          servicepath: "/turbine.stream"
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
          expose: "true"
        name: "turbine-server"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "turbine-server"
          provider: "fabric8"
          group: "io.fabric8.kubeflix"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/path: "/prometheus"
          prometheus.io/port: "9411"
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9411
          protocol: "TCP"
          targetPort: 9411
        selector:
          project: "zipkin"
          provider: "fabric8"
          group: "io.fabric8.zipkin"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 3306
          protocol: "TCP"
          targetPort: 3306
        selector:
          project: "zipkin-mysql"
          provider: "fabric8"
          group: "io.fabric8.zipkin"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "zookeeper"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "client"
          port: 2181
          targetPort: 2181
        selector:
          project: "zookeeper"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
        name: "zookeeper"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "client"
          port: 2181
          targetPort: 2181
        selector:
          project: "zookeeper"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "zookeeper"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "client"
          port: 2181
          targetPort: 2181
        selector:
          project: "zookeeper"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "es-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "es-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "es-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "5Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "5Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jobs"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-jobs"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-mvn-local-repo"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteMany"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-mvn-local-repo"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteMany"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-workspace"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins-workspace"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak-config"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "message-broker"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "message-broker"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "message-broker"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "message-broker"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "mysql-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
        volumeName: "mysql-data"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          requests:
            storage: "100Mi"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      data:
        config.yml: "modules:\n  http_2xx:\n    prober: http\n    timeout: 5s\n    http:\n\
          \      valid_status_codes: []  # Defaults to 2xx\n      method: GET\n      no_follow_redirects:\
          \ false\n      fail_if_ssl: false\n      fail_if_not_ssl: false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      data:
        config.yml: "modules:\n  http_2xx:\n    prober: http\n    timeout: 5s\n    http:\n\
          \      valid_status_codes: []  # Defaults to 2xx\n      method: GET\n      no_follow_redirects:\
          \ false\n      fail_if_ssl: false\n      fail_if_not_ssl: false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      data:
        config.yml: "modules:\n  http_2xx:\n    prober: http\n    timeout: 5s\n    http:\n\
          \      valid_status_codes: []  # Defaults to 2xx\n      method: GET\n      no_follow_redirects:\
          \ false\n      fail_if_ssl: false\n      fail_if_not_ssl: false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.chaos-monkey/summary: "Kills random pods for chaos fun!"
          description: "Randomly kills pods to help check your environment can withstand\
            \ failures"
          fabric8.chaos-monkey/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"CHAOS_MONKEY_INCLUDES\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"Comma separated list of patterns for pods which should be\
            \ considered for deletion\",\n      \"default\" : \"*\"\n    },\n    \"CHAOS_MONKEY_EXCLUDES\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Comma separated\
            \ list of patterns for pods which should not be deleted\",\n      \"default\"\
            \ : \"letschat*,gogs*\"\n    },\n    \"CHAOS_MONKEY_ROOM\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The chat room to talk to\",\n \
            \     \"default\" : \"#fabric8_${namespace}\"\n    },\n    \"CHAOS_MONKEY_KILL_FREQUENCY_SECONDS\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The number\
            \ of seconds between a kill\",\n      \"default\" : \"60\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "chaos-monkey"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "chaos-monkey"
        ownerReferences: []
      data:
        chaos-monkey-kill-frequency-seconds: "60"
        chaos-monkey-excludes: "letschat*,gogs*"
        chaos-monkey-room: "#fabric8_${namespace}"
        chaos-monkey-includes: "*"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "exposecontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "exposecontroller"
        ownerReferences: []
      data:
        config.yml: "domain:\nexposer:\n"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.fabric8-forge/summary: "Fabric8 :: Forge"
          description: "Fabric8 :: Forge"
          fabric8.fabric8-forge/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/yaml-schema: "type: object\nproperties:\n  jenkinsfile-library-git-repository:\n\
            \    type: string\n    description: The git clone URL for the library of Jenkinsfiles\
            \ used to associate CD pipelines with projects\n      reused across projects\n\
            \    default: https://github.com/fabric8io/jenkins-workflow-library.git\n\
            \  use-external-git-address:\n    type: boolean\n    description: Whether\
            \ we should use the external git URLs. Using internal tends to avoid DNS issues\
            \ of kubernetes pods not seeing external host names.\n  jenkins-gogs-user:\n\
            \    type: string\n    description: The user name for Jenkins to login to\
            \ Gogs\n    default: gogsadmin\n  jenkins-gogs-email:\n    type: string\n\
            \    description: The email address of the Jenkins user on Gogs\n    default:\
            \ 'gogsadmin@fabric8.local'\n  jenkins-gogs-password:\n    type: string\n\
            \    description: The password for Jenkins to login to Gogs\n    default:\
            \ RedHat$1\n  fabric8-default-environments:\n    type: string\n    description:\
            \ The list of default environment names to actual kubernetes namespaces\n\
            \    default: Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod\n"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      data:
        fabric8-default-environments: "Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod"
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        jenkinsfile-library-git-repository: "https://github.com/fabric8io/fabric8-jenkinsfile-library.git"
        jenkinsfile-library-git-tag: "v2.2.311"
        use-external-git-address: "false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.fabric8-forge/summary: "Fabric8 :: Forge"
          description: "Fabric8 :: Forge"
          fabric8.fabric8-forge/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/yaml-schema: "type: object\nproperties:\n  jenkinsfile-library-git-repository:\n\
            \    type: string\n    description: The git clone URL for the library of Jenkinsfiles\
            \ used to associate CD pipelines with projects\n      reused across projects\n\
            \    default: https://github.com/fabric8io/jenkins-workflow-library.git\n\
            \  use-external-git-address:\n    type: boolean\n    description: Whether\
            \ we should use the external git URLs. Using internal tends to avoid DNS issues\
            \ of kubernetes pods not seeing external host names.\n  jenkins-gogs-user:\n\
            \    type: string\n    description: The user name for Jenkins to login to\
            \ Gogs\n    default: gogsadmin\n  jenkins-gogs-email:\n    type: string\n\
            \    description: The email address of the Jenkins user on Gogs\n    default:\
            \ 'gogsadmin@fabric8.local'\n  jenkins-gogs-password:\n    type: string\n\
            \    description: The password for Jenkins to login to Gogs\n    default:\
            \ RedHat$1\n  fabric8-default-environments:\n    type: string\n    description:\
            \ The list of default environment names to actual kubernetes namespaces\n\
            \    default: Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod\n"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      data:
        fabric8-default-environments: "Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod"
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        jenkinsfile-library-git-repository: "https://github.com/fabric8io/fabric8-jenkinsfile-library.git"
        jenkinsfile-library-git-tag: "v2.2.311"
        use-external-git-address: "false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-git-app-secrets"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        gogs: "default-git-gogs"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-git-app-secrets"
        namespace: "user-secrets-source-admin"
        ownerReferences: []
      data:
        gogs: "default-git-gogs"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gerrit/summary: "[Gerrit](https://code.google.com/p/gerrit/) Web based\
            \ code review and project management for Git based projects"
          description: "Gerrit is a web based code review system, facilitating online\
            \ code reviews for projects using the Git version control system.\n\nGerrit\
            \ makes reviews easier by showing changes in a side-by-side display, and allowing\
            \ inline comments to be added by any reviewer.\n\nGerrit simplifies Git based\
            \ project maintainership by permitting any authorized user to submit changes\
            \ to the master Git repository, rather than requiring all approved changes\
            \ to be merged in by hand by the project maintainer. This functionality enables\
            \ a more centralized usage of Git.\n\n[https://www.gerritcodereview.com/](https://www.gerritcodereview.com/)"
          fabric8.gerrit/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"GERRIT_ADMIN_PWD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"Admin password\",\n      \"default\" : \"secret\"\n    },\n    \"GERRIT_INITIAL_COMMIT\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Parameter used\
            \ when the Gerrit Git repo is created using the DevOpsConnector. By default,\
            \ it is false as commits have already been done within gogs repo\",\n    \
            \  \"default\" : \"false\"\n    },\n    \"GERRIT_ADMIN_USER\" : {\n      \"\
            type\" : \"string\",\n      \"description\" : \"Admin user used to perform\
            \ operations on gerrit\",\n      \"default\" : \"admin\"\n    },\n    \"GERRIT_REPO_DESCRIPTION\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Description\
            \ ot add to the Gerrit Git repo created when a CD Project is created\",\n\
            \      \"default\" : \"Description of the gerrit git repo\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gerrit"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      data:
        gerrit-initial-commit: "false"
        gerrit-admin-pwd: "secret"
        gerrit-admin-user: "admin"
        gerrit-repo-description: "Description of the gerrit git repo"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gitlab/summary: "[Gitlab](http://gitlab.com/) - A self-hosted Git service"
          description: "Gitlab is a self-hosted Git service      \n\nMore details on the\
            \ <a href=\"http://gitlab.com/\" target=\"gitlab\">Gitlab home page</a>.\n"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"JENKINS_GITLAB_USER\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The user name for Jenkins to login to Gitlab\",\n      \"default\" :\
            \ \"jenkins\"\n    },\n    \"JENKINS_GITLAB_PASSWORD\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The password for Jenkins to login\
            \ to Gitlab\",\n      \"default\" : \"RedHat$1\"\n    },\n    \"GITLAB_URL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The GitLab\
            \ server URL\",\n      \"default\" : \"gitlab.vagrant.f8\"\n    },\n    \"\
            JENKINS_GITLAB_EMAIL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The email address of the Jenkins user on Gitlab\",\n      \"default\"\
            \ : \"gitlab@fabric8.local\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gitlab"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab"
        ownerReferences: []
      data:
        jenkins-gitlab-password: "RedHat$1"
        gitlab-url: "gitlab.vagrant.f8"
        jenkins-gitlab-user: "jenkins"
        jenkins-gitlab-email: "gitlab@fabric8.local"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gogs/summary: "[Gogs](http://gogs/) - A self-hosted Git service written\
            \ in Go"
          description: "Gogs is a self-hosted Git service written in Go.\n\nMore details\
            \ on the <a href=\"http://gogs.io/\" target=\"gogs\">Gogs home page</a>.\n"
          fabric8.gogs/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          expose.config.fabric8.io/url-key: "gogs-server--root-url"
          expose.config.fabric8.io/oauth-authorize-url-key: "oauth-authorize-uri"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"GOGS_SERVER__ROOT_URL\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"The root URL for the gogs server\"\n    },\n    \"DOMAIN\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The domain\
            \ name applications are installed on\",\n      \"default\" : \"vagrant.f8\"\
            \n    },\n    \"ADMIN_USER_EMAIL\" : {\n      \"type\" : \"string\",\n   \
            \   \"description\" : \"The email address of the admin user on Gogs\",\n \
            \     \"default\" : \"gogsadmin@fabric8.local\"\n    },\n    \"ADMIN_USER_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n    \"GOGS_SERVER__PROTOCOL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The protocol\
            \ for gogs to use; either http or https\",\n      \"default\" : \"http\"\n\
            \    },\n    \"GOGS_OAUTH_OPENSHIFT__ENABLED\" : {\n      \"type\" : \"string\"\
            ,\n      \"default\" : \"true\"\n    },\n    \"ADMIN_USER_CREATE\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"Should we create an\
            \ admin user on startup\",\n      \"default\" : \"true\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__TOKEN_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__SCOPES\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__AUTH_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_WEBHOOK__TASK_INTERVAL\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_WEBHOOK__SKIP_TLS_VERIFY\" : {\n      \"type\" : \"string\",\n\
            \      \"default\" : \"true\"\n    },\n    \"GOGS_SERVER__DOMAIN\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"The gogs server name\"\
            ,\n      \"default\" : \"gogs.vagrant.f8\"\n    },\n    \"ADMIN_USER_NAME\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The user name\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"GOGS_OAUTH__ENABLED\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_OAUTH_TWITTER__ENABLED\" : {\n      \"type\" : \"string\",\n \
            \     \"default\" : \"false\"\n    },\n    \"KUBERNETES_ADMIN_USER\" : {\n\
            \      \"type\" : \"string\",\n      \"description\" : \"The default Kubernetes\
            \ admin user\",\n      \"default\" : \"admin\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__CLIENT_ID\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"gogs\"\n    }\n\
            \  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      data:
        admin-user-create: "true"
        admin-user-email: "gogsadmin@fabric8.local"
        admin-user-name: "gogsadmin"
        admin-user-password: "RedHat$1"
        gogs-oauth--enabled: "true"
        gogs-oauth-openshift--auth-url: ""
        gogs-oauth-openshift--client-id: "gogs"
        gogs-oauth-openshift--enabled: "true"
        gogs-oauth-openshift--scopes: ""
        gogs-oauth-openshift--token-url: ""
        gogs-oauth-twitter--enabled: "false"
        gogs-server--root-url: ""
        gogs-webhook--skip-tls-verify: "true"
        gogs-webhook--task-interval: "true"
        kubernetes-admin-user: "admin"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.gogs/summary: "[Gogs](http://gogs/) - A self-hosted Git service written\
            \ in Go"
          description: "Gogs is a self-hosted Git service written in Go.\n\nMore details\
            \ on the <a href=\"http://gogs.io/\" target=\"gogs\">Gogs home page</a>.\n"
          fabric8.gogs/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          expose.config.fabric8.io/url-key: "gogs-server--root-url"
          expose.config.fabric8.io/oauth-authorize-url-key: "oauth-authorize-uri"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"GOGS_SERVER__ROOT_URL\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"The root URL for the gogs server\"\n    },\n    \"DOMAIN\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The domain\
            \ name applications are installed on\",\n      \"default\" : \"vagrant.f8\"\
            \n    },\n    \"ADMIN_USER_EMAIL\" : {\n      \"type\" : \"string\",\n   \
            \   \"description\" : \"The email address of the admin user on Gogs\",\n \
            \     \"default\" : \"gogsadmin@fabric8.local\"\n    },\n    \"ADMIN_USER_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n    \"GOGS_SERVER__PROTOCOL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The protocol\
            \ for gogs to use; either http or https\",\n      \"default\" : \"http\"\n\
            \    },\n    \"GOGS_OAUTH_OPENSHIFT__ENABLED\" : {\n      \"type\" : \"string\"\
            ,\n      \"default\" : \"true\"\n    },\n    \"ADMIN_USER_CREATE\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"Should we create an\
            \ admin user on startup\",\n      \"default\" : \"true\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__TOKEN_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__SCOPES\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__AUTH_URL\"\
            \ : {\n      \"type\" : \"string\"\n    },\n    \"GOGS_WEBHOOK__TASK_INTERVAL\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_WEBHOOK__SKIP_TLS_VERIFY\" : {\n      \"type\" : \"string\",\n\
            \      \"default\" : \"true\"\n    },\n    \"GOGS_SERVER__DOMAIN\" : {\n \
            \     \"type\" : \"string\",\n      \"description\" : \"The gogs server name\"\
            ,\n      \"default\" : \"gogs.vagrant.f8\"\n    },\n    \"ADMIN_USER_NAME\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The user name\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"GOGS_OAUTH__ENABLED\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"true\"\n    },\n\
            \    \"GOGS_OAUTH_TWITTER__ENABLED\" : {\n      \"type\" : \"string\",\n \
            \     \"default\" : \"false\"\n    },\n    \"KUBERNETES_ADMIN_USER\" : {\n\
            \      \"type\" : \"string\",\n      \"description\" : \"The default Kubernetes\
            \ admin user\",\n      \"default\" : \"admin\"\n    },\n    \"GOGS_OAUTH_OPENSHIFT__CLIENT_ID\"\
            \ : {\n      \"type\" : \"string\",\n      \"default\" : \"gogs\"\n    }\n\
            \  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      data:
        admin-user-create: "true"
        admin-user-email: "gogsadmin@fabric8.local"
        admin-user-name: "gogsadmin"
        admin-user-password: "RedHat$1"
        gogs-oauth--enabled: "true"
        gogs-oauth-openshift--auth-url: ""
        gogs-oauth-openshift--client-id: "gogs"
        gogs-oauth-openshift--enabled: "true"
        gogs-oauth-openshift--scopes: ""
        gogs-oauth-openshift--token-url: ""
        gogs-oauth-twitter--enabled: "false"
        gogs-server--root-url: ""
        gogs-webhook--skip-tls-verify: "true"
        gogs-webhook--task-interval: "true"
        kubernetes-admin-user: "admin"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-irc/summary: "[Hubot](http://hubot.github.com) IRC chat bot"
          description: "Chat bot app using [Hubot](https://hubot.github.com/) and an IRC\
            \ server to communicate with fabric8."
          fabric8.hubot-irc/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_IRC_USESSL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"Use SSL\",\n      \"default\" : \"1\"\n    },\n    \"HUBOT_GRAFANA_API_KEY\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"API key for\
            \ a particular user\"\n    },\n    \"HUBOT_IRC_NICK\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The name that hubot should joing\
            \ the room as\",\n      \"default\" : \"fabric8\"\n    },\n    \"HUBOT_IRC_DEBUG\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"Enables debug\
            \ logging\",\n      \"default\" : \"true\"\n    },\n    \"HUBOT_IRC_ROOMS\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"List of rooms\
            \ to join including '#' prefix\",\n      \"default\" : \"#fabric8_default,#random\"\
            \n    },\n    \"HUBOT_GRAFANA_HOST\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"Host for your Grafana 2.0 install, e.g. 'http://play.grafana.org'\"\
            \n    },\n    \"HUBOT_IRC_UNFLOOD\" : {\n      \"type\" : \"string\",\n  \
            \    \"description\" : \"Unflood\",\n      \"default\" : \"false\"\n    },\n\
            \    \"HUBOT_JENKINS_URL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The URL for the Jenkins CI server\",\n      \"default\" : \"http://jenkins\"\
            \n    },\n    \"HUBOT_IRC_SERVER\" : {\n      \"type\" : \"string\",\n   \
            \   \"description\" : \"The IRC server\",\n      \"default\" : \"irc.freenode.net\"\
            \n    },\n    \"HUBOT_IRC_NICKSERV_PASSWORD\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"IRC nick password\"\n    },\n    \"HUBOT_IRC_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"IRC password\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-irc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-irc"
        ownerReferences: []
      data:
        hubot-irc-server: "irc.freenode.net"
        hubot-irc-password: ""
        hubot-irc-unflood: "false"
        hubot-grafana-host: ""
        hubot-jenkins-url: "http://jenkins"
        hubot-irc-usessl: "1"
        hubot-irc-debug: "true"
        hubot-irc-nickserv-password: ""
        hubot-grafana-api-key: ""
        hubot-irc-rooms: "#fabric8_default,#random"
        hubot-irc-nick: "fabric8"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-letschat/summary: "[Hubot](http://hubot.github.com) chat bot for\
            \ Lets Chat"
          description: "Chat bot app using [Hubot](https://hubot.github.com/) for [Lets\
            \ Chat](http://sdelements.github.io/lets-chat/)"
          fabric8.hubot-letschat/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_GRAFANA_API_KEY\" : {\n      \"type\" : \"string\",\n      \"\
            description\" : \"API key for a particular user\"\n    },\n    \"LETSCHAT_HUBOT_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ for the Fabric8 Hubot bot\",\n      \"default\" : \"RedHat$1\"\n    },\n\
            \    \"HUBOT_GRAFANA_HOST\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"Host for your Grafana 2.0 install, e.g. 'http://play.grafana.org'\"\n\
            \    },\n    \"LETSCHAT_DEFAULT_ROOMS\" : {\n      \"type\" : \"string\",\n\
            \      \"description\" : \"Comma delimited list of rooms for hubot to join\
            \ on startup\",\n      \"default\" : \"fabric8_default\"\n    },\n    \"HUBOT_JENKINS_URL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The URL for\
            \ the Jenkins CI server\",\n      \"default\" : \"http://jenkins.default.svc.cluster.local\"\
            \n    },\n    \"LETSCHAT_HUBOT_USERNAME\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"The username for the Fabric8 Hubot bot\",\n \
            \     \"default\" : \"fabric8\"\n    },\n    \"LETSCHAT_HUBOT_SCRIPTS\" :\
            \ {\n      \"type\" : \"string\",\n      \"description\" : \"Coffeescripts\
            \ for hubot\",\n      \"default\" : \"https://github.com/fabric8io/fabric8-hubot-scripts.git\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-letschat"
        ownerReferences: []
      data:
        hubot-grafana-host: ""
        hubot-grafana-api-key: ""
        hubot-jenkins-url: "http://jenkins"
        hubot-jenkins-auth: ""
        letschat-hubot-username: "fabric8"
        letschat-hubot-password: "RedHat$1"
        letschat-default-rooms: "fabric8_default"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-notifier/summary: "Watches the OpenShift environment and notifies\
            \ Hubot of events such as builds completing or failing"
          description: "Watches the OpenShift environment and notifies Hubot of events\
            \ such as builds completing or failing."
          fabric8.hubot-notifier/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"KUBERNETES_DNS_DOMAIN\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The DNS domain added to the serviceName.namespace.svc.\
            \ to make the DNS name\",\n      \"default\" : \"cluster.local\"\n    },\n\
            \    \"HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        kubernetes-dns-domain: "cluster.local"
        hubot-username: "fabric8"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-notifier/summary: "Watches the OpenShift environment and notifies\
            \ Hubot of events such as builds completing or failing"
          description: "Watches the OpenShift environment and notifies Hubot of events\
            \ such as builds completing or failing."
          fabric8.hubot-notifier/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"KUBERNETES_DNS_DOMAIN\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The DNS domain added to the serviceName.namespace.svc.\
            \ to make the DNS name\",\n      \"default\" : \"cluster.local\"\n    },\n\
            \    \"HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        kubernetes-dns-domain: "cluster.local"
        hubot-username: "fabric8"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.hubot-notifier/summary: "Watches the OpenShift environment and notifies\
            \ Hubot of events such as builds completing or failing"
          description: "Watches the OpenShift environment and notifies Hubot of events\
            \ such as builds completing or failing."
          fabric8.hubot-notifier/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"KUBERNETES_DNS_DOMAIN\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"The DNS domain added to the serviceName.namespace.svc.\
            \ to make the DNS name\",\n      \"default\" : \"cluster.local\"\n    },\n\
            \    \"HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        kubernetes-dns-domain: "cluster.local"
        hubot-username: "fabric8"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_SLACK_GRAFANA_HOST\" : {\n      \"type\" : \"string\",\n    \
            \  \"description\" : \"Host for your Grafana 2.0 install, e.g. 'http://play.grafana.org'\"\
            ,\n      \"default\" : \"http://grafana.default.svc.cluster.local\"\n    },\n\
            \    \"HUBOT_SLACK_GRAFANA_API_KEY\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"API key for a particular user\"\n    },\n    \"\
            HUBOT_JENKINS_URL\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The URL for the Jenkins CI server\",\n      \"default\" : \"http://jenkins.default.svc.cluster.local\"\
            \n    },\n    \"HUBOT_SLACK_TOKEN\" : {\n      \"type\" : \"string\",\n  \
            \    \"description\" : \"The token for Hubot to login to Slack\"\n    }\n\
            \  }\n}"
        finalizers: []
        labels:
          name: "hubot-slack"
          provider: "fabric8"
          project: "hubot-slack"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-slack"
        ownerReferences: []
      data:
        hubot-jenkins-url: "http://jenkins/"
        hubot-grafana-host: "http://grafana/"
        hubot-slack-token: ""
        hubot-grafana-api-key: ""
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.jenkins/summary: "[Jenkins](http://jenkins-ci.org/) extendable open\
            \ source continuous integration server"
          description: "Jenkins CI is a leading open-source continuous integration server.\
            \ Built with Java, it provides 985 plugins to support building and testing\
            \ virtually any project.\n\n[http://jenkins-ci.org/](http://jenkins-ci.org/)"
          fabric8.jenkins/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"PIPELINE_ELASTICSEARCH_PROTOCOL\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"Protocol used to connect to elasticsearch\",\n\
            \      \"default\" : \"http\"\n    },\n    \"JENKINS_GOGS_USER\" : {\n   \
            \   \"type\" : \"string\",\n      \"description\" : \"The user name for Jenkins\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"JENKINS_GOGS_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ for Jenkins to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n\
            \    \"PIPELINE_ELASTICSEARCH_HOST\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"Elasticsearch hostname used for pipeline events\"\
            ,\n      \"default\" : \"elasticsearch\"\n    },\n    \"JENKINS_GOGS_EMAIL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The email address\
            \ of the Jenkins user on Gogs\",\n      \"default\" : \"gogsadmin@fabric8.local\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      data:
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        pipeline-elasticsearch-protocol: "http"
        pipeline-elasticsearch-host: "elasticsearch"
        project-version: "2.2.311"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.jenkins/summary: "[Jenkins](http://jenkins-ci.org/) extendable open\
            \ source continuous integration server"
          description: "Jenkins CI is a leading open-source continuous integration server.\
            \ Built with Java, it provides 985 plugins to support building and testing\
            \ virtually any project.\n\n[http://jenkins-ci.org/](http://jenkins-ci.org/)"
          fabric8.jenkins/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"PIPELINE_ELASTICSEARCH_PROTOCOL\" : {\n      \"type\" : \"string\"\
            ,\n      \"description\" : \"Protocol used to connect to elasticsearch\",\n\
            \      \"default\" : \"http\"\n    },\n    \"JENKINS_GOGS_USER\" : {\n   \
            \   \"type\" : \"string\",\n      \"description\" : \"The user name for Jenkins\
            \ to login to Gogs\",\n      \"default\" : \"gogsadmin\"\n    },\n    \"JENKINS_GOGS_PASSWORD\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The password\
            \ for Jenkins to login to Gogs\",\n      \"default\" : \"RedHat$1\"\n    },\n\
            \    \"PIPELINE_ELASTICSEARCH_HOST\" : {\n      \"type\" : \"string\",\n \
            \     \"description\" : \"Elasticsearch hostname used for pipeline events\"\
            ,\n      \"default\" : \"elasticsearch\"\n    },\n    \"JENKINS_GOGS_EMAIL\"\
            \ : {\n      \"type\" : \"string\",\n      \"description\" : \"The email address\
            \ of the Jenkins user on Gogs\",\n      \"default\" : \"gogsadmin@fabric8.local\"\
            \n    }\n  }\n}"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      data:
        jenkins-gogs-email: "gogsadmin@fabric8.local"
        jenkins-gogs-password: "RedHat$1"
        jenkins-gogs-user: "gogsadmin"
        pipeline-elasticsearch-protocol: "http"
        pipeline-elasticsearch-host: "elasticsearch"
        project-version: "2.2.311"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"LETSCHAT_DEFAULT_ROOMS\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"Default rooms to create and for\
            \ hubot to join\",\n      \"default\" : \"fabric8_default\"\n    },\n    \"\
            HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          name: "letschat"
          provider: "fabric8"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        hubot-username: "fabric8"
        letschat-default-rooms: "fabric8_default"
        hubot-token: ""
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/json-schema: "{\n  \"type\" : \"object\",\n  \"properties\" : {\n\
            \    \"HUBOT_USERNAME\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The username for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"fabric8\"\n    },\n    \"LETSCHAT_DEFAULT_ROOMS\" : {\n      \"type\"\
            \ : \"string\",\n      \"description\" : \"Default rooms to create and for\
            \ hubot to join\",\n      \"default\" : \"fabric8_default\"\n    },\n    \"\
            HUBOT_PASSWORD\" : {\n      \"type\" : \"string\",\n      \"description\"\
            \ : \"The password for Hubot to login to the chat service\",\n      \"default\"\
            \ : \"RedHat$1\"\n    }\n  }\n}"
        finalizers: []
        labels:
          name: "letschat"
          provider: "fabric8"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      data:
        hubot-password: "RedHat$1"
        hubot-username: "fabric8"
        letschat-default-rooms: "fabric8_default"
        hubot-token: ""
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "ingress-nginx"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nginx-config"
        namespace: "fabric8-system"
        ownerReferences: []
      data:
        client-max-body-size: "2000m"
        proxy-connect-timeout: "500s"
        proxy-read-timeout: "500s"
        server-names-hash-bucket-size: "256"
        server-names-hash-max-size: "1024"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://funktion.fabric8.io/img/profile.png"
          funktion.fabric8.io/chromeDevTools: "true"
        finalizers: []
        labels:
          funktion.fabric8.io/kind: "Runtime"
          provider: "fabric8"
          project: "funktion-runtimes"
          version: "1.1.44"
          group: "io.fabric8.funktion"
        name: "nodejs"
        ownerReferences: []
      data:
        fileExtensions: "js"
        debugPort: "5858"
        deployment: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        name: connector\n\
          \        imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        deploymentDebug: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        command:\n     \
          \   - node\n        - '--inspect'\n        - '--debug=5858'\n        - server.js\n\
          \        - '--codepath=./funktion/source.js'\n        name: connector\n    \
          \    imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        service: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \nspec:\n  ports:\n  - port: 80\n    targetPort: 8888\n"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://funktion.fabric8.io/img/profile.png"
          funktion.fabric8.io/chromeDevTools: "true"
        finalizers: []
        labels:
          funktion.fabric8.io/kind: "Runtime"
          provider: "fabric8"
          project: "funktion-runtimes"
          version: "1.1.44"
          group: "io.fabric8.funktion"
        name: "nodejs"
        ownerReferences: []
      data:
        fileExtensions: "js"
        debugPort: "5858"
        deployment: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        name: connector\n\
          \        imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        deploymentDebug: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \n  labels:\n    kind: function\n    name: hello\nspec:\n  replicas: 1\n  template:\n\
          \    metadata:\n      labels:\n        kind: function\n        name: hello\n\
          \    spec:\n      terminationGracePeriodSeconds: 1\n      containers:\n    \
          \  - image: funktion/funktion-nodejs-runtime:1.0.3\n        command:\n     \
          \   - node\n        - '--inspect'\n        - '--debug=5858'\n        - server.js\n\
          \        - '--codepath=./funktion/source.js'\n        name: connector\n    \
          \    imagePullPolicy: IfNotPresent\n        volumeMounts:\n          - name:\
          \ source\n            readOnly: true\n            mountPath: /usr/src/app/funktion\n\
          \        livenessProbe:\n          httpGet:\n            path: \"/healthz\"\n\
          \            port: 8888\n          initialDelaySeconds: 30\n        readinessProbe:\n\
          \          httpGet:\n            path: \"/healthz\"\n            port: 8888\n\
          \          initialDelaySeconds: 2\n      volumes:\n      - name: source\n  \
          \      configMap:\n          name: hello\n          items:\n          - key:\
          \ source\n            path: source.js\n"
        service: "metadata:\n  annotations:\n    fabric8.io/iconUrl: \"https://funktion.fabric8.io/img/profile.png\"\
          \nspec:\n  ports:\n  - port: 80\n    targetPort: 8888\n"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      data:
        prometheus.yml: "global:\n  scrape_interval:     30s\n  evaluation_interval: 60s\n\
          \nrule_files:\n  - \"*.rules\"\n\n# A scrape configuration for running Prometheus\
          \ on a Kubernetes cluster.\n# This uses separate scrape configs for cluster\
          \ components (i.e. API server, node)\n# and services to allow each to use different\
          \ authentication configs.\n#\n# Kubernetes labels will be added as Prometheus\
          \ labels on metrics via the\n# `labelmap` relabeling action.\nscrape_configs:\n\
          \n# Scrape config for API servers.\n- job_name: 'kubernetes-apiservers'\n\n\
          \  # This TLS & bearer token file config is used to connect to the actual scrape\n\
          \  # endpoints for cluster components. This is separate to discovery auth\n\
          \  # configuration (`in_cluster` below) because discovery & scraping are two\n\
          \  # separate concerns in Prometheus.\n  tls_config:\n    # workaround for Prometheus\
          \ -> Kubernetes cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n\
          \    insecure_skip_verify: true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
          \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\
          \n# Scrape config for nodes.\n- job_name: 'kubernetes-nodes'\n\n  # This TLS\
          \ & bearer token file config is used to connect to the actual scrape\n  # endpoints\
          \ for cluster components. This is separate to discovery auth\n  # configuration\
          \ (`in_cluster` below) because discovery & scraping are two\n  # separate concerns\
          \ in Prometheus.\n  tls_config:\n    # workaround for Prometheus -> Kubernetes\
          \ cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n    insecure_skip_verify:\
          \ true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape\
          \ config for node exporter pods deployed as a daemonset.\n- job_name: 'kubernetes-node-exporters'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_name]\n    action: keep\n    regex: node-exporter-.+\n\
          \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - source_labels: [__meta_kubernetes_pod_node_name]\n\
          \    action: replace\n    target_label: instance\n\n# Scrape config for service\
          \ endpoints.\n#\n# The relabeling allows the actual service scrape endpoint\
          \ to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`:\
          \ Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`:\
          \ If the metrics endpoint is secured then you will need\n# to set this to `https`\
          \ & most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`:\
          \ If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`:\
          \ If the metrics are exposed on a different port to the\n# service then set\
          \ this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n\
          \  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\
          \    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
          \    action: replace\n    regex: (.+)\n    target_label: __metrics_path__\n\
          \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
          \    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\\
          d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
          \  - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ probing services via the Blackbox Exporter.\n#\n# The relabeling allows the\
          \ actual service scrape endpoint to be configured\n# via the following annotations:\n\
          #\n# * `prometheus.io/probe`: Only probe services that have a value of `true`\n\
          - job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n   \
          \ module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: service\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\n\
          \    action: keep\n    regex: true\n  - source_labels: []\n    target_label:\
          \ __address__\n    replacement: blackbox\n  - source_labels: [__address__]\n\
          \    regex: (.*)(:80)?\n    target_label: __param_target\n  - source_labels:\
          \ [__meta_kubernetes_service_name,__meta_kubernetes_service_namespace]\n   \
          \ target_label: __param_target\n    regex: ([^;]+);(.+)\n    replacement: $1.$2.svc\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  -\
          \ source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ pods\n#\n# The relabeling allows the actual pod scrape endpoint to be configured\
          \ via the\n# following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape\
          \ pods that have a value of `true`\n# * `prometheus.io/port`: Scrape the pod\
          \ on the indicated port instead of the default of `9102`.\n- job_name: 'kubernetes-pods'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
          \    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n   \
          \ action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -\
          \ source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)"
        pod.rules: "pod:memory_usage_bytes = sum(container_memory_usage_bytes{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_receive_bytes:1m = sum(rate(container_network_receive_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_transmit_bytes:1m = sum(rate(container_network_transmit_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:cpu_usage_seconds:1m = sum(rate(container_cpu_usage_seconds_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \nALERT ServiceDown\nIF probe_success{job=\"kubernetes-services\"} == 0\n  FOR\
          \ 10s\n  LABELS {\n    service = \"{{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\"\
          \n  }\n  ANNOTATIONS {\n    severity    =\"page\",\n    summary     =\"Service\
          \ {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} down\",\n   \
          \ description =\"Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\
          \ has been down for more than 10 seconds!\"\n  }"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      data:
        prometheus.yml: "global:\n  scrape_interval:     30s\n  evaluation_interval: 60s\n\
          \nrule_files:\n  - \"*.rules\"\n\n# A scrape configuration for running Prometheus\
          \ on a Kubernetes cluster.\n# This uses separate scrape configs for cluster\
          \ components (i.e. API server, node)\n# and services to allow each to use different\
          \ authentication configs.\n#\n# Kubernetes labels will be added as Prometheus\
          \ labels on metrics via the\n# `labelmap` relabeling action.\nscrape_configs:\n\
          \n# Scrape config for API servers.\n- job_name: 'kubernetes-apiservers'\n\n\
          \  # This TLS & bearer token file config is used to connect to the actual scrape\n\
          \  # endpoints for cluster components. This is separate to discovery auth\n\
          \  # configuration (`in_cluster` below) because discovery & scraping are two\n\
          \  # separate concerns in Prometheus.\n  tls_config:\n    # workaround for Prometheus\
          \ -> Kubernetes cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n\
          \    insecure_skip_verify: true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
          \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\
          \n# Scrape config for nodes.\n- job_name: 'kubernetes-nodes'\n\n  # This TLS\
          \ & bearer token file config is used to connect to the actual scrape\n  # endpoints\
          \ for cluster components. This is separate to discovery auth\n  # configuration\
          \ (`in_cluster` below) because discovery & scraping are two\n  # separate concerns\
          \ in Prometheus.\n  tls_config:\n    # workaround for Prometheus -> Kubernetes\
          \ cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n    insecure_skip_verify:\
          \ true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape\
          \ config for node exporter pods deployed as a daemonset.\n- job_name: 'kubernetes-node-exporters'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_name]\n    action: keep\n    regex: node-exporter-.+\n\
          \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - source_labels: [__meta_kubernetes_pod_node_name]\n\
          \    action: replace\n    target_label: instance\n\n# Scrape config for service\
          \ endpoints.\n#\n# The relabeling allows the actual service scrape endpoint\
          \ to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`:\
          \ Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`:\
          \ If the metrics endpoint is secured then you will need\n# to set this to `https`\
          \ & most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`:\
          \ If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`:\
          \ If the metrics are exposed on a different port to the\n# service then set\
          \ this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n\
          \  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\
          \    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
          \    action: replace\n    regex: (.+)\n    target_label: __metrics_path__\n\
          \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
          \    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\\
          d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
          \  - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ probing services via the Blackbox Exporter.\n#\n# The relabeling allows the\
          \ actual service scrape endpoint to be configured\n# via the following annotations:\n\
          #\n# * `prometheus.io/probe`: Only probe services that have a value of `true`\n\
          - job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n   \
          \ module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: service\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\n\
          \    action: keep\n    regex: true\n  - source_labels: []\n    target_label:\
          \ __address__\n    replacement: blackbox\n  - source_labels: [__address__]\n\
          \    regex: (.*)(:80)?\n    target_label: __param_target\n  - source_labels:\
          \ [__meta_kubernetes_service_name,__meta_kubernetes_service_namespace]\n   \
          \ target_label: __param_target\n    regex: ([^;]+);(.+)\n    replacement: $1.$2.svc\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  -\
          \ source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ pods\n#\n# The relabeling allows the actual pod scrape endpoint to be configured\
          \ via the\n# following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape\
          \ pods that have a value of `true`\n# * `prometheus.io/port`: Scrape the pod\
          \ on the indicated port instead of the default of `9102`.\n- job_name: 'kubernetes-pods'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
          \    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n   \
          \ action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -\
          \ source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)"
        pod.rules: "pod:memory_usage_bytes = sum(container_memory_usage_bytes{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_receive_bytes:1m = sum(rate(container_network_receive_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_transmit_bytes:1m = sum(rate(container_network_transmit_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:cpu_usage_seconds:1m = sum(rate(container_cpu_usage_seconds_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \nALERT ServiceDown\nIF probe_success{job=\"kubernetes-services\"} == 0\n  FOR\
          \ 10s\n  LABELS {\n    service = \"{{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\"\
          \n  }\n  ANNOTATIONS {\n    severity    =\"page\",\n    summary     =\"Service\
          \ {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} down\",\n   \
          \ description =\"Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\
          \ has been down for more than 10 seconds!\"\n  }"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      data:
        prometheus.yml: "global:\n  scrape_interval:     30s\n  evaluation_interval: 60s\n\
          \nrule_files:\n  - \"*.rules\"\n\n# A scrape configuration for running Prometheus\
          \ on a Kubernetes cluster.\n# This uses separate scrape configs for cluster\
          \ components (i.e. API server, node)\n# and services to allow each to use different\
          \ authentication configs.\n#\n# Kubernetes labels will be added as Prometheus\
          \ labels on metrics via the\n# `labelmap` relabeling action.\nscrape_configs:\n\
          \n# Scrape config for API servers.\n- job_name: 'kubernetes-apiservers'\n\n\
          \  # This TLS & bearer token file config is used to connect to the actual scrape\n\
          \  # endpoints for cluster components. This is separate to discovery auth\n\
          \  # configuration (`in_cluster` below) because discovery & scraping are two\n\
          \  # separate concerns in Prometheus.\n  tls_config:\n    # workaround for Prometheus\
          \ -> Kubernetes cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n\
          \    insecure_skip_verify: true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
          \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\
          \n# Scrape config for nodes.\n- job_name: 'kubernetes-nodes'\n\n  # This TLS\
          \ & bearer token file config is used to connect to the actual scrape\n  # endpoints\
          \ for cluster components. This is separate to discovery auth\n  # configuration\
          \ (`in_cluster` below) because discovery & scraping are two\n  # separate concerns\
          \ in Prometheus.\n  tls_config:\n    # workaround for Prometheus -> Kubernetes\
          \ cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n    insecure_skip_verify:\
          \ true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape\
          \ config for node exporter pods deployed as a daemonset.\n- job_name: 'kubernetes-node-exporters'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_name]\n    action: keep\n    regex: node-exporter-.+\n\
          \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - source_labels: [__meta_kubernetes_pod_node_name]\n\
          \    action: replace\n    target_label: instance\n\n# Scrape config for service\
          \ endpoints.\n#\n# The relabeling allows the actual service scrape endpoint\
          \ to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`:\
          \ Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`:\
          \ If the metrics endpoint is secured then you will need\n# to set this to `https`\
          \ & most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`:\
          \ If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`:\
          \ If the metrics are exposed on a different port to the\n# service then set\
          \ this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n\
          \  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\
          \    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
          \    action: replace\n    regex: (.+)\n    target_label: __metrics_path__\n\
          \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
          \    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\\
          d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
          \  - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ probing services via the Blackbox Exporter.\n#\n# The relabeling allows the\
          \ actual service scrape endpoint to be configured\n# via the following annotations:\n\
          #\n# * `prometheus.io/probe`: Only probe services that have a value of `true`\n\
          - job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n   \
          \ module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: service\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\n\
          \    action: keep\n    regex: true\n  - source_labels: []\n    target_label:\
          \ __address__\n    replacement: blackbox\n  - source_labels: [__address__]\n\
          \    regex: (.*)(:80)?\n    target_label: __param_target\n  - source_labels:\
          \ [__meta_kubernetes_service_name,__meta_kubernetes_service_namespace]\n   \
          \ target_label: __param_target\n    regex: ([^;]+);(.+)\n    replacement: $1.$2.svc\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  -\
          \ source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ pods\n#\n# The relabeling allows the actual pod scrape endpoint to be configured\
          \ via the\n# following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape\
          \ pods that have a value of `true`\n# * `prometheus.io/port`: Scrape the pod\
          \ on the indicated port instead of the default of `9102`.\n- job_name: 'kubernetes-pods'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
          \    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n   \
          \ action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -\
          \ source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)"
        pod.rules: "pod:memory_usage_bytes = sum(container_memory_usage_bytes{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_receive_bytes:1m = sum(rate(container_network_receive_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_transmit_bytes:1m = sum(rate(container_network_transmit_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:cpu_usage_seconds:1m = sum(rate(container_cpu_usage_seconds_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \nALERT ServiceDown\nIF probe_success{job=\"kubernetes-services\"} == 0\n  FOR\
          \ 10s\n  LABELS {\n    service = \"{{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\"\
          \n  }\n  ANNOTATIONS {\n    severity    =\"page\",\n    summary     =\"Service\
          \ {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} down\",\n   \
          \ description =\"Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\
          \ has been down for more than 10 seconds!\"\n  }"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql-cnf"
        ownerReferences: []
      data:
        custom.cnf: "[mysqld]\nsql-mode=\"\"\n"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql-initdb"
        ownerReferences: []
      data:
        init.sql: "CREATE TABLE IF NOT EXISTS zipkin_spans (\n  `trace_id` BIGINT NOT\
          \ NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(255) NOT NULL,\n  `parent_id`\
          \ BIGINT,\n  `debug` BIT(1),\n  `start_ts` BIGINT COMMENT 'Span.timestamp():\
          \ epoch micros used for endTs query and to implement TTL',\n  `duration` BIGINT\
          \ COMMENT 'Span.duration(): micros used for minDuration and maxDuration query'\n\
          ) ENGINE=InnoDB ROW_FORMAT=COMPRESSED;\n\nALTER TABLE zipkin_spans ADD UNIQUE\
          \ KEY(`trace_id`, `id`) COMMENT 'ignore insert on duplicate';\nALTER TABLE zipkin_spans\
          \ ADD INDEX(`trace_id`, `id`) COMMENT 'for joining with zipkin_annotations';\n\
          ALTER TABLE zipkin_spans ADD INDEX(`trace_id`) COMMENT 'for getTracesByIds';\n\
          ALTER TABLE zipkin_spans ADD INDEX(`name`) COMMENT 'for getTraces and getSpanNames';\n\
          ALTER TABLE zipkin_spans ADD INDEX(`start_ts`) COMMENT 'for getTraces ordering\
          \ and range';\n\nCREATE TABLE IF NOT EXISTS zipkin_annotations (\n  `trace_id`\
          \ BIGINT NOT NULL COMMENT 'coincides with zipkin_spans.trace_id',\n  `span_id`\
          \ BIGINT NOT NULL COMMENT 'coincides with zipkin_spans.id',\n  `a_key` VARCHAR(255)\
          \ NOT NULL COMMENT 'BinaryAnnotation.key or Annotation.value if type == -1',\n\
          \  `a_value` BLOB COMMENT 'BinaryAnnotation.value(), which must be smaller than\
          \ 64KB',\n  `a_type` INT NOT NULL COMMENT 'BinaryAnnotation.type() or -1 if\
          \ Annotation',\n  `a_timestamp` BIGINT COMMENT 'Used to implement TTL; Annotation.timestamp\
          \ or zipkin_spans.timestamp',\n  `endpoint_ipv4` INT COMMENT 'Null when Binary/Annotation.endpoint\
          \ is null',\n  `endpoint_ipv6` BINARY(16) COMMENT 'Null when Binary/Annotation.endpoint\
          \ is null, or no IPv6 address',\n  `endpoint_port` SMALLINT COMMENT 'Null when\
          \ Binary/Annotation.endpoint is null',\n  `endpoint_service_name` VARCHAR(255)\
          \ COMMENT 'Null when Binary/Annotation.endpoint is null'\n) ENGINE=InnoDB ROW_FORMAT=COMPRESSED;\n\
          \nALTER TABLE zipkin_annotations ADD UNIQUE KEY(`trace_id`, `span_id`, `a_key`,\
          \ `a_timestamp`) COMMENT 'Ignore insert on duplicate';\nALTER TABLE zipkin_annotations\
          \ ADD INDEX(`trace_id`, `span_id`) COMMENT 'for joining with zipkin_spans';\n\
          ALTER TABLE zipkin_annotations ADD INDEX(`trace_id`) COMMENT 'for getTraces/ByIds';\n\
          ALTER TABLE zipkin_annotations ADD INDEX(`endpoint_service_name`) COMMENT 'for\
          \ getTraces and getServiceNames';\nALTER TABLE zipkin_annotations ADD INDEX(`a_type`)\
          \ COMMENT 'for getTraces';\nALTER TABLE zipkin_annotations ADD INDEX(`a_key`)\
          \ COMMENT 'for getTraces';\n\nCREATE TABLE IF NOT EXISTS zipkin_dependencies\
          \ (\n  `day` DATE NOT NULL,\n  `parent` VARCHAR(255) NOT NULL,\n  `child` VARCHAR(255)\
          \ NOT NULL,\n  `call_count` BIGINT\n) ENGINE=InnoDB ROW_FORMAT=COMPRESSED;\n\
          \nALTER TABLE zipkin_dependencies ADD UNIQUE KEY(`day`, `parent`, `child`);\n\
          GRANT SELECT, INSERT, UPDATE, DELETE ON zipkin.* TO zipkin@'%' IDENTIFIED BY\
          \ 'zipkin' WITH GRANT OPTION ;\nFLUSH PRIVILEGES;\n"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fluentd"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_HOST"
                value: "elasticsearch"
              - name: "ELASTICSEARCH_PORT"
                value: "9200"
              image: "fabric8/fluentd-kubernetes:v1.19"
              name: "fluentd"
              ports:
              - containerPort: 24231
                name: "scrape"
              resources:
                limits:
                  cpu: "100m"
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/log"
                name: "varlog"
              - mountPath: "/var/lib/docker/containers"
                name: "defaultdocker"
                readOnly: true
              - mountPath: "/mnt/ephemeral/docker/containers"
                name: "awsdocker"
                readOnly: true
              - mountPath: "/mnt/sda1/var/lib/docker/containers"
                name: "minikubedocker"
                readOnly: true
            imagePullSecrets: []
            serviceAccountName: "fluentd"
            volumes:
            - hostPath:
                path: "/var/log"
              name: "varlog"
            - hostPath:
                path: "/var/lib/docker/containers"
              name: "defaultdocker"
            - hostPath:
                path: "/mnt/ephemeral/docker/containers"
              name: "awsdocker"
            - hostPath:
                path: "/mnt/sda1/var/lib/docker/containers"
              name: "minikubedocker"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fluentd"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_HOST"
                value: "elasticsearch"
              - name: "ELASTICSEARCH_PORT"
                value: "9200"
              image: "fabric8/fluentd-kubernetes:v1.19"
              name: "fluentd"
              ports:
              - containerPort: 24231
                name: "scrape"
              resources:
                limits:
                  cpu: "100m"
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/log"
                name: "varlog"
              - mountPath: "/var/lib/docker/containers"
                name: "defaultdocker"
                readOnly: true
              - mountPath: "/mnt/ephemeral/docker/containers"
                name: "awsdocker"
                readOnly: true
              - mountPath: "/mnt/sda1/var/lib/docker/containers"
                name: "minikubedocker"
                readOnly: true
            imagePullSecrets: []
            serviceAccountName: "fluentd"
            volumes:
            - hostPath:
                path: "/var/log"
              name: "varlog"
            - hostPath:
                path: "/var/lib/docker/containers"
              name: "defaultdocker"
            - hostPath:
                path: "/mnt/ephemeral/docker/containers"
              name: "awsdocker"
            - hostPath:
                path: "/mnt/sda1/var/lib/docker/containers"
              name: "minikubedocker"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fluentd"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_HOST"
                value: "elasticsearch"
              - name: "ELASTICSEARCH_PORT"
                value: "9200"
              image: "fabric8/fluentd-kubernetes:v1.19"
              name: "fluentd"
              ports:
              - containerPort: 24231
                name: "scrape"
              resources:
                limits:
                  cpu: "100m"
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/log"
                name: "varlog"
              - mountPath: "/var/lib/docker/containers"
                name: "defaultdocker"
                readOnly: true
              - mountPath: "/mnt/ephemeral/docker/containers"
                name: "awsdocker"
                readOnly: true
              - mountPath: "/mnt/sda1/var/lib/docker/containers"
                name: "minikubedocker"
                readOnly: true
            imagePullSecrets: []
            serviceAccountName: "fluentd"
            volumes:
            - hostPath:
                path: "/var/log"
              name: "varlog"
            - hostPath:
                path: "/var/lib/docker/containers"
              name: "defaultdocker"
            - hostPath:
                path: "/mnt/ephemeral/docker/containers"
              name: "awsdocker"
            - hostPath:
                path: "/mnt/sda1/var/lib/docker/containers"
              name: "minikubedocker"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      spec:
        template:
          metadata:
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-node-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "node-exporter"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-collector.procfs"
              - "/host/proc"
              - "-collector.sysfs"
              - "/host/proc"
              - "-collector.filesystem.ignored-mount-points"
              - "^/(sys|proc|dev|host|etc)($|/)"
              command: []
              env: []
              image: "prom/node-exporter"
              name: "node-exporter"
              ports:
              - containerPort: 9100
                name: "scrape"
              volumeMounts:
              - mountPath: "/host/proc"
                name: "host-proc"
                readOnly: true
              - mountPath: "/host/sys"
                name: "host-sys"
                readOnly: true
              - mountPath: "/rootfs"
                name: "host-root"
                readOnly: true
            hostNetwork: true
            imagePullSecrets: []
            serviceAccountName: "node-exporter"
            volumes:
            - hostPath:
                path: "/proc"
              name: "host-proc"
            - hostPath:
                path: "/sys"
              name: "host-sys"
            - hostPath:
                path: "/"
              name: "host-root"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      spec:
        template:
          metadata:
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-node-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "node-exporter"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-collector.procfs"
              - "/host/proc"
              - "-collector.sysfs"
              - "/host/proc"
              - "-collector.filesystem.ignored-mount-points"
              - "^/(sys|proc|dev|host|etc)($|/)"
              command: []
              env: []
              image: "prom/node-exporter"
              name: "node-exporter"
              ports:
              - containerPort: 9100
                name: "scrape"
              volumeMounts:
              - mountPath: "/host/proc"
                name: "host-proc"
                readOnly: true
              - mountPath: "/host/sys"
                name: "host-sys"
                readOnly: true
              - mountPath: "/rootfs"
                name: "host-root"
                readOnly: true
            hostNetwork: true
            imagePullSecrets: []
            serviceAccountName: "node-exporter"
            volumes:
            - hostPath:
                path: "/proc"
              name: "host-proc"
            - hostPath:
                path: "/sys"
              name: "host-sys"
            - hostPath:
                path: "/"
              name: "host-root"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      spec:
        template:
          metadata:
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-node-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "node-exporter"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-collector.procfs"
              - "/host/proc"
              - "-collector.sysfs"
              - "/host/proc"
              - "-collector.filesystem.ignored-mount-points"
              - "^/(sys|proc|dev|host|etc)($|/)"
              command: []
              env: []
              image: "prom/node-exporter"
              name: "node-exporter"
              ports:
              - containerPort: 9100
                name: "scrape"
              volumeMounts:
              - mountPath: "/host/proc"
                name: "host-proc"
                readOnly: true
              - mountPath: "/host/sys"
                name: "host-sys"
                readOnly: true
              - mountPath: "/rootfs"
                name: "host-root"
                readOnly: true
            hostNetwork: true
            imagePullSecrets: []
            serviceAccountName: "node-exporter"
            volumes:
            - hostPath:
                path: "/proc"
              name: "host-proc"
            - hostPath:
                path: "/sys"
              name: "host-sys"
            - hostPath:
                path: "/"
              name: "host-root"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman&var-version=2.2.168"
        finalizers: []
        labels:
          component: "ApimanManagerAPI"
          provider: "fabric8"
          project: "apiman"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "apiman"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            component: "ApimanManagerAPI"
            provider: "fabric8"
            project: "apiman"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman&var-version=2.2.168"
            finalizers: []
            labels:
              component: "ApimanManagerAPI"
              provider: "fabric8"
              project: "apiman"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "AB_JOLOKIA_AUTH_OPENSHIFT"
                value: "true"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/apiman:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "apiman"
              ports:
              - containerPort: 7070
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/apiman/"
                  port: 7070
                initialDelaySeconds: 15
                timeoutSeconds: 60
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman&var-version=2.2.168"
        finalizers: []
        labels:
          component: "ApimanManagerAPI"
          provider: "fabric8"
          project: "apiman"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "apiman"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            component: "ApimanManagerAPI"
            provider: "fabric8"
            project: "apiman"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman&var-version=2.2.168"
            finalizers: []
            labels:
              component: "ApimanManagerAPI"
              provider: "fabric8"
              project: "apiman"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "AB_JOLOKIA_AUTH_OPENSHIFT"
                value: "true"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/apiman:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "apiman"
              ports:
              - containerPort: 7070
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/apiman/"
                  port: 7070
                initialDelaySeconds: 15
                timeoutSeconds: 60
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            component: "ApimanGateway"
            provider: "fabric8"
            project: "apiman-gateway"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              component: "ApimanGateway"
              provider: "fabric8"
              project: "apiman-gateway"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "AB_JOLOKIA_AUTH_OPENSHIFT"
                value: "true"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/apiman-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "apiman-gateway"
              ports:
              - containerPort: 7777
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/api/system/status"
                  port: 7777
                initialDelaySeconds: 5
                timeoutSeconds: 60
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          component: "ApimanGateway"
          provider: "fabric8"
          project: "apiman-gateway"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "apiman-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            component: "ApimanGateway"
            provider: "fabric8"
            project: "apiman-gateway"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/apiman-gateway/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=apiman-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              component: "ApimanGateway"
              provider: "fabric8"
              project: "apiman-gateway"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "AB_JOLOKIA_AUTH_OPENSHIFT"
                value: "true"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/apiman-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "apiman-gateway"
              ports:
              - containerPort: 7777
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/api/system/status"
                  port: 7777
                initialDelaySeconds: 5
                timeoutSeconds: 60
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=artifactory&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "artifactory"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "artifactory"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "artifactory"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/artifactory/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=artifactory&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "artifactory"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "jfrog-docker-registry.bintray.io/artifactory/artifactory-oss"
              name: "artifactory"
              ports:
              - containerPort: 8081
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=chaos-monkey&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "chaos-monkey"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "chaos-monkey"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "chaos-monkey"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/chaos-monkey/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=chaos-monkey&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "chaos-monkey"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "CHAOS_MONKEY_INCLUDES"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-includes"
                    name: "chaos-monkey"
              - name: "CHAOS_MONKEY_EXCLUDES"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-excludes"
                    name: "chaos-monkey"
              - name: "CHAOS_MONKEY_ROOM"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-room"
                    name: "chaos-monkey"
              - name: "CHAOS_MONKEY_KILL_FREQUENCY_SECONDS"
                valueFrom:
                  configMapKeyRef:
                    key: "chaos-monkey-kill-frequency-seconds"
                    name: "chaos-monkey"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default.svc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_USERNAME"
                value: ""
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_PASSWORD"
                value: ""
              image: "fabric8/chaos-monkey:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "chaos-monkey"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=configmapcontroller&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "configmapcontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "configmapcontroller"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "configmapcontroller"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=configmapcontroller&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "configmapcontroller"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/configmapcontroller:2.3.5"
              name: "configmapcontroller"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "configmapcontroller"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=content-repository&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "content-repository"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "content-repository"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "content-repository"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/content-repository/src/main/fabric8/icon.svg"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=content-repository&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "content-repository"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/alpine-caddy:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "content-repository"
              ports:
              - containerPort: 80
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/www/html"
                name: "content"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "content"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "elasticsearch"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /usr/share/elasticsearch/data\"],\"volumeMounts\":[{\"mountPath\":\"/usr/share/elasticsearch/data\"\
                ,\"name\":\"data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE"
                value: "elasticsearch-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-k8s:2.3.4"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_template/logstash"
                  port: 9200
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "data"
            - args: []
              command: []
              env: []
              image: "fabric8/elasticsearch-logstash-template:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            volumes:
            - name: "data"
              persistentVolumeClaim:
                claimName: "es-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "elasticsearch"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /usr/share/elasticsearch/data\"],\"volumeMounts\":[{\"mountPath\":\"/usr/share/elasticsearch/data\"\
                ,\"name\":\"data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE"
                value: "elasticsearch-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-k8s:2.3.4"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_template/logstash"
                  port: 9200
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "data"
            - args: []
              command: []
              env: []
              image: "fabric8/elasticsearch-logstash-template:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            volumes:
            - name: "data"
              persistentVolumeClaim:
                claimName: "es-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "elasticsearch"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /usr/share/elasticsearch/data\"],\"volumeMounts\":[{\"mountPath\":\"/usr/share/elasticsearch/data\"\
                ,\"name\":\"data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE"
                value: "elasticsearch-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-k8s:2.3.4"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_template/logstash"
                  port: 9200
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "data"
            - args: []
              command: []
              env: []
              image: "fabric8/elasticsearch-logstash-template:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            volumes:
            - name: "data"
              persistentVolumeClaim:
                claimName: "es-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "elasticsearch-v1"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch-v1"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE_DNS"
                value: "elasticsearch-v1-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-v1:2.2.168"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch-v1"
              ports:
              - containerPort: 9200
                name: "http"
              - containerPort: 9300
                name: "transport"
              readinessProbe:
                exec:
                  command:
                  - "/probe.sh"
                  - "http"
                initialDelaySeconds: 30
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "elasticsearch-data"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "elasticsearch-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch-v1"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "elasticsearch-v1"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "elasticsearch-v1"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch-v1&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch-v1"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE_DNS"
                value: "elasticsearch-v1-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-v1:2.2.168"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch-v1"
              ports:
              - containerPort: 9200
                name: "http"
              - containerPort: 9300
                name: "transport"
              readinessProbe:
                exec:
                  command:
                  - "/probe.sh"
                  - "http"
                initialDelaySeconds: 30
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "elasticsearch-data"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "elasticsearch-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "exposecontroller"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=exposecontroller&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "exposecontroller"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "exposecontroller"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "exposecontroller"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png"
              configmap.fabric8.io/update-on-change: "exposecontroller"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=exposecontroller&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "exposecontroller"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/exposecontroller:2.3.2"
              livenessProbe:
                exec:
                  command:
                  - "cat"
                  - "/tmp/restarteveryday"
                initialDelaySeconds: 86164
              name: "exposecontroller"
              ports: []
              volumeMounts:
              - mountPath: "/etc/exposecontroller"
                name: "config-volume"
            imagePullSecrets: []
            serviceAccountName: "exposecontroller"
            volumes:
            - configMap:
                items: []
                name: "exposecontroller"
              name: "config-volume"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-docker-registry"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/registry\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/registry\"\
                ,\"name\":\"fabric8-docker-registry-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-docker-registry"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "registry:2"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-docker-registry"
              ports:
              - containerPort: 5000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/lib/registry"
                name: "fabric8-docker-registry-storage"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "fabric8-docker-registry-storage"
              persistentVolumeClaim:
                claimName: "fabric8-docker-registry-storage"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-docker-registry"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fabric8-docker-registry"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-docker-registry"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/registry\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/registry\"\
                ,\"name\":\"fabric8-docker-registry-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-docker-registry"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "registry:2"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-docker-registry"
              ports:
              - containerPort: 5000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/lib/registry"
                name: "fabric8-docker-registry-storage"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "fabric8-docker-registry-storage"
              persistentVolumeClaim:
                claimName: "fabric8-docker-registry-storage"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
          fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-forge"
            group: "io.fabric8.forge.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
              fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
              fabric8.io/git-branch: "release-v2.3.88"
              fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-forge"
              version: "2.3.88"
              group: "io.fabric8.forge.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "FABRIC8_DEFAULT_ENVIRONMENTS"
                valueFrom:
                  configMapKeyRef:
                    key: "fabric8-default-environments"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_REPOSITORY"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-repository"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_TAG"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-tag"
                    name: "fabric8-forge"
              - name: "USE_EXTERNAL_GIT_ADDRESS"
                valueFrom:
                  configMapKeyRef:
                    key: "use-external-git-address"
                    name: "fabric8-forge"
              - name: "KUBERNETES_TRUST_CERTIFICATES"
                value: "true"
              - name: "SKIP_TLS_VERIFY"
                value: "true"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "fabric8-forge"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "fabric8-forge"
              - name: "FABRIC8_ARCHETYPES_VERSION"
                value: "2.2.195"
              - name: "JAVA_OPTIONS"
                value: "-Dorg.apache.maven.log_transfer=true -Dorg.apache.cxf.logging.enabled=false"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "fabric8-forge"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default.svc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/fabric8-forge:2.3.88"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-forge"
              ports:
              - containerPort: 8080
                name: "http"
                protocol: "TCP"
              - containerPort: 8778
                name: "jolokia"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_ping"
                  port: 8080
                initialDelaySeconds: 30
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
          fabric8.io/git-branch: "release-v2.3.88"
          fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fabric8-forge"
          version: "2.3.88"
          group: "io.fabric8.forge.apps"
        name: "fabric8-forge"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "fabric8-forge"
            group: "io.fabric8.forge.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg"
              fabric8.io/git-commit: "bad661f3285ecbcd6b7a9373e194bda075d832eb"
              fabric8.io/git-branch: "release-v2.3.88"
              fabric8.io/metrics-path: "dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fabric8-forge"
              version: "2.3.88"
              group: "io.fabric8.forge.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "FABRIC8_DEFAULT_ENVIRONMENTS"
                valueFrom:
                  configMapKeyRef:
                    key: "fabric8-default-environments"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_REPOSITORY"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-repository"
                    name: "fabric8-forge"
              - name: "JENKINSFILE_LIBRARY_GIT_TAG"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkinsfile-library-git-tag"
                    name: "fabric8-forge"
              - name: "USE_EXTERNAL_GIT_ADDRESS"
                valueFrom:
                  configMapKeyRef:
                    key: "use-external-git-address"
                    name: "fabric8-forge"
              - name: "KUBERNETES_TRUST_CERTIFICATES"
                value: "true"
              - name: "SKIP_TLS_VERIFY"
                value: "true"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "fabric8-forge"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "fabric8-forge"
              - name: "FABRIC8_ARCHETYPES_VERSION"
                value: "2.2.195"
              - name: "JAVA_OPTIONS"
                value: "-Dorg.apache.maven.log_transfer=true -Dorg.apache.cxf.logging.enabled=false"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "fabric8-forge"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default.svc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/fabric8-forge:2.3.88"
              imagePullPolicy: "IfNotPresent"
              name: "fabric8-forge"
              ports:
              - containerPort: 8080
                name: "http"
                protocol: "TCP"
              - containerPort: 8778
                name: "jolokia"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_ping"
                  port: 8080
                initialDelaySeconds: 30
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
          fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.4.24"
          fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-tag: "app-console-2.0.1"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "funktion-operator"
            provider: "fabric8"
            group: "io.fabric8.platform.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
              fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.4.24"
              fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-tag: "app-console-2.0.1"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "funktion-operator"
              version: "2.4.24"
              group: "io.fabric8.platform.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command:
              - "/bin/operator"
              - "operate"
              env: []
              image: "funktion/funktion:1.0.9"
              imagePullPolicy: "IfNotPresent"
              name: "funktion"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "funktion-operator"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
          fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.4.24"
          fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
          fabric8.io/scm-tag: "app-console-2.0.1"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "funktion-operator"
          version: "2.4.24"
          group: "io.fabric8.platform.apps"
        name: "funktion-operator"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "funktion-operator"
            provider: "fabric8"
            group: "io.fabric8.platform.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "3c109abd7d3fc307fb3fdefd117bf8148491ee0b"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=funktion-operator&var-version=2.4.24"
              fabric8.io/scm-con-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-url: "http://github.com/fabric8io/fabric8-platform/apps/funktion-operator"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-platform/master/apps/funktion-operator/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.4.24"
              fabric8.io/scm-devcon-url: "scm:git:git@github.com:fabric8io/fabric8-platform.git/apps/funktion-operator"
              fabric8.io/scm-tag: "app-console-2.0.1"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "funktion-operator"
              version: "2.4.24"
              group: "io.fabric8.platform.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command:
              - "/bin/operator"
              - "operate"
              env: []
              image: "funktion/funktion:1.0.9"
              imagePullPolicy: "IfNotPresent"
              name: "funktion"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "funktion-operator"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gerrit&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gerrit"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gerrit"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gerrit"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gerrit/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/secret-ssh-key: "gerrit-admin-ssh"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gerrit&var-version=2.2.311"
              fabric8.io/secret-ssh-public-key: "gerrit-users-ssh-keys[id-jenkins-rsa.pub,id-sonar-rsa.pub]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gerrit"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "GERRIT_PUBLIC_KEYS_PATH"
                value: "/home/gerrit/ssh-keys"
              - name: "GIT_SERVER_PASSWORD"
                value: "RedHat$1"
              - name: "GERRIT_ADMIN_FULLNAME"
                value: "Administrator"
              - name: "GERRIT_ACCOUNTS"
                value: "jenkins,jenkins,jenkins@fabric8.io,secret,Non-Interactive Users:Administrators;sonar,sonar,sonar@fabric8.io,secret,Non-Interactive\
                  \ Users"
              - name: "GERRIT_ADMIN_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-admin-user"
                    name: "gerrit"
              - name: "GIT_SERVER_IP"
                value: "gogs.default.svc.cluster.local"
              - name: "GERRIT_ADMIN_PRIVATE_KEY"
                value: "/root/.ssh/id_rsa"
              - name: "GERRIT_REPO_DESCRIPTION"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-repo-description"
                    name: "gerrit"
              - name: "GERRIT_SSH_PATH"
                value: "/root/.ssh"
              - name: "GERRIT_ADMIN_EMAIL"
                value: "admin@fabric8.io"
              - name: "GERRIT_GIT_REMOTEPATH"
                value: "ssh://admin@localhost:29418/All-Projects"
              - name: "GIT_SERVER_PROJ_ROOT"
                value: "gogsadmin"
              - name: "GERRIT_ADMIN_PWD"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-admin-pwd"
                    name: "gerrit"
              - name: "GERRIT_GIT_PROJECT_CONFIG"
                value: "/home/gerrit/configs/project.config"
              - name: "GIT_SERVER_PORT"
                value: "80"
              - name: "GERRIT_INITIAL_COMMIT"
                valueFrom:
                  configMapKeyRef:
                    key: "gerrit-initial-commit"
                    name: "gerrit"
              - name: "GERRIT_USER_PUBLIC_KEY_SUFFIX"
                value: "-rsa.pub"
              - name: "GIT_SERVER_USER"
                value: "gogsadmin"
              - name: "GERRIT_GIT_LOCALPATH"
                value: "/home/gerrit/git"
              - name: "GERRIT_USER_PUBLIC_KEY_PREFIX"
                value: "id-"
              - name: "AUTH_TYPE"
                value: "DEVELOPMENT_BECOME_ANY_ACCOUNT"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/gerrit:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "gerrit"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/root/.ssh"
                name: "gerrit-admin-ssh-key"
                readOnly: false
              - mountPath: "/home/gerrit/ssh-keys"
                name: "gerrit-users-ssh-keys"
                readOnly: false
            imagePullSecrets: []
            serviceAccountName: "gerrit"
            volumes:
            - name: "gerrit-admin-ssh-key"
              secret:
                items: []
                secretName: "gerrit-admin-ssh"
            - name: "gerrit-users-ssh-keys"
              secret:
                items: []
                secretName: "gerrit-users-ssh-keys"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo="
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=git-collector&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "git-collector"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "git-collector"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "git-collector"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "data:image/svg+xml;charset=UTF-8;base64,PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDE2LjAuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHdpZHRoPSI5N3B4IiBoZWlnaHQ9Ijk3cHgiIHZpZXdCb3g9IjAgMCA5NyA5NyIgZW5hYmxlLWJhY2tncm91bmQ9Im5ldyAwIDAgOTcgOTciIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8Zz4KCTxwYXRoIGZpbGw9IiNGMDUxMzMiIGQ9Ik05Mi43MSw0NC40MDhMNTIuNTkxLDQuMjkxYy0yLjMxLTIuMzExLTYuMDU3LTIuMzExLTguMzY5LDBsLTguMzMsOC4zMzJMNDYuNDU5LDIzLjE5CgkJYzIuNDU2LTAuODMsNS4yNzItMC4yNzMsNy4yMjksMS42ODVjMS45NjksMS45NywyLjUyMSw0LjgxLDEuNjcsNy4yNzVsMTAuMTg2LDEwLjE4NWMyLjQ2NS0wLjg1LDUuMzA3LTAuMyw3LjI3NSwxLjY3MQoJCWMyLjc1LDIuNzUsMi43NSw3LjIwNiwwLDkuOTU4Yy0yLjc1MiwyLjc1MS03LjIwOCwyLjc1MS05Ljk2MSwwYy0yLjA2OC0yLjA3LTIuNTgtNS4xMS0xLjUzMS03LjY1OGwtOS41LTkuNDk5djI0Ljk5NwoJCWMwLjY3LDAuMzMyLDEuMzAzLDAuNzc0LDEuODYxLDEuMzMyYzIuNzUsMi43NSwyLjc1LDcuMjA2LDAsOS45NTljLTIuNzUsMi43NDktNy4yMDksMi43NDktOS45NTcsMGMtMi43NS0yLjc1NC0yLjc1LTcuMjEsMC05Ljk1OQoJCWMwLjY4LTAuNjc5LDEuNDY3LTEuMTkzLDIuMzA3LTEuNTM3VjM2LjM2OWMtMC44NC0wLjM0NC0xLjYyNS0wLjg1My0yLjMwNy0xLjUzN2MtMi4wODMtMi4wODItMi41ODQtNS4xNC0xLjUxNi03LjY5OAoJCUwzMS43OTgsMTYuNzE1TDQuMjg4LDQ0LjIyMmMtMi4zMTEsMi4zMTMtMi4zMTEsNi4wNiwwLDguMzcxbDQwLjEyMSw0MC4xMThjMi4zMSwyLjMxMSw2LjA1NiwyLjMxMSw4LjM2OSwwTDkyLjcxLDUyLjc3OQoJCUM5NS4wMjEsNTAuNDY4LDk1LjAyMSw0Ni43MTksOTIuNzEsNDQuNDA4eiIvPgo8L2c+Cjwvc3ZnPgo="
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=git-collector&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "git-collector"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/git-collector:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "git-collector"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gitlab&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gitlab"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gitlab"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gitlab"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gitlab/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gitlab&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gitlab"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "gitlab/gitlab-ce"
              imagePullPolicy: "IfNotPresent"
              name: "gitlab"
              ports:
              - containerPort: 22
                name: "ssh"
              - containerPort: 80
                name: "http"
              - containerPort: 443
                name: "https"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "gogs"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gogs"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              configmap.fabric8.io/update-on-change: "gogs"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /app/gogs/data\"],\"volumeMounts\":[{\"mountPath\":\"/app/gogs/data\"\
                ,\"name\":\"gogs-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gogs"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "GOGS_SERVER__ROOT_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "gogs-server--root-url"
                    name: "gogs"
              - name: "ADMIN_USER_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-email"
                    name: "gogs"
              - name: "ADMIN_USER_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-password"
                    name: "gogs"
              - name: "ADMIN_USER_CREATE"
                value: "true"
              - name: "GOGS_WEBHOOK__TASK_INTERVAL"
                value: "true"
              - name: "GOGS_WEBHOOK__SKIP_TLS_VERIFY"
                value: "true"
              - name: "ADMIN_USER_NAME"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-name"
                    name: "gogs"
              - name: "KUBERNETES_ADMIN_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "kubernetes-admin-user"
                    name: "gogs"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/gogs:v0.9.97"
              imagePullPolicy: "IfNotPresent"
              name: "gogs"
              ports:
              - containerPort: 2222
                name: "ssh"
              - containerPort: 3000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/app/gogs/data"
                name: "gogs-data"
            imagePullSecrets: []
            serviceAccountName: "gogs"
            volumes:
            - name: "gogs-data"
              persistentVolumeClaim:
                claimName: "gogs-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "gogs"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "gogs"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "gogs"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "gogs"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              configmap.fabric8.io/update-on-change: "gogs"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /app/gogs/data\"],\"volumeMounts\":[{\"mountPath\":\"/app/gogs/data\"\
                ,\"name\":\"gogs-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "gogs"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "GOGS_SERVER__ROOT_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "gogs-server--root-url"
                    name: "gogs"
              - name: "ADMIN_USER_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-email"
                    name: "gogs"
              - name: "ADMIN_USER_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-password"
                    name: "gogs"
              - name: "ADMIN_USER_CREATE"
                value: "true"
              - name: "GOGS_WEBHOOK__TASK_INTERVAL"
                value: "true"
              - name: "GOGS_WEBHOOK__SKIP_TLS_VERIFY"
                value: "true"
              - name: "ADMIN_USER_NAME"
                valueFrom:
                  configMapKeyRef:
                    key: "admin-user-name"
                    name: "gogs"
              - name: "KUBERNETES_ADMIN_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "kubernetes-admin-user"
                    name: "gogs"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/gogs:v0.9.97"
              imagePullPolicy: "IfNotPresent"
              name: "gogs"
              ports:
              - containerPort: 2222
                name: "ssh"
              - containerPort: 3000
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/app/gogs/data"
                name: "gogs-data"
            imagePullSecrets: []
            serviceAccountName: "gogs"
            volumes:
            - name: "gogs-data"
              persistentVolumeClaim:
                claimName: "gogs-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "grafana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/grafana\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/grafana\"\
                ,\"name\":\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "grafana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROMETHEUS_ADDRESS"
                value: "http://prometheus"
              image: "fabric8/grafana:2.6.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              name: "grafana"
              ports:
              - containerPort: 3000
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              volumeMounts:
              - mountPath: "/var/lib/grafana"
                name: "data-volume"
            imagePullSecrets: []
            volumes:
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "grafana-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "grafana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/grafana\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/grafana\"\
                ,\"name\":\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "grafana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROMETHEUS_ADDRESS"
                value: "http://prometheus"
              image: "fabric8/grafana:2.6.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              name: "grafana"
              ports:
              - containerPort: 3000
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              volumeMounts:
              - mountPath: "/var/lib/grafana"
                name: "data-volume"
            imagePullSecrets: []
            volumes:
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "grafana-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "grafana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/grafana\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/grafana\"\
                ,\"name\":\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "grafana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROMETHEUS_ADDRESS"
                value: "http://prometheus"
              image: "fabric8/grafana:2.6.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              name: "grafana"
              ports:
              - containerPort: 3000
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              volumeMounts:
              - mountPath: "/var/lib/grafana"
                name: "data-volume"
            imagePullSecrets: []
            volumes:
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "grafana-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-irc&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-irc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-irc"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-irc"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-irc/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-irc&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-irc"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_IRC_USESSL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-usessl"
                    name: "hubot-irc"
              - name: "HUBOT_GRAFANA_API_KEY"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-api-key"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_NICK"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-nick"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_DEBUG"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-debug"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_ROOMS"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-rooms"
                    name: "hubot-irc"
              - name: "HUBOT_GRAFANA_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-host"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_UNFLOOD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-unflood"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_SERVER"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-server"
                    name: "hubot-irc"
              - name: "HUBOT_JENKINS_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-url"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_NICKSERV_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-nickserv-password"
                    name: "hubot-irc"
              - name: "HUBOT_IRC_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-irc-password"
                    name: "hubot-irc"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/hubot-irc:2.2.311"
              name: "hubot-irc"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-letschat&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-letschat"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-letschat"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-letschat/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-letschat&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-letschat"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "LETSCHAT_HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-hubot-username"
                    name: "hubot-letschat"
              - name: "LETSCHAT_HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-hubot-password"
                    name: "hubot-letschat"
              - name: "HUBOT_JENKINS_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-url"
                    name: "hubot-letschat"
              - name: "HUBOT_JENKINS_AUTH"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-auth"
                    name: "hubot-letschat"
              - name: "HUBOT_LCB_ROOMS"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-default-rooms"
                    name: "hubot-letschat"
              - name: "HUBOT_GRAFANA_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-host"
                    name: "hubot-letschat"
              - name: "HUBOT_GRAFANA_API_KEY"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-api-key"
                    name: "hubot-letschat"
              image: "fabric8/hubot-letschat:v1.0.0"
              name: "hubot-letschat"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-notifier"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-notifier"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_KUBERNETES_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "hubot-notifier"
              - name: "HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "hubot-notifier"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              image: "fabric8/hubot-notifier:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "hubot-notifier"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-notifier"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-notifier"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_KUBERNETES_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "hubot-notifier"
              - name: "HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "hubot-notifier"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              image: "fabric8/hubot-notifier:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "hubot-notifier"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "hubot-notifier"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-notifier"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "hubot-notifier"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-notifier/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-notifier&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "hubot-notifier"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_KUBERNETES_ROOM"
                value: "#fabric8_${namespace}"
              - name: "HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "hubot-notifier"
              - name: "HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "hubot-notifier"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "HUBOT_BUILD_ROOM"
                value: "#fabric8_${namespace}"
              image: "fabric8/hubot-notifier:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "hubot-notifier"
              ports:
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "fabric8"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-slack&var-version=2.2.311"
        finalizers: []
        labels:
          name: "hubot-slack"
          provider: "fabric8"
          project: "hubot-slack"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "hubot-slack"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            name: "hubot-slack"
            project: "hubot-slack"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/hubot-slack/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=hubot-slack&var-version=2.2.311"
            finalizers: []
            labels:
              name: "hubot-slack"
              provider: "fabric8"
              project: "hubot-slack"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "hubot-slack"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "HUBOT_GRAFANA_API_KEY"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-api-key"
                    name: "hubot-slack"
              - name: "HUBOT_SLACK_TOKEN"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-slack-token"
                    name: "hubot-slack"
              - name: "HUBOT_GRAFANA_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-grafana-host"
                    name: "hubot-slack"
              - name: "HUBOT_JENKINS_URL"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-jenkins-url"
                    name: "hubot-slack"
              image: "fabric8/hubot-slack:2.2.311"
              name: "hubot-slack"
              ports:
              - containerPort: 8080
                name: "http"
                protocol: "TCP"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: "nginx-config"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/ingress-nginx/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=ingress-nginx&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "ingress-nginx"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "ingress-nginx"
        namespace: "fabric8-system"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "ingress-nginx"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/ingress-nginx/src/main/fabric8/icon.png"
              configmap.fabric8.io/update-on-change: "nginx-config"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=ingress-nginx&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "ingress-nginx"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-v=3"
              - "-nginx-configmaps=fabric8-system/nginx-config"
              command: []
              env: []
              image: "nginxdemos/nginx-ingress:0.3.1"
              name: "nginx-ingress"
              ports:
              - containerPort: 80
                hostPort: 80
                name: "http"
                protocol: "TCP"
              - containerPort: 443
                hostPort: 443
                name: "https"
                protocol: "TCP"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector:
              fabric8.io/externalIP: "true"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "jenkins"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/secret-ssh-key: "jenkins-git-ssh,jenkins-master-ssh"
              fabric8.io/secret-ssh-config: "jenkins-ssh-config"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
              fabric8.io/secret-gpg-key: "jenkins-release-gpg"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
              fabric8.io/secret-maven-settings: "jenkins-maven-settings"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/secret-hub-api-token: "jenkins-hub-api-token"
              fabric8.io/secret-docker-cfg: "jenkins-docker-cfg"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/jenkins_home/workspace\",\"/var/jenkins_home/jobs\"],\"volumeMounts\"\
                :[{\"mountPath\":\"/var/jenkins_home/jobs\",\"name\":\"jenkins-jobs\"\
                },{\"mountPath\":\"/var/jenkins_home/workspace\",\"name\":\"jenkins-workspace\"\
                }]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "jenkins"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROJECT_VERSION"
                valueFrom:
                  configMapKeyRef:
                    key: "project-version"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_PROTOCOL"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-protocol"
                    name: "jenkins"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "jenkins"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "jenkins"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-host"
                    name: "jenkins"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default"
              image: "fabric8/jenkins-docker:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "jenkins"
              ports:
              - containerPort: 50000
                name: "slave"
              - containerPort: 8080
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 20
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/jenkins_home/jobs"
                name: "jenkins-jobs"
                readOnly: false
              - mountPath: "/var/jenkins_home/workspace"
                name: "jenkins-workspace"
                readOnly: false
            imagePullSecrets: []
            serviceAccountName: "jenkins"
            volumes:
            - name: "jenkins-jobs"
              persistentVolumeClaim:
                claimName: "jenkins-jobs"
            - name: "jenkins-workspace"
              persistentVolumeClaim:
                claimName: "jenkins-workspace"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "jenkins"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "jenkins"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "jenkins"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/secret-ssh-key: "jenkins-git-ssh,jenkins-master-ssh"
              fabric8.io/secret-ssh-config: "jenkins-ssh-config"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311"
              fabric8.io/secret-gpg-key: "jenkins-release-gpg"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg"
              fabric8.io/secret-maven-settings: "jenkins-maven-settings"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/secret-hub-api-token: "jenkins-hub-api-token"
              fabric8.io/secret-docker-cfg: "jenkins-docker-cfg"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/jenkins_home/workspace\",\"/var/jenkins_home/jobs\"],\"volumeMounts\"\
                :[{\"mountPath\":\"/var/jenkins_home/jobs\",\"name\":\"jenkins-jobs\"\
                },{\"mountPath\":\"/var/jenkins_home/workspace\",\"name\":\"jenkins-workspace\"\
                }]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "jenkins"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROJECT_VERSION"
                valueFrom:
                  configMapKeyRef:
                    key: "project-version"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_PROTOCOL"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-protocol"
                    name: "jenkins"
              - name: "JENKINS_GOGS_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-password"
                    name: "jenkins"
              - name: "JENKINS_GOGS_USER"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-user"
                    name: "jenkins"
              - name: "JENKINS_GOGS_EMAIL"
                valueFrom:
                  configMapKeyRef:
                    key: "jenkins-gogs-email"
                    name: "jenkins"
              - name: "PIPELINE_ELASTICSEARCH_HOST"
                valueFrom:
                  configMapKeyRef:
                    key: "pipeline-elasticsearch-host"
                    name: "jenkins"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              - name: "KUBERNETES_MASTER"
                value: "https://kubernetes.default"
              image: "fabric8/jenkins-docker:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "jenkins"
              ports:
              - containerPort: 50000
                name: "slave"
              - containerPort: 8080
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/blue/"
                  port: 8080
                initialDelaySeconds: 20
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/jenkins_home/jobs"
                name: "jenkins-jobs"
                readOnly: false
              - mountPath: "/var/jenkins_home/workspace"
                name: "jenkins-workspace"
                readOnly: false
            imagePullSecrets: []
            serviceAccountName: "jenkins"
            volumes:
            - name: "jenkins-jobs"
              persistentVolumeClaim:
                claimName: "jenkins-jobs"
            - name: "jenkins-workspace"
              persistentVolumeClaim:
                claimName: "jenkins-workspace"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kafka&var-version=2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kafka"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
        name: "kafka"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "kafka"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kafka&var-version=2.2.153"
              fabric8.io/build-id: "2"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.153"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kafka"
              version: "2.2.153"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kafka:2.2.153"
              imagePullPolicy: "IfNotPresent"
              name: "kafka"
              ports:
              - containerPort: 9092
                name: "kafka"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/kafka/logs"
                name: "logs"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "logs"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=keycloak&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "keycloak"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "keycloak"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "keycloak"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/keycloak/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=keycloak&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /opt/jboss/keycloak/standalone/data\"],\"volumeMounts\":[{\"mountPath\"\
                :\"/opt/jboss/keycloak/standalone/data\",\"name\":\"keycloak-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "keycloak"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KEYCLOAK_USER"
                value: "admin"
              - name: "KEYCLOAK_PASSWORD"
                value: "admin"
              image: "jboss/keycloak:2.2.0.Final"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/auth"
                  port: 8080
                initialDelaySeconds: 60
                timeoutSeconds: 10
              name: "keycloak"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/auth"
                  port: 8080
                initialDelaySeconds: 10
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/opt/jboss/keycloak/standalone/data"
                name: "keycloak-data"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "keycloak-data"
              persistentVolumeClaim:
                claimName: "keycloak-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "kibana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kibana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kibana4:v4.5.3"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 60
                tcpSocket:
                  port: 5601
              name: "kibana"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 5601
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              image: "fabric8/kibana-config:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "kibana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kibana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kibana4:v4.5.3"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 60
                tcpSocket:
                  port: 5601
              name: "kibana"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 5601
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              image: "fabric8/kibana-config:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "kibana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kibana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kibana4:v4.5.3"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 60
                tcpSocket:
                  port: 5601
              name: "kibana"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 5601
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              image: "fabric8/kibana-config:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kiwiirc&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kiwiirc"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kiwiirc"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "kiwiirc"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kiwiirc/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kiwiirc&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kiwiirc"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/fabric8-kiwiirc:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "kiwiirc"
              ports:
              - containerPort: 7778
                name: "irc"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=letschat&var-version=2.2.311"
        finalizers: []
        labels:
          name: "letschat"
          provider: "fabric8"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            name: "letschat"
            project: "letschat"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=letschat&var-version=2.2.311"
            finalizers: []
            labels:
              name: "letschat"
              provider: "fabric8"
              project: "letschat"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "letschat"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "mongo"
              name: "letschat-mongodb"
              ports:
              - containerPort: 27017
                protocol: "TCP"
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "LETSCHAT_CREATE_HUBOT_USER"
                value: "true"
              - name: "LETSCHAT_HUBOT_TOKEN"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-token"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_EMAIL"
                value: "fabric8-admin@googlegroups.com"
              - name: "LETSCHAT_HUBOT_FIRST_NAME"
                value: "fabric8"
              - name: "LETSCHAT_HUBOT_LAST_NAME"
                value: "rocks"
              - name: "LETSCHAT_HUBOT_DISPLAY_NAME"
                value: "fabric8"
              - name: "LETSCHAT_DEFAULT_ROOMS"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-default-rooms"
                    name: "letschat"
              - name: "LCB_NOROBOTS"
                value: "false"
              - name: "LCB_FILES_ENABLE"
                value: "true"
              - name: "LCB_DATABASE_URI"
                value: "mongodb://127.0.0.1:27017/letschat"
              image: "fabric8/lets-chat:2.2.311"
              name: "letschat"
              ports:
              - containerPort: 5000
                name: "commplex-main"
                protocol: "TCP"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=letschat&var-version=2.2.311"
        finalizers: []
        labels:
          name: "letschat"
          provider: "fabric8"
          project: "letschat"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "letschat"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            name: "letschat"
            project: "letschat"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/letschat/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=letschat&var-version=2.2.311"
            finalizers: []
            labels:
              name: "letschat"
              provider: "fabric8"
              project: "letschat"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "letschat"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "mongo"
              name: "letschat-mongodb"
              ports:
              - containerPort: 27017
                protocol: "TCP"
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "LETSCHAT_CREATE_HUBOT_USER"
                value: "true"
              - name: "LETSCHAT_HUBOT_TOKEN"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-token"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_PASSWORD"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-password"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_USERNAME"
                valueFrom:
                  configMapKeyRef:
                    key: "hubot-username"
                    name: "letschat"
              - name: "LETSCHAT_HUBOT_EMAIL"
                value: "fabric8-admin@googlegroups.com"
              - name: "LETSCHAT_HUBOT_FIRST_NAME"
                value: "fabric8"
              - name: "LETSCHAT_HUBOT_LAST_NAME"
                value: "rocks"
              - name: "LETSCHAT_HUBOT_DISPLAY_NAME"
                value: "fabric8"
              - name: "LETSCHAT_DEFAULT_ROOMS"
                valueFrom:
                  configMapKeyRef:
                    key: "letschat-default-rooms"
                    name: "letschat"
              - name: "LCB_NOROBOTS"
                value: "false"
              - name: "LCB_FILES_ENABLE"
                value: "true"
              - name: "LCB_DATABASE_URI"
                value: "mongodb://127.0.0.1:27017/letschat"
              image: "fabric8/lets-chat:2.2.311"
              name: "letschat"
              ports:
              - containerPort: 5000
                name: "commplex-main"
                protocol: "TCP"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=manageiq&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "manageiq"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "manageiq"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "manageiq"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=manageiq&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "manageiq"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "manageiq/manageiq:latest"
              imagePullPolicy: "IfNotPresent"
              name: "manageiq"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 443
                  scheme: "HTTPS"
                initialDelaySeconds: 60
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: true
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/java.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=maven-shell&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "maven-shell"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "maven-shell"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "maven-shell"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/java.svg"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=maven-shell&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "maven-shell"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/maven-builder:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "maven-shell"
              ports: []
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/run/docker.sock"
                name: "data"
                readOnly: false
              - mountPath: "/root/.m2"
                name: "jenkins-maven-settings"
                readOnly: false
              - mountPath: "/root/workspaces"
                name: "workspace"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - hostPath:
                path: "/home/maven-shell/workspaces"
              name: "workspace"
            - name: "jenkins-maven-settings"
              secret:
                items: []
                secretName: "jenkins-maven-settings"
            - hostPath:
                path: "/var/run/docker.sock"
              name: "data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-broker"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /data/message-broker/\"],\"volumeMounts\":[{\"mountPath\":\"/data/message-broker/\"\
                ,\"name\":\"message-broker\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-broker"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-broker:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-broker"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/data/message-broker/"
                name: "message-broker"
            imagePullSecrets: []
            volumes:
            - name: "message-broker"
              persistentVolumeClaim:
                claimName: "message-broker"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-broker"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /data/message-broker/\"],\"volumeMounts\":[{\"mountPath\":\"/data/message-broker/\"\
                ,\"name\":\"message-broker\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-broker"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-broker:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-broker"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/data/message-broker/"
                name: "message-broker"
            imagePullSecrets: []
            volumes:
            - name: "message-broker"
              persistentVolumeClaim:
                claimName: "message-broker"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "message-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-gateway"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-gateway"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-gateway"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "message-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-gateway"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-gateway"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-gateway"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "nexus"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /sonatype-work/storage\"],\"volumeMounts\":[{\"mountPath\":\"/sonatype-work/storage\"\
                ,\"name\":\"nexus-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "nexus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/nexus:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 180
                timeoutSeconds: 10
              name: "nexus"
              ports:
              - containerPort: 8081
                name: "http"
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 60
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/sonatype-work/storage"
                name: "nexus-storage"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "nexus-storage"
              persistentVolumeClaim:
                claimName: "nexus-storage"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "nexus"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /sonatype-work/storage\"],\"volumeMounts\":[{\"mountPath\":\"/sonatype-work/storage\"\
                ,\"name\":\"nexus-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "nexus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/nexus:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 180
                timeoutSeconds: 10
              name: "nexus"
              ports:
              - containerPort: 8081
                name: "http"
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 60
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/sonatype-work/storage"
                name: "nexus-storage"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - name: "nexus-storage"
              persistentVolumeClaim:
                claimName: "nexus-storage"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=orion&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "orion"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "orion"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "orion"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=orion&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "orion"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/eclipse-orion:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "orion"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /prometheus\"],\"volumeMounts\":[{\"mountPath\":\"/prometheus\",\"name\"\
                :\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/prometheus:v1.3.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "prometheus"
              ports:
              - containerPort: 9090
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
              - mountPath: "/prometheus"
                name: "data-volume"
                subPath: "prometheus-db"
            - args:
              - "-volume-dir"
              - "/etc/prometheus"
              - "-webhook-url"
              - "http://localhost:9090/-/reload"
              command: []
              env: []
              image: "jimmidyson/configmap-reload:v0.1"
              name: "configmap-reload"
              ports: []
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
            imagePullSecrets: []
            serviceAccountName: "metrics"
            volumes:
            - configMap:
                items: []
                name: "prometheus"
              name: "config-volume"
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "prometheus-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /prometheus\"],\"volumeMounts\":[{\"mountPath\":\"/prometheus\",\"name\"\
                :\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/prometheus:v1.3.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "prometheus"
              ports:
              - containerPort: 9090
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
              - mountPath: "/prometheus"
                name: "data-volume"
                subPath: "prometheus-db"
            - args:
              - "-volume-dir"
              - "/etc/prometheus"
              - "-webhook-url"
              - "http://localhost:9090/-/reload"
              command: []
              env: []
              image: "jimmidyson/configmap-reload:v0.1"
              name: "configmap-reload"
              ports: []
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
            imagePullSecrets: []
            serviceAccountName: "metrics"
            volumes:
            - configMap:
                items: []
                name: "prometheus"
              name: "config-volume"
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "prometheus-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /prometheus\"],\"volumeMounts\":[{\"mountPath\":\"/prometheus\",\"name\"\
                :\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/prometheus:v1.3.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "prometheus"
              ports:
              - containerPort: 9090
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
              - mountPath: "/prometheus"
                name: "data-volume"
                subPath: "prometheus-db"
            - args:
              - "-volume-dir"
              - "/etc/prometheus"
              - "-webhook-url"
              - "http://localhost:9090/-/reload"
              command: []
              env: []
              image: "jimmidyson/configmap-reload:v0.1"
              name: "configmap-reload"
              ports: []
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
            imagePullSecrets: []
            serviceAccountName: "metrics"
            volumes:
            - configMap:
                items: []
                name: "prometheus"
              name: "config-volume"
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "prometheus-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-blackbox-expo"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus-blackbox-exporter"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-blackbox-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/blackbox-exporter:master"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "blackbox-exporter"
              ports:
              - containerPort: 9115
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/blackbox_exporter"
                name: "config-volume"
            imagePullSecrets: []
            volumes:
            - configMap:
                items: []
                name: "blackbox-exporter"
              name: "config-volume"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-blackbox-expo"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus-blackbox-exporter"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-blackbox-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/blackbox-exporter:master"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "blackbox-exporter"
              ports:
              - containerPort: 9115
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/blackbox_exporter"
                name: "config-volume"
            imagePullSecrets: []
            volumes:
            - configMap:
                items: []
                name: "blackbox-exporter"
              name: "config-volume"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-blackbox-expo"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus-blackbox-exporter"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-blackbox-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/blackbox-exporter:master"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "blackbox-exporter"
              ports:
              - containerPort: 9115
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/blackbox_exporter"
                name: "config-volume"
            imagePullSecrets: []
            volumes:
            - configMap:
                items: []
                name: "blackbox-exporter"
              name: "config-volume"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "taiga"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/postgresql/data/\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/postgresql/data/\"\
                ,\"name\":\"taiga-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "taiga"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "taiga"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "POSTGRES_PASSWORD"
                value: "password"
              - name: "POSTGRES_USER"
                value: "taiga"
              image: "postgres"
              name: "taiga-postgres"
              ports: []
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data/"
                name: "taiga-data"
            - args: []
              command: []
              env:
              - name: "SECRET_KEY"
                value: "xyz"
              - name: "POSTGRES_PORT_5432_TCP_ADDR"
                value: "127.0.0.1"
              - name: "POSTGRES_ENV_POSTGRES_USER"
                value: "taiga"
              - name: "POSTGRES_ENV_POSTGRES_PASSWORD"
                value: "password"
              image: "fabric8/taiga-back:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-backend"
              ports:
              - containerPort: 8000
                name: "irdmi"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            - args: []
              command: []
              env: []
              image: "fabric8/taiga-front:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-frontend"
              ports:
              - containerPort: 80
                name: "http"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            imagePullSecrets: []
            volumes:
            - name: "taiga-data"
              persistentVolumeClaim:
                claimName: "taiga-data"
            - name: "taiga-static"
            - name: "taiga-media"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "taiga"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/postgresql/data/\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/postgresql/data/\"\
                ,\"name\":\"taiga-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "taiga"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "taiga"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "POSTGRES_PASSWORD"
                value: "password"
              - name: "POSTGRES_USER"
                value: "taiga"
              image: "postgres"
              name: "taiga-postgres"
              ports: []
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data/"
                name: "taiga-data"
            - args: []
              command: []
              env:
              - name: "SECRET_KEY"
                value: "xyz"
              - name: "POSTGRES_PORT_5432_TCP_ADDR"
                value: "127.0.0.1"
              - name: "POSTGRES_ENV_POSTGRES_USER"
                value: "taiga"
              - name: "POSTGRES_ENV_POSTGRES_PASSWORD"
                value: "password"
              image: "fabric8/taiga-back:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-backend"
              ports:
              - containerPort: 8000
                name: "irdmi"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            - args: []
              command: []
              env: []
              image: "fabric8/taiga-front:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-frontend"
              ports:
              - containerPort: 80
                name: "http"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            imagePullSecrets: []
            volumes:
            - name: "taiga-data"
              persistentVolumeClaim:
                claimName: "taiga-data"
            - name: "taiga-static"
            - name: "taiga-media"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine-server"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "turbine-server"
            provider: "fabric8"
            group: "io.fabric8.kubeflix"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/spring-boot.svg"
              fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
              fabric8.io/git-branch: "release-v1.0.28"
            finalizers: []
            labels:
              project: "turbine-server"
              provider: "fabric8"
              version: "1.0.28"
              group: "io.fabric8.kubeflix"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/turbine-server:1.0.28"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 180
              name: "turbine-server"
              ports:
              - containerPort: 8080
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 10
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "turbine"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine-server"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "turbine-server"
            provider: "fabric8"
            group: "io.fabric8.kubeflix"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/spring-boot.svg"
              fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
              fabric8.io/git-branch: "release-v1.0.28"
            finalizers: []
            labels:
              project: "turbine-server"
              provider: "fabric8"
              version: "1.0.28"
              group: "io.fabric8.kubeflix"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/turbine-server:1.0.28"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 180
              name: "turbine-server"
              ports:
              - containerPort: 8080
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 10
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            serviceAccountName: "turbine"
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin&var-version=0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zipkin"
            group: "io.fabric8.zipkin"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin&var-version=0.1.8"
              fabric8.io/build-id: "3"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
              fabric8.io/git-branch: "release-v0.1.8"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zipkin"
              version: "0.1.8"
              group: "io.fabric8.zipkin"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "STORAGE_PORT_9042_TCP_ADDR"
                value: "zipkin-cassandra:9411"
              - name: "STORAGE_PORT_3306_TCP_ADDR"
                value: "zipkin-mysql:3306"
              - name: "STORAGE_TYPE"
                value: "mysql"
              - name: "TRANSPORT_TYPE"
                value: "http"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "openzipkin/zipkin:1.13.0"
              name: "zipkin"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/api/v1/services"
                  port: 9411
                initialDelaySeconds: 5
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin-mysql&var-version=0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zipkin-mysql"
            group: "io.fabric8.zipkin"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin-mysql&var-version=0.1.8"
              fabric8.io/build-id: "3"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
              fabric8.io/git-branch: "release-v0.1.8"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"name\"\
                :\"init\",\"command\":[\"chmod\",\"777\",\"/var/lib/mysql\"],\"volumeMounts\"\
                :[{\"mountPath\":\"/var/lib/mysql\",\"name\":\"mysql-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zipkin-mysql"
              version: "0.1.8"
              group: "io.fabric8.zipkin"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "MYSQL_USER"
                value: "zipkin"
              - name: "MYSQL_PASSWORD"
                value: "zipkin"
              - name: "MYSQL_ROOT_PASSWORD"
                value: "zipkin"
              - name: "MYSQL_DATABASE"
                value: "zipkin"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "mysql:5.7"
              name: "zipkin-mysql"
              ports: []
              readinessProbe:
                initialDelaySeconds: 5
                tcpSocket:
                  port: 3306
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/lib/mysql"
                name: "mysql-data"
              - mountPath: "/docker-entrypoint-initdb.d/"
                name: "mysql-init-script"
              - mountPath: "/etc/mysql/conf.d/"
                name: "mysql-confd"
            imagePullSecrets: []
            volumes:
            - name: "mysql-data"
              persistentVolumeClaim:
                claimName: "mysql-data"
            - configMap:
                items: []
                name: "zipkin-mysql-initdb"
              name: "mysql-init-script"
            - configMap:
                items: []
                name: "zipkin-mysql-cnf"
              name: "mysql-confd"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          serverId: "1"
        name: "zookeeper"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zookeeper"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zookeeper"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ENSEMBLE_SIZE"
                value: "1"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/zookeeper:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "zookeeper"
              ports:
              - containerPort: 2181
                name: "zkclient"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/zookeeper/data"
                name: "data"
                readOnly: false
              - mountPath: "/opt/zookeeper/log"
                name: "log"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "data"
            - emptyDir:
                medium: "Memory"
              name: "log"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
          serverId: "1"
        name: "zookeeper"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zookeeper"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.153"
              fabric8.io/build-id: "2"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.153"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zookeeper"
              version: "2.2.153"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ENSEMBLE_SIZE"
                value: "1"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/zookeeper:2.2.153"
              imagePullPolicy: "IfNotPresent"
              name: "zookeeper"
              ports:
              - containerPort: 2181
                name: "zkclient"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/zookeeper/data"
                name: "data"
                readOnly: false
              - mountPath: "/opt/zookeeper/log"
                name: "log"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "data"
            - emptyDir:
                medium: "Memory"
              name: "log"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          serverId: "1"
        name: "zookeeper"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zookeeper"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zookeeper"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ENSEMBLE_SIZE"
                value: "1"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/zookeeper:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "zookeeper"
              ports:
              - containerPort: 2181
                name: "zkclient"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/zookeeper/data"
                name: "data"
                readOnly: false
              - mountPath: "/opt/zookeeper/log"
                name: "log"
                readOnly: false
            imagePullSecrets: []
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "data"
            - emptyDir:
                medium: "Memory"
              name: "log"
    parameters:
    - description: "Default rooms to create and for hubot to join"
      name: "LETSCHAT_DEFAULT_ROOMS"
      value: "fabric8_default"
    - description: "The username for Hubot to login to the chat service"
      name: "HUBOT_USERNAME"
      value: "fabric8"
    - description: "The password for Hubot to login to the chat service"
      name: "HUBOT_PASSWORD"
      value: "RedHat$1"
---
# Source: fabric8-platform/templates/catalog-logging-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: logging
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-logging
data:
  catalog-logging.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "logging"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "logging"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "discovery"
          port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 5601
        selector:
          project: "kibana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "es-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "10Gi"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fluentd"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_HOST"
                value: "elasticsearch"
              - name: "ELASTICSEARCH_PORT"
                value: "9200"
              image: "fabric8/fluentd-kubernetes:v1.19"
              name: "fluentd"
              ports:
              - containerPort: 24231
                name: "scrape"
              resources:
                limits:
                  cpu: "100m"
                requests: {}
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/log"
                name: "varlog"
              - mountPath: "/var/lib/docker/containers"
                name: "defaultdocker"
                readOnly: true
              - mountPath: "/mnt/ephemeral/docker/containers"
                name: "awsdocker"
                readOnly: true
              - mountPath: "/mnt/sda1/var/lib/docker/containers"
                name: "minikubedocker"
                readOnly: true
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fluentd"
            volumes:
            - hostPath:
                path: "/var/log"
              name: "varlog"
            - hostPath:
                path: "/var/lib/docker/containers"
              name: "defaultdocker"
            - hostPath:
                path: "/mnt/ephemeral/docker/containers"
              name: "awsdocker"
            - hostPath:
                path: "/mnt/sda1/var/lib/docker/containers"
              name: "minikubedocker"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "elasticsearch"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /usr/share/elasticsearch/data\"],\"volumeMounts\":[{\"mountPath\":\"/usr/share/elasticsearch/data\"\
                ,\"name\":\"data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE"
                value: "elasticsearch-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-k8s:2.3.4"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_template/logstash"
                  port: 9200
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "data"
            - args: []
              command: []
              env: []
              image: "fabric8/elasticsearch-logstash-template:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "data"
              persistentVolumeClaim:
                claimName: "es-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "kibana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kibana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kibana4:v4.5.3"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 60
                tcpSocket:
                  port: 5601
              name: "kibana"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 5601
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              image: "fabric8/kibana-config:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-manageiq-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: manageiq
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-manageiq
data:
  catalog-manageiq.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "manageiq"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "manageiq"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "manageiq"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "manageiq"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 443
          protocol: "TCP"
          targetPort: 443
        selector:
          project: "manageiq"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=manageiq&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "manageiq"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "manageiq"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "manageiq"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/manageiq/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=manageiq&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "manageiq"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "manageiq/manageiq:latest"
              imagePullPolicy: "IfNotPresent"
              name: "manageiq"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 443
                  scheme: "HTTPS"
                initialDelaySeconds: 60
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: true
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-management-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: management
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-management
data:
  catalog-management.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "management"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "management"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "metrics"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9115"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9115
        selector:
          project: "prometheus-blackbox-exporter"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 9200
          protocol: "TCP"
          targetPort: 9200
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch-masters"
        ownerReferences: []
      spec:
        clusterIP: "None"
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "discovery"
          port: 9300
          protocol: "TCP"
          targetPort: 9300
        selector:
          project: "elasticsearch"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "grafana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 5601
        selector:
          project: "kibana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9090
        selector:
          project: "prometheus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "es-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "10Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      data:
        config.yml: "modules:\n  http_2xx:\n    prober: http\n    timeout: 5s\n    http:\n\
          \      valid_status_codes: []  # Defaults to 2xx\n      method: GET\n      no_follow_redirects:\
          \ false\n      fail_if_ssl: false\n      fail_if_not_ssl: false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      data:
        prometheus.yml: "global:\n  scrape_interval:     30s\n  evaluation_interval: 60s\n\
          \nrule_files:\n  - \"*.rules\"\n\n# A scrape configuration for running Prometheus\
          \ on a Kubernetes cluster.\n# This uses separate scrape configs for cluster\
          \ components (i.e. API server, node)\n# and services to allow each to use different\
          \ authentication configs.\n#\n# Kubernetes labels will be added as Prometheus\
          \ labels on metrics via the\n# `labelmap` relabeling action.\nscrape_configs:\n\
          \n# Scrape config for API servers.\n- job_name: 'kubernetes-apiservers'\n\n\
          \  # This TLS & bearer token file config is used to connect to the actual scrape\n\
          \  # endpoints for cluster components. This is separate to discovery auth\n\
          \  # configuration (`in_cluster` below) because discovery & scraping are two\n\
          \  # separate concerns in Prometheus.\n  tls_config:\n    # workaround for Prometheus\
          \ -> Kubernetes cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n\
          \    insecure_skip_verify: true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
          \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\
          \n# Scrape config for nodes.\n- job_name: 'kubernetes-nodes'\n\n  # This TLS\
          \ & bearer token file config is used to connect to the actual scrape\n  # endpoints\
          \ for cluster components. This is separate to discovery auth\n  # configuration\
          \ (`in_cluster` below) because discovery & scraping are two\n  # separate concerns\
          \ in Prometheus.\n  tls_config:\n    # workaround for Prometheus -> Kubernetes\
          \ cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n    insecure_skip_verify:\
          \ true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape\
          \ config for node exporter pods deployed as a daemonset.\n- job_name: 'kubernetes-node-exporters'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_name]\n    action: keep\n    regex: node-exporter-.+\n\
          \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - source_labels: [__meta_kubernetes_pod_node_name]\n\
          \    action: replace\n    target_label: instance\n\n# Scrape config for service\
          \ endpoints.\n#\n# The relabeling allows the actual service scrape endpoint\
          \ to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`:\
          \ Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`:\
          \ If the metrics endpoint is secured then you will need\n# to set this to `https`\
          \ & most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`:\
          \ If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`:\
          \ If the metrics are exposed on a different port to the\n# service then set\
          \ this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n\
          \  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\
          \    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
          \    action: replace\n    regex: (.+)\n    target_label: __metrics_path__\n\
          \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
          \    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\\
          d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
          \  - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ probing services via the Blackbox Exporter.\n#\n# The relabeling allows the\
          \ actual service scrape endpoint to be configured\n# via the following annotations:\n\
          #\n# * `prometheus.io/probe`: Only probe services that have a value of `true`\n\
          - job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n   \
          \ module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: service\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\n\
          \    action: keep\n    regex: true\n  - source_labels: []\n    target_label:\
          \ __address__\n    replacement: blackbox\n  - source_labels: [__address__]\n\
          \    regex: (.*)(:80)?\n    target_label: __param_target\n  - source_labels:\
          \ [__meta_kubernetes_service_name,__meta_kubernetes_service_namespace]\n   \
          \ target_label: __param_target\n    regex: ([^;]+);(.+)\n    replacement: $1.$2.svc\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  -\
          \ source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ pods\n#\n# The relabeling allows the actual pod scrape endpoint to be configured\
          \ via the\n# following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape\
          \ pods that have a value of `true`\n# * `prometheus.io/port`: Scrape the pod\
          \ on the indicated port instead of the default of `9102`.\n- job_name: 'kubernetes-pods'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
          \    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n   \
          \ action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -\
          \ source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)"
        pod.rules: "pod:memory_usage_bytes = sum(container_memory_usage_bytes{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_receive_bytes:1m = sum(rate(container_network_receive_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_transmit_bytes:1m = sum(rate(container_network_transmit_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:cpu_usage_seconds:1m = sum(rate(container_cpu_usage_seconds_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \nALERT ServiceDown\nIF probe_success{job=\"kubernetes-services\"} == 0\n  FOR\
          \ 10s\n  LABELS {\n    service = \"{{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\"\
          \n  }\n  ANNOTATIONS {\n    severity    =\"page\",\n    summary     =\"Service\
          \ {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} down\",\n   \
          \ description =\"Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\
          \ has been down for more than 10 seconds!\"\n  }"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fluentd/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "fluentd"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "fluentd"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations:
              prometheus.io/scrape: "true"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "fluentd"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_HOST"
                value: "elasticsearch"
              - name: "ELASTICSEARCH_PORT"
                value: "9200"
              image: "fabric8/fluentd-kubernetes:v1.19"
              name: "fluentd"
              ports:
              - containerPort: 24231
                name: "scrape"
              resources:
                limits:
                  cpu: "100m"
                requests: {}
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/log"
                name: "varlog"
              - mountPath: "/var/lib/docker/containers"
                name: "defaultdocker"
                readOnly: true
              - mountPath: "/mnt/ephemeral/docker/containers"
                name: "awsdocker"
                readOnly: true
              - mountPath: "/mnt/sda1/var/lib/docker/containers"
                name: "minikubedocker"
                readOnly: true
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "fluentd"
            volumes:
            - hostPath:
                path: "/var/log"
              name: "varlog"
            - hostPath:
                path: "/var/lib/docker/containers"
              name: "defaultdocker"
            - hostPath:
                path: "/mnt/ephemeral/docker/containers"
              name: "awsdocker"
            - hostPath:
                path: "/mnt/sda1/var/lib/docker/containers"
              name: "minikubedocker"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations: {}
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-node-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "node-exporter"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-collector.procfs"
              - "/host/proc"
              - "-collector.sysfs"
              - "/host/proc"
              - "-collector.filesystem.ignored-mount-points"
              - "^/(sys|proc|dev|host|etc)($|/)"
              command: []
              env: []
              image: "prom/node-exporter"
              name: "node-exporter"
              ports:
              - containerPort: 9100
                name: "scrape"
              volumeMounts:
              - mountPath: "/host/proc"
                name: "host-proc"
                readOnly: true
              - mountPath: "/host/sys"
                name: "host-sys"
                readOnly: true
              - mountPath: "/rootfs"
                name: "host-root"
                readOnly: true
            hostNetwork: true
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "node-exporter"
            volumes:
            - hostPath:
                path: "/proc"
              name: "host-proc"
            - hostPath:
                path: "/sys"
              name: "host-sys"
            - hostPath:
                path: "/"
              name: "host-root"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "elasticsearch"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "elasticsearch"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "elasticsearch"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/elasticsearch/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=elasticsearch&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /usr/share/elasticsearch/data\"],\"volumeMounts\":[{\"mountPath\":\"/usr/share/elasticsearch/data\"\
                ,\"name\":\"data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "elasticsearch"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "SERVICE"
                value: "elasticsearch-masters"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/elasticsearch-k8s:2.3.4"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 30
                tcpSocket:
                  port: 9300
              name: "elasticsearch"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/_template/logstash"
                  port: 9200
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/usr/share/elasticsearch/data"
                name: "data"
            - args: []
              command: []
              env: []
              image: "fabric8/elasticsearch-logstash-template:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "data"
              persistentVolumeClaim:
                claimName: "es-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "grafana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/grafana\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/grafana\"\
                ,\"name\":\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "grafana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROMETHEUS_ADDRESS"
                value: "http://prometheus"
              image: "fabric8/grafana:2.6.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              name: "grafana"
              ports:
              - containerPort: 3000
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              volumeMounts:
              - mountPath: "/var/lib/grafana"
                name: "data-volume"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "grafana-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kibana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "kibana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "kibana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/kibana/src/main/fabric8/icon.svg"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kibana&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kibana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kibana4:v4.5.3"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                initialDelaySeconds: 60
                tcpSocket:
                  port: 5601
              name: "kibana"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 5601
                initialDelaySeconds: 5
              securityContext:
                privileged: false
              volumeMounts: []
            - args: []
              command: []
              env:
              - name: "ELASTICSEARCH_URL"
                value: "http://elasticsearch:9200"
              image: "fabric8/kibana-config:2.2.311"
              name: "logstash-template"
              ports: []
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /prometheus\"],\"volumeMounts\":[{\"mountPath\":\"/prometheus\",\"name\"\
                :\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/prometheus:v1.3.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "prometheus"
              ports:
              - containerPort: 9090
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
              - mountPath: "/prometheus"
                name: "data-volume"
                subPath: "prometheus-db"
            - args:
              - "-volume-dir"
              - "/etc/prometheus"
              - "-webhook-url"
              - "http://localhost:9090/-/reload"
              command: []
              env: []
              image: "jimmidyson/configmap-reload:v0.1"
              name: "configmap-reload"
              ports: []
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "metrics"
            volumes:
            - configMap:
                items: []
                name: "prometheus"
              name: "config-volume"
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "prometheus-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-blackbox-expo"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus-blackbox-exporter"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-blackbox-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/blackbox-exporter:master"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "blackbox-exporter"
              ports:
              - containerPort: 9115
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/blackbox_exporter"
                name: "config-volume"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - configMap:
                items: []
                name: "blackbox-exporter"
              name: "config-volume"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-maven-shell-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: img/icons/java.svg
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: maven-shell
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-maven-shell
data:
  catalog-maven-shell.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "img/icons/java.svg"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "maven-shell"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "maven-shell"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/java.svg"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=maven-shell&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "maven-shell"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "maven-shell"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "maven-shell"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/java.svg"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=maven-shell&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "maven-shell"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/maven-builder:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "maven-shell"
              ports: []
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: true
              volumeMounts:
              - mountPath: "/var/run/docker.sock"
                name: "data"
                readOnly: false
              - mountPath: "/root/.m2"
                name: "jenkins-maven-settings"
                readOnly: false
              - mountPath: "/root/workspaces"
                name: "workspace"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - hostPath:
                path: "/home/maven-shell/workspaces"
              name: "workspace"
            - name: "jenkins-maven-settings"
              secret:
                items: []
                secretName: "jenkins-maven-settings"
            - hostPath:
                path: "/var/run/docker.sock"
              name: "data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-message-broker-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 0b90360981bed67ebde7b71cc6a96d34cca3dcc6
    fabric8.io/iconUrl: img/icons/activemq.svg
    fabric8.io/git-branch: release-v2.2.168
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: message-broker
    version: 2.2.168
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-message-broker
data:
  catalog-message-broker.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
        fabric8.io/iconUrl: "img/icons/activemq.svg"
        fabric8.io/git-branch: "release-v2.2.168"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "message-broker"
        version: "2.2.168"
        group: "io.fabric8.ipaas.apps"
      name: "message-broker"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "message-broker"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "message-broker"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-broker"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /data/message-broker/\"],\"volumeMounts\":[{\"mountPath\":\"/data/message-broker/\"\
                ,\"name\":\"message-broker\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-broker"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-broker:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-broker"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/data/message-broker/"
                name: "message-broker"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "message-broker"
              persistentVolumeClaim:
                claimName: "message-broker"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-message-gateway-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 0b90360981bed67ebde7b71cc6a96d34cca3dcc6
    fabric8.io/iconUrl: img/icons/activemq.svg
    fabric8.io/git-branch: release-v2.2.168
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: message-gateway
    version: 2.2.168
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-message-gateway
data:
  catalog-message-gateway.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
        fabric8.io/iconUrl: "img/icons/activemq.svg"
        fabric8.io/git-branch: "release-v2.2.168"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "message-gateway"
        version: "2.2.168"
        group: "io.fabric8.ipaas.apps"
      name: "message-gateway"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "activemq"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "message-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-gateway"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-gateway"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-gateway"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-messaging-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 0b90360981bed67ebde7b71cc6a96d34cca3dcc6
    fabric8.io/iconUrl: img/icons/activemq.svg
    fabric8.io/git-branch: release-v2.2.168
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: messaging
    version: 2.2.168
    expose: "true"
    serverId: "1"
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-messaging
data:
  catalog-messaging.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
        fabric8.io/iconUrl: "img/icons/activemq.svg"
        fabric8.io/git-branch: "release-v2.2.168"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "messaging"
        version: "2.2.168"
        expose: "true"
        serverId: "1"
        group: "io.fabric8.ipaas.apps"
      name: "messaging"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "activemq"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 61616
          protocol: "TCP"
          targetPort: 61616
        selector:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "zookeeper"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "client"
          port: 2181
          targetPort: 2181
        selector:
          project: "zookeeper"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "message-broker"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
        name: "message-broker"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-broker"
          version: "2.2.168"
        name: "message-broker"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-broker"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-broker&var-version=2.2.168"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /data/message-broker/\"],\"volumeMounts\":[{\"mountPath\":\"/data/message-broker/\"\
                ,\"name\":\"message-broker\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-broker"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-broker:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-broker"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/data/message-broker/"
                name: "message-broker"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "message-broker"
              persistentVolumeClaim:
                claimName: "message-broker"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/activemq.svg"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
          project: "message-gateway"
          version: "2.2.168"
        name: "message-gateway"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            group: "io.fabric8.ipaas.apps"
            project: "message-gateway"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/activemq.svg"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=message-gateway&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              group: "io.fabric8.ipaas.apps"
              project: "message-gateway"
              version: "2.2.168"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/message-gateway:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "message-gateway"
              ports:
              - containerPort: 61616
                name: "amq"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          serverId: "1"
        name: "zookeeper"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zookeeper"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zookeeper"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ENSEMBLE_SIZE"
                value: "1"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/zookeeper:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "zookeeper"
              ports:
              - containerPort: 2181
                name: "zkclient"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/zookeeper/data"
                name: "data"
                readOnly: false
              - mountPath: "/opt/zookeeper/log"
                name: "log"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "data"
            - emptyDir:
                medium: "Memory"
              name: "log"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-metrics-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: metrics
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-metrics
data:
  catalog-metrics.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "metrics"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "metrics"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "metrics"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9115"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9115
        selector:
          project: "prometheus-blackbox-exporter"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 3000
        selector:
          project: "grafana"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9090
        selector:
          project: "prometheus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      data:
        config.yml: "modules:\n  http_2xx:\n    prober: http\n    timeout: 5s\n    http:\n\
          \      valid_status_codes: []  # Defaults to 2xx\n      method: GET\n      no_follow_redirects:\
          \ false\n      fail_if_ssl: false\n      fail_if_not_ssl: false"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      data:
        prometheus.yml: "global:\n  scrape_interval:     30s\n  evaluation_interval: 60s\n\
          \nrule_files:\n  - \"*.rules\"\n\n# A scrape configuration for running Prometheus\
          \ on a Kubernetes cluster.\n# This uses separate scrape configs for cluster\
          \ components (i.e. API server, node)\n# and services to allow each to use different\
          \ authentication configs.\n#\n# Kubernetes labels will be added as Prometheus\
          \ labels on metrics via the\n# `labelmap` relabeling action.\nscrape_configs:\n\
          \n# Scrape config for API servers.\n- job_name: 'kubernetes-apiservers'\n\n\
          \  # This TLS & bearer token file config is used to connect to the actual scrape\n\
          \  # endpoints for cluster components. This is separate to discovery auth\n\
          \  # configuration (`in_cluster` below) because discovery & scraping are two\n\
          \  # separate concerns in Prometheus.\n  tls_config:\n    # workaround for Prometheus\
          \ -> Kubernetes cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n\
          \    insecure_skip_verify: true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
          \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\
          \n# Scrape config for nodes.\n- job_name: 'kubernetes-nodes'\n\n  # This TLS\
          \ & bearer token file config is used to connect to the actual scrape\n  # endpoints\
          \ for cluster components. This is separate to discovery auth\n  # configuration\
          \ (`in_cluster` below) because discovery & scraping are two\n  # separate concerns\
          \ in Prometheus.\n  tls_config:\n    # workaround for Prometheus -> Kubernetes\
          \ cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n    insecure_skip_verify:\
          \ true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape\
          \ config for node exporter pods deployed as a daemonset.\n- job_name: 'kubernetes-node-exporters'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_name]\n    action: keep\n    regex: node-exporter-.+\n\
          \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - source_labels: [__meta_kubernetes_pod_node_name]\n\
          \    action: replace\n    target_label: instance\n\n# Scrape config for service\
          \ endpoints.\n#\n# The relabeling allows the actual service scrape endpoint\
          \ to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`:\
          \ Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`:\
          \ If the metrics endpoint is secured then you will need\n# to set this to `https`\
          \ & most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`:\
          \ If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`:\
          \ If the metrics are exposed on a different port to the\n# service then set\
          \ this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n\
          \  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\
          \    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
          \    action: replace\n    regex: (.+)\n    target_label: __metrics_path__\n\
          \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
          \    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\\
          d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
          \  - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ probing services via the Blackbox Exporter.\n#\n# The relabeling allows the\
          \ actual service scrape endpoint to be configured\n# via the following annotations:\n\
          #\n# * `prometheus.io/probe`: Only probe services that have a value of `true`\n\
          - job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n   \
          \ module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: service\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\n\
          \    action: keep\n    regex: true\n  - source_labels: []\n    target_label:\
          \ __address__\n    replacement: blackbox\n  - source_labels: [__address__]\n\
          \    regex: (.*)(:80)?\n    target_label: __param_target\n  - source_labels:\
          \ [__meta_kubernetes_service_name,__meta_kubernetes_service_namespace]\n   \
          \ target_label: __param_target\n    regex: ([^;]+);(.+)\n    replacement: $1.$2.svc\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  -\
          \ source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ pods\n#\n# The relabeling allows the actual pod scrape endpoint to be configured\
          \ via the\n# following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape\
          \ pods that have a value of `true`\n# * `prometheus.io/port`: Scrape the pod\
          \ on the indicated port instead of the default of `9102`.\n- job_name: 'kubernetes-pods'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
          \    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n   \
          \ action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -\
          \ source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)"
        pod.rules: "pod:memory_usage_bytes = sum(container_memory_usage_bytes{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_receive_bytes:1m = sum(rate(container_network_receive_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_transmit_bytes:1m = sum(rate(container_network_transmit_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:cpu_usage_seconds:1m = sum(rate(container_cpu_usage_seconds_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \nALERT ServiceDown\nIF probe_success{job=\"kubernetes-services\"} == 0\n  FOR\
          \ 10s\n  LABELS {\n    service = \"{{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\"\
          \n  }\n  ANNOTATIONS {\n    severity    =\"page\",\n    summary     =\"Service\
          \ {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} down\",\n   \
          \ description =\"Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\
          \ has been down for more than 10 seconds!\"\n  }"
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations: {}
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-node-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "node-exporter"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-collector.procfs"
              - "/host/proc"
              - "-collector.sysfs"
              - "/host/proc"
              - "-collector.filesystem.ignored-mount-points"
              - "^/(sys|proc|dev|host|etc)($|/)"
              command: []
              env: []
              image: "prom/node-exporter"
              name: "node-exporter"
              ports:
              - containerPort: 9100
                name: "scrape"
              volumeMounts:
              - mountPath: "/host/proc"
                name: "host-proc"
                readOnly: true
              - mountPath: "/host/sys"
                name: "host-sys"
                readOnly: true
              - mountPath: "/rootfs"
                name: "host-root"
                readOnly: true
            hostNetwork: true
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "node-exporter"
            volumes:
            - hostPath:
                path: "/proc"
              name: "host-proc"
            - hostPath:
                path: "/sys"
              name: "host-sys"
            - hostPath:
                path: "/"
              name: "host-root"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "grafana"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "grafana"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "grafana"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/grafana/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=grafana&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/grafana\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/grafana\"\
                ,\"name\":\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "grafana"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "PROMETHEUS_ADDRESS"
                value: "http://prometheus"
              image: "fabric8/grafana:2.6.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              name: "grafana"
              ports:
              - containerPort: 3000
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 5
              volumeMounts:
              - mountPath: "/var/lib/grafana"
                name: "data-volume"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "grafana-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /prometheus\"],\"volumeMounts\":[{\"mountPath\":\"/prometheus\",\"name\"\
                :\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/prometheus:v1.3.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "prometheus"
              ports:
              - containerPort: 9090
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
              - mountPath: "/prometheus"
                name: "data-volume"
                subPath: "prometheus-db"
            - args:
              - "-volume-dir"
              - "/etc/prometheus"
              - "-webhook-url"
              - "http://localhost:9090/-/reload"
              command: []
              env: []
              image: "jimmidyson/configmap-reload:v0.1"
              name: "configmap-reload"
              ports: []
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "metrics"
            volumes:
            - configMap:
                items: []
                name: "prometheus"
              name: "config-volume"
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "prometheus-data"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-blackbox-expo"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus-blackbox-exporter"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-blackbox-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/blackbox-exporter:master"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "blackbox-exporter"
              ports:
              - containerPort: 9115
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/blackbox_exporter"
                name: "config-volume"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - configMap:
                items: []
                name: "blackbox-exporter"
              name: "config-volume"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-nexus-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: nexus
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-nexus
data:
  catalog-nexus.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "nexus"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "nexus"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "nexus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8081
        selector:
          project: "nexus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus-storage"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "nexus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "nexus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "nexus"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /sonatype-work/storage\"],\"volumeMounts\":[{\"mountPath\":\"/sonatype-work/storage\"\
                ,\"name\":\"nexus-storage\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "nexus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/nexus:2.2.311"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 180
                timeoutSeconds: 10
              name: "nexus"
              ports:
              - containerPort: 8081
                name: "http"
              readinessProbe:
                failureThreshold: 10
                httpGet:
                  httpHeaders: []
                  path: "/content/repositories/"
                  port: 8081
                initialDelaySeconds: 60
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/sonatype-work/storage"
                name: "nexus-storage"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "nexus-storage"
              persistentVolumeClaim:
                claimName: "nexus-storage"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-prometheus-blackbox-exporter-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: prometheus-blackbox-exporter
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-prometheus-blackbox-exporter
data:
  catalog-prometheus-blackbox-exporter.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "prometheus-blackbox-exporter"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "prometheus-blackbox-exporter"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "9115"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          expose: "true"
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9115
        selector:
          project: "prometheus-blackbox-exporter"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "blackbox-exporter"
        ownerReferences: []
      data:
        config.yml: "modules:\n  http_2xx:\n    prober: http\n    timeout: 5s\n    http:\n\
          \      valid_status_codes: []  # Defaults to 2xx\n      method: GET\n      no_follow_redirects:\
          \ false\n      fail_if_ssl: false\n      fail_if_not_ssl: false"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-blackbox-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-blackbox-expo"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus-blackbox-exporter"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-blackbox-exporter/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus-blackbox-exporter&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-blackbox-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/blackbox-exporter:master"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "blackbox-exporter"
              ports:
              - containerPort: 9115
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/blackbox_exporter"
                name: "config-volume"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - configMap:
                items: []
                name: "blackbox-exporter"
              name: "config-volume"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-prometheus-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: prometheus
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-prometheus
data:
  catalog-prometheus.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "prometheus"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "prometheus"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "metrics"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          fabric8.io/app-menu: "management"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          expose: "true"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 9090
        selector:
          project: "prometheus"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "1Gi"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      data:
        prometheus.yml: "global:\n  scrape_interval:     30s\n  evaluation_interval: 60s\n\
          \nrule_files:\n  - \"*.rules\"\n\n# A scrape configuration for running Prometheus\
          \ on a Kubernetes cluster.\n# This uses separate scrape configs for cluster\
          \ components (i.e. API server, node)\n# and services to allow each to use different\
          \ authentication configs.\n#\n# Kubernetes labels will be added as Prometheus\
          \ labels on metrics via the\n# `labelmap` relabeling action.\nscrape_configs:\n\
          \n# Scrape config for API servers.\n- job_name: 'kubernetes-apiservers'\n\n\
          \  # This TLS & bearer token file config is used to connect to the actual scrape\n\
          \  # endpoints for cluster components. This is separate to discovery auth\n\
          \  # configuration (`in_cluster` below) because discovery & scraping are two\n\
          \  # separate concerns in Prometheus.\n  tls_config:\n    # workaround for Prometheus\
          \ -> Kubernetes cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n\
          \    insecure_skip_verify: true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: endpoints\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name,\
          \ __meta_kubernetes_endpoint_port_name]\n    action: keep\n    regex: default;kubernetes;https\n\
          \n# Scrape config for nodes.\n- job_name: 'kubernetes-nodes'\n\n  # This TLS\
          \ & bearer token file config is used to connect to the actual scrape\n  # endpoints\
          \ for cluster components. This is separate to discovery auth\n  # configuration\
          \ (`in_cluster` below) because discovery & scraping are two\n  # separate concerns\
          \ in Prometheus.\n  tls_config:\n    # workaround for Prometheus -> Kubernetes\
          \ cert issue https://github.com/fabric8io/fabric8-devops/issues/438\n    insecure_skip_verify:\
          \ true\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n\
          \  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n\
          \  scheme: https\n\n  kubernetes_sd_configs:\n  - role: node\n\n  relabel_configs:\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n\n# Scrape\
          \ config for node exporter pods deployed as a daemonset.\n- job_name: 'kubernetes-node-exporters'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_name]\n    action: keep\n    regex: node-exporter-.+\n\
          \  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - source_labels: [__meta_kubernetes_pod_node_name]\n\
          \    action: replace\n    target_label: instance\n\n# Scrape config for service\
          \ endpoints.\n#\n# The relabeling allows the actual service scrape endpoint\
          \ to be configured\n# via the following annotations:\n#\n# * `prometheus.io/scrape`:\
          \ Only scrape services that have a value of `true`\n# * `prometheus.io/scheme`:\
          \ If the metrics endpoint is secured then you will need\n# to set this to `https`\
          \ & most likely set the `tls_config` of the scrape config.\n# * `prometheus.io/path`:\
          \ If the metrics path is not `/metrics` override this.\n# * `prometheus.io/port`:\
          \ If the metrics are exposed on a different port to the\n# service then set\
          \ this appropriately.\n- job_name: 'kubernetes-service-endpoints'\n\n  kubernetes_sd_configs:\n\
          \  - role: endpoints\n\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\n\
          \    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\n\
          \    action: replace\n    regex: (.+)\n    target_label: __metrics_path__\n\
          \  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\n\
          \    action: replace\n    target_label: __address__\n    regex: (.+)(?::\\d+);(\\\
          d+)\n    replacement: $1:$2\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n\
          \  - source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ probing services via the Blackbox Exporter.\n#\n# The relabeling allows the\
          \ actual service scrape endpoint to be configured\n# via the following annotations:\n\
          #\n# * `prometheus.io/probe`: Only probe services that have a value of `true`\n\
          - job_name: 'kubernetes-services'\n\n  metrics_path: /probe\n  params:\n   \
          \ module: [http_2xx]\n\n  kubernetes_sd_configs:\n  - role: service\n\n  relabel_configs:\n\
          \  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\n\
          \    action: keep\n    regex: true\n  - source_labels: []\n    target_label:\
          \ __address__\n    replacement: blackbox\n  - source_labels: [__address__]\n\
          \    regex: (.*)(:80)?\n    target_label: __param_target\n  - source_labels:\
          \ [__meta_kubernetes_service_name,__meta_kubernetes_service_namespace]\n   \
          \ target_label: __param_target\n    regex: ([^;]+);(.+)\n    replacement: $1.$2.svc\n\
          \  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  -\
          \ source_labels: [__meta_kubernetes_service_namespace]\n    action: replace\n\
          \    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_service_name]\n\
          \    action: replace\n    target_label: kubernetes_name\n\n# Scrape config for\
          \ pods\n#\n# The relabeling allows the actual pod scrape endpoint to be configured\
          \ via the\n# following annotations:\n#\n# * `prometheus.io/scrape`: Only scrape\
          \ pods that have a value of `true`\n# * `prometheus.io/port`: Scrape the pod\
          \ on the indicated port instead of the default of `9102`.\n- job_name: 'kubernetes-pods'\n\
          \n  kubernetes_sd_configs:\n  - role: pod\n\n  relabel_configs:\n  - source_labels:\
          \ [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n\
          \    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\n\
          \    action: replace\n    target_label: __scheme__\n    regex: (https?)\n  -\
          \ source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n   \
          \ action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  -\
          \ source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n\
          \    action: replace\n    regex: (.+):(?:\\d+);(\\d+)\n    replacement: ${1}:${2}\n\
          \    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)"
        pod.rules: "pod:memory_usage_bytes = sum(container_memory_usage_bytes{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_receive_bytes:1m = sum(rate(container_network_receive_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:network_transmit_bytes:1m = sum(rate(container_network_transmit_bytes_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \npod:cpu_usage_seconds:1m = sum(rate(container_cpu_usage_seconds_total{kubernetes_pod_name=~\"\
          .+\", job=\"kubernetes-nodes\"}[1m])) by (kubernetes_pod_name, kubernetes_namespace)\n\
          \nALERT ServiceDown\nIF probe_success{job=\"kubernetes-services\"} == 0\n  FOR\
          \ 10s\n  LABELS {\n    service = \"{{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\"\
          \n  }\n  ANNOTATIONS {\n    severity    =\"page\",\n    summary     =\"Service\
          \ {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}} down\",\n   \
          \ description =\"Service {{$labels.kubernetes_namespace}}/{{$labels.kubernetes_name}}\
          \ has been down for more than 10 seconds!\"\n  }"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "prometheus"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "prometheus"
            provider: "fabric8"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=prometheus&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /prometheus\"],\"volumeMounts\":[{\"mountPath\":\"/prometheus\",\"name\"\
                :\"data-volume\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env: []
              image: "prom/prometheus:v1.3.1"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              name: "prometheus"
              ports:
              - containerPort: 9090
                name: "http"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  port: "http"
                initialDelaySeconds: 1
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
              - mountPath: "/prometheus"
                name: "data-volume"
                subPath: "prometheus-db"
            - args:
              - "-volume-dir"
              - "/etc/prometheus"
              - "-webhook-url"
              - "http://localhost:9090/-/reload"
              command: []
              env: []
              image: "jimmidyson/configmap-reload:v0.1"
              name: "configmap-reload"
              ports: []
              volumeMounts:
              - mountPath: "/etc/prometheus"
                name: "config-volume"
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "metrics"
            volumes:
            - configMap:
                items: []
                name: "prometheus"
              name: "config-volume"
            - name: "data-volume"
              persistentVolumeClaim:
                claimName: "prometheus-data"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-prometheus-node-exporter-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: prometheus-node-exporter
    version: 2.2.311
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-prometheus-node-exporter
data:
  catalog-prometheus-node-exporter.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "prometheus-node-exporter"
        version: "2.2.311"
        group: "io.fabric8.devops.apps"
      name: "prometheus-node-exporter"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "extensions/v1beta1"
      kind: "DaemonSet"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/prometheus-node-exporter/src/main/fabric8/icon.png"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "prometheus-node-exporter"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "node-exporter"
        ownerReferences: []
      spec:
        template:
          metadata:
            annotations: {}
            finalizers: []
            labels:
              provider: "fabric8"
              project: "prometheus-node-exporter"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "node-exporter"
            ownerReferences: []
          spec:
            containers:
            - args:
              - "-collector.procfs"
              - "/host/proc"
              - "-collector.sysfs"
              - "/host/proc"
              - "-collector.filesystem.ignored-mount-points"
              - "^/(sys|proc|dev|host|etc)($|/)"
              command: []
              env: []
              image: "prom/node-exporter"
              name: "node-exporter"
              ports:
              - containerPort: 9100
                name: "scrape"
              volumeMounts:
              - mountPath: "/host/proc"
                name: "host-proc"
                readOnly: true
              - mountPath: "/host/sys"
                name: "host-sys"
                readOnly: true
              - mountPath: "/rootfs"
                name: "host-root"
                readOnly: true
            hostNetwork: true
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "node-exporter"
            volumes:
            - hostPath:
                path: "/proc"
              name: "host-proc"
            - hostPath:
                path: "/sys"
              name: "host-sys"
            - hostPath:
                path: "/"
              name: "host-root"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-social-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: social
    version: target
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-social
data:
  catalog-social.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "social"
        version: "target"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "social"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "orion"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
          expose: "true"
        name: "orion"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "orion"
          provider: "fabric8"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 80
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-back"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 8000
          targetPort: 8000
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=orion&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "orion"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "orion"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "orion"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/orion/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=orion&var-version=2.2.311"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "orion"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/eclipse-orion:2.2.311"
              imagePullPolicy: "IfNotPresent"
              name: "orion"
              ports:
              - containerPort: 8080
                name: "http"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "taiga"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/postgresql/data/\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/postgresql/data/\"\
                ,\"name\":\"taiga-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "taiga"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "taiga"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "POSTGRES_PASSWORD"
                value: "password"
              - name: "POSTGRES_USER"
                value: "taiga"
              image: "postgres"
              name: "taiga-postgres"
              ports: []
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data/"
                name: "taiga-data"
            - args: []
              command: []
              env:
              - name: "SECRET_KEY"
                value: "xyz"
              - name: "POSTGRES_PORT_5432_TCP_ADDR"
                value: "127.0.0.1"
              - name: "POSTGRES_ENV_POSTGRES_USER"
                value: "taiga"
              - name: "POSTGRES_ENV_POSTGRES_PASSWORD"
                value: "password"
              image: "fabric8/taiga-back:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-backend"
              ports:
              - containerPort: 8000
                name: "irdmi"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            - args: []
              command: []
              env: []
              image: "fabric8/taiga-front:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-frontend"
              ports:
              - containerPort: 80
                name: "http"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "taiga-data"
              persistentVolumeClaim:
                claimName: "taiga-data"
            - name: "taiga-static"
            - name: "taiga-media"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-taiga-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: taiga
    version: 2.2.311
    expose: "true"
    group: io.fabric8.devops.apps
    kind: catalog
  name: catalog-taiga
data:
  catalog-taiga.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.311"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "taiga"
        version: "2.2.311"
        expose: "true"
        group: "io.fabric8.devops.apps"
      name: "taiga"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/app-menu: "development"
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          expose: "true"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 80
          targetPort: 80
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-back"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 8000
          targetPort: 8000
        selector:
          provider: "fabric8"
          project: "taiga"
          group: "io.fabric8.devops.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations:
          volume.beta.kubernetes.io/storage-class: "standard"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
          fabric8.io/git-branch: "release-v2.2.311"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "taiga"
          version: "2.2.311"
          group: "io.fabric8.devops.apps"
        name: "taiga"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "taiga"
            group: "io.fabric8.devops.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-devops/master/taiga/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.311"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=taiga&var-version=2.2.311"
              pod.alpha.kubernetes.io/init-containers: "[{\"image\":\"busybox\",\"imagePullPolicy\"\
                :\"IfNotPresent\",\"name\":\"init\",\"command\":[\"chmod\",\"777\",\"\
                /var/lib/postgresql/data/\"],\"volumeMounts\":[{\"mountPath\":\"/var/lib/postgresql/data/\"\
                ,\"name\":\"taiga-data\"}]}]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "taiga"
              version: "2.2.311"
              group: "io.fabric8.devops.apps"
            name: "taiga"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "POSTGRES_PASSWORD"
                value: "password"
              - name: "POSTGRES_USER"
                value: "taiga"
              image: "postgres"
              name: "taiga-postgres"
              ports: []
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data/"
                name: "taiga-data"
            - args: []
              command: []
              env:
              - name: "SECRET_KEY"
                value: "xyz"
              - name: "POSTGRES_PORT_5432_TCP_ADDR"
                value: "127.0.0.1"
              - name: "POSTGRES_ENV_POSTGRES_USER"
                value: "taiga"
              - name: "POSTGRES_ENV_POSTGRES_PASSWORD"
                value: "password"
              image: "fabric8/taiga-back:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-backend"
              ports:
              - containerPort: 8000
                name: "irdmi"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 8000
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            - args: []
              command: []
              env: []
              image: "fabric8/taiga-front:2.2.311"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 120
                timeoutSeconds: 10
              name: "taiga-frontend"
              ports:
              - containerPort: 80
                name: "http"
                protocol: "TCP"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/"
                  port: 80
                initialDelaySeconds: 20
                timeoutSeconds: 10
              volumeMounts:
              - mountPath: "/var/lib/postgresql/data"
                name: "taiga-data"
              - mountPath: "/usr/local/taiga/static"
                name: "taiga-static"
              - mountPath: "/usr/local/taiga/media"
                name: "taiga-media"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "taiga-data"
              persistentVolumeClaim:
                claimName: "taiga-data"
            - name: "taiga-static"
            - name: "taiga-media"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-turbine-server-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 2656e3679d0034bb63c83e429f17135b30ed7d71
    fabric8.io/iconUrl: img/icons/spring-boot.svg
    fabric8.io/git-branch: release-v1.0.28
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: turbine-server
    version: 1.0.28
    expose: "true"
    group: io.fabric8.kubeflix
    kind: catalog
  name: catalog-turbine-server
data:
  catalog-turbine-server.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
        fabric8.io/iconUrl: "img/icons/spring-boot.svg"
        fabric8.io/git-branch: "release-v1.0.28"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "turbine-server"
        version: "1.0.28"
        expose: "true"
        group: "io.fabric8.kubeflix"
      name: "turbine-server"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "ServiceAccount"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "turbine-server"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine"
        ownerReferences: []
      imagePullSecrets: []
      secrets: []
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          servicepath: "/turbine.stream"
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
          expose: "true"
        name: "turbine-server"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "http"
          port: 80
          protocol: "TCP"
          targetPort: 8080
        selector:
          project: "turbine-server"
          provider: "fabric8"
          group: "io.fabric8.kubeflix"
        type: "LoadBalancer"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "img/icons/spring-boot.svg"
          fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
          fabric8.io/git-branch: "release-v1.0.28"
        finalizers: []
        labels:
          project: "turbine-server"
          provider: "fabric8"
          version: "1.0.28"
          group: "io.fabric8.kubeflix"
        name: "turbine-server"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            project: "turbine-server"
            provider: "fabric8"
            group: "io.fabric8.kubeflix"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "img/icons/spring-boot.svg"
              fabric8.io/git-commit: "2656e3679d0034bb63c83e429f17135b30ed7d71"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=turbine-server&var-version=1.0.28"
              fabric8.io/git-branch: "release-v1.0.28"
            finalizers: []
            labels:
              project: "turbine-server"
              provider: "fabric8"
              version: "1.0.28"
              group: "io.fabric8.kubeflix"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/turbine-server:1.0.28"
              imagePullPolicy: "IfNotPresent"
              livenessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 180
              name: "turbine-server"
              ports:
              - containerPort: 8080
                name: "http"
              - containerPort: 8778
                name: "jolokia"
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/health"
                  port: 8080
                initialDelaySeconds: 10
              securityContext:
                privileged: false
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            serviceAccountName: "turbine"
            volumes: []
    parameters: []
---
# Source: fabric8-platform/templates/catalog-zipkin-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 500219733b1151415686940f4b893d7add206822
    fabric8.io/build-id: "2"
    fabric8.io/build-url: http://jenkins.ux.fabric8.io/job/oss-parent/2
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.153
    fabric8.io/git-url: http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: zipkin
    version: 0.1.8
    serverId: "1"
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-zipkin
data:
  catalog-zipkin.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
        fabric8.io/build-id: "2"
        fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.153"
        fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "zipkin"
        version: "0.1.8"
        serverId: "1"
        group: "io.fabric8.ipaas.apps"
      name: "zipkin"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kafka"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
        name: "kafka"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9092
          protocol: "TCP"
          targetPort: 9092
        selector:
          project: "kafka"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/path: "/prometheus"
          prometheus.io/port: "9411"
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 9411
          protocol: "TCP"
          targetPort: 9411
        selector:
          project: "zipkin"
          provider: "fabric8"
          group: "io.fabric8.zipkin"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - port: 3306
          protocol: "TCP"
          targetPort: 3306
        selector:
          project: "zipkin-mysql"
          provider: "fabric8"
          group: "io.fabric8.zipkin"
        type: "LoadBalancer"
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
        name: "zookeeper"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "client"
          port: 2181
          targetPort: 2181
        selector:
          project: "zookeeper"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
    - apiVersion: "v1"
      kind: "PersistentVolumeClaim"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "mysql-data"
        ownerReferences: []
      spec:
        accessModes:
        - "ReadWriteOnce"
        resources:
          limits: {}
          requests:
            storage: "100Mi"
        volumeName: "mysql-data"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql-cnf"
        ownerReferences: []
      data:
        custom.cnf: "[mysqld]\nsql-mode=\"\"\n"
    - apiVersion: "v1"
      kind: "ConfigMap"
      metadata:
        annotations: {}
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql-initdb"
        ownerReferences: []
      data:
        init.sql: "CREATE TABLE IF NOT EXISTS zipkin_spans (\n  `trace_id` BIGINT NOT\
          \ NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(255) NOT NULL,\n  `parent_id`\
          \ BIGINT,\n  `debug` BIT(1),\n  `start_ts` BIGINT COMMENT 'Span.timestamp():\
          \ epoch micros used for endTs query and to implement TTL',\n  `duration` BIGINT\
          \ COMMENT 'Span.duration(): micros used for minDuration and maxDuration query'\n\
          ) ENGINE=InnoDB ROW_FORMAT=COMPRESSED;\n\nALTER TABLE zipkin_spans ADD UNIQUE\
          \ KEY(`trace_id`, `id`) COMMENT 'ignore insert on duplicate';\nALTER TABLE zipkin_spans\
          \ ADD INDEX(`trace_id`, `id`) COMMENT 'for joining with zipkin_annotations';\n\
          ALTER TABLE zipkin_spans ADD INDEX(`trace_id`) COMMENT 'for getTracesByIds';\n\
          ALTER TABLE zipkin_spans ADD INDEX(`name`) COMMENT 'for getTraces and getSpanNames';\n\
          ALTER TABLE zipkin_spans ADD INDEX(`start_ts`) COMMENT 'for getTraces ordering\
          \ and range';\n\nCREATE TABLE IF NOT EXISTS zipkin_annotations (\n  `trace_id`\
          \ BIGINT NOT NULL COMMENT 'coincides with zipkin_spans.trace_id',\n  `span_id`\
          \ BIGINT NOT NULL COMMENT 'coincides with zipkin_spans.id',\n  `a_key` VARCHAR(255)\
          \ NOT NULL COMMENT 'BinaryAnnotation.key or Annotation.value if type == -1',\n\
          \  `a_value` BLOB COMMENT 'BinaryAnnotation.value(), which must be smaller than\
          \ 64KB',\n  `a_type` INT NOT NULL COMMENT 'BinaryAnnotation.type() or -1 if\
          \ Annotation',\n  `a_timestamp` BIGINT COMMENT 'Used to implement TTL; Annotation.timestamp\
          \ or zipkin_spans.timestamp',\n  `endpoint_ipv4` INT COMMENT 'Null when Binary/Annotation.endpoint\
          \ is null',\n  `endpoint_ipv6` BINARY(16) COMMENT 'Null when Binary/Annotation.endpoint\
          \ is null, or no IPv6 address',\n  `endpoint_port` SMALLINT COMMENT 'Null when\
          \ Binary/Annotation.endpoint is null',\n  `endpoint_service_name` VARCHAR(255)\
          \ COMMENT 'Null when Binary/Annotation.endpoint is null'\n) ENGINE=InnoDB ROW_FORMAT=COMPRESSED;\n\
          \nALTER TABLE zipkin_annotations ADD UNIQUE KEY(`trace_id`, `span_id`, `a_key`,\
          \ `a_timestamp`) COMMENT 'Ignore insert on duplicate';\nALTER TABLE zipkin_annotations\
          \ ADD INDEX(`trace_id`, `span_id`) COMMENT 'for joining with zipkin_spans';\n\
          ALTER TABLE zipkin_annotations ADD INDEX(`trace_id`) COMMENT 'for getTraces/ByIds';\n\
          ALTER TABLE zipkin_annotations ADD INDEX(`endpoint_service_name`) COMMENT 'for\
          \ getTraces and getServiceNames';\nALTER TABLE zipkin_annotations ADD INDEX(`a_type`)\
          \ COMMENT 'for getTraces';\nALTER TABLE zipkin_annotations ADD INDEX(`a_key`)\
          \ COMMENT 'for getTraces';\n\nCREATE TABLE IF NOT EXISTS zipkin_dependencies\
          \ (\n  `day` DATE NOT NULL,\n  `parent` VARCHAR(255) NOT NULL,\n  `child` VARCHAR(255)\
          \ NOT NULL,\n  `call_count` BIGINT\n) ENGINE=InnoDB ROW_FORMAT=COMPRESSED;\n\
          \nALTER TABLE zipkin_dependencies ADD UNIQUE KEY(`day`, `parent`, `child`);\n\
          GRANT SELECT, INSERT, UPDATE, DELETE ON zipkin.* TO zipkin@'%' IDENTIFIED BY\
          \ 'zipkin' WITH GRANT OPTION ;\nFLUSH PRIVILEGES;\n"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kafka&var-version=2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "kafka"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
        name: "kafka"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "kafka"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=kafka&var-version=2.2.153"
              fabric8.io/build-id: "2"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/kafka/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.153"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "kafka"
              version: "2.2.153"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/kafka:2.2.153"
              imagePullPolicy: "IfNotPresent"
              name: "kafka"
              ports:
              - containerPort: 9092
                name: "kafka"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/kafka/logs"
                name: "logs"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "logs"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin&var-version=0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zipkin"
            group: "io.fabric8.zipkin"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin&var-version=0.1.8"
              fabric8.io/build-id: "3"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
              fabric8.io/git-branch: "release-v0.1.8"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zipkin"
              version: "0.1.8"
              group: "io.fabric8.zipkin"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "STORAGE_PORT_9042_TCP_ADDR"
                value: "zipkin-cassandra:9411"
              - name: "STORAGE_PORT_3306_TCP_ADDR"
                value: "zipkin-mysql:3306"
              - name: "STORAGE_TYPE"
                value: "mysql"
              - name: "TRANSPORT_TYPE"
                value: "http"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "openzipkin/zipkin:1.13.0"
              name: "zipkin"
              ports: []
              readinessProbe:
                httpGet:
                  httpHeaders: []
                  path: "/api/v1/services"
                  port: 9411
                initialDelaySeconds: 5
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts: []
            imagePullSecrets: []
            nodeSelector: {}
            volumes: []
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/git-branch: "release-v0.1.8"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin-mysql&var-version=0.1.8"
          fabric8.io/build-id: "3"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zipkin-mysql"
          version: "0.1.8"
          group: "io.fabric8.zipkin"
        name: "zipkin-mysql"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zipkin-mysql"
            group: "io.fabric8.zipkin"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "35e95d1e5196e781f54b46083a9e45f562d0243f"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zipkin-mysql&var-version=0.1.8"
              fabric8.io/build-id: "3"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/3"
              fabric8.io/git-branch: "release-v0.1.8"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/35e95d1e5196e781f54b46083a9e45f562d0243f"
              pod.alpha.kubernetes.io/init-containers: "[\n            {\n           \
                \     \"name\": \"init\",\n                \"image\": \"busybox\",\n \
                \               \"command\": [\"chmod\", \"777\", \"/var/lib/mysql\"],\n\
                \                \"volumeMounts\": [\n                    {\n        \
                \                \"name\": \"mysql-data\",\n                        \"\
                mountPath\": \"/var/lib/mysql\"\n                    }\n             \
                \   ]\n            }\n        ]"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zipkin-mysql"
              version: "0.1.8"
              group: "io.fabric8.zipkin"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "MYSQL_USER"
                value: "zipkin"
              - name: "MYSQL_PASSWORD"
                value: "zipkin"
              - name: "MYSQL_ROOT_PASSWORD"
                value: "zipkin"
              - name: "MYSQL_DATABASE"
                value: "zipkin"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "mysql:5.7"
              name: "zipkin-mysql"
              ports: []
              readinessProbe:
                initialDelaySeconds: 5
                tcpSocket:
                  port: 3306
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              volumeMounts:
              - mountPath: "/var/lib/mysql"
                name: "mysql-data"
              - mountPath: "/docker-entrypoint-initdb.d/"
                name: "mysql-init-script"
              - mountPath: "/etc/mysql/conf.d/"
                name: "mysql-confd"
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - name: "mysql-data"
              persistentVolumeClaim:
                claimName: "mysql-data"
            - configMap:
                items: []
                name: "zipkin-mysql-initdb"
              name: "mysql-init-script"
            - configMap:
                items: []
                name: "zipkin-mysql-cnf"
              name: "mysql-confd"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.153"
          fabric8.io/build-id: "2"
          fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
          fabric8.io/git-branch: "release-v2.2.153"
          fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.153"
          group: "io.fabric8.ipaas.apps"
          serverId: "1"
        name: "zookeeper"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zookeeper"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/git-commit: "500219733b1151415686940f4b893d7add206822"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.153"
              fabric8.io/build-id: "2"
              fabric8.io/build-url: "http://jenkins.ux.fabric8.io/job/oss-parent/2"
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
              fabric8.io/git-branch: "release-v2.2.153"
              fabric8.io/git-url: "http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/500219733b1151415686940f4b893d7add206822"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zookeeper"
              version: "2.2.153"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ENSEMBLE_SIZE"
                value: "1"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/zookeeper:2.2.153"
              imagePullPolicy: "IfNotPresent"
              name: "zookeeper"
              ports:
              - containerPort: 2181
                name: "zkclient"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/zookeeper/data"
                name: "data"
                readOnly: false
              - mountPath: "/opt/zookeeper/log"
                name: "log"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "data"
            - emptyDir:
                medium: "Memory"
              name: "log"
    parameters: []
---
# Source: fabric8-platform/templates/catalog-zookeeper-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.io/git-commit: 0b90360981bed67ebde7b71cc6a96d34cca3dcc6
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.168
    maven.fabric8.io/app-catalog: "true"
  labels:
    provider: fabric8
    project: zookeeper
    version: 2.2.168
    expose: "true"
    serverId: "1"
    group: io.fabric8.ipaas.apps
    kind: catalog
  name: catalog-zookeeper
data:
  catalog-zookeeper.yml: |
    ---
    apiVersion: "v1"
    kind: "Template"
    metadata:
      annotations:
        fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
        fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
        fabric8.io/git-branch: "release-v2.2.168"
      finalizers: []
      labels:
        provider: "fabric8"
        project: "zookeeper"
        version: "2.2.168"
        expose: "true"
        serverId: "1"
        group: "io.fabric8.ipaas.apps"
      name: "zookeeper"
      ownerReferences: []
    labels: {}
    objects:
    - apiVersion: "v1"
      kind: "Service"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          expose: "true"
        name: "zookeeper"
        ownerReferences: []
      spec:
        deprecatedPublicIPs: []
        externalIPs: []
        loadBalancerSourceRanges: []
        ports:
        - name: "client"
          port: 2181
          targetPort: 2181
        selector:
          project: "zookeeper"
          provider: "fabric8"
          group: "io.fabric8.ipaas.apps"
    - apiVersion: "extensions/v1beta1"
      kind: "Deployment"
      metadata:
        annotations:
          fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
          fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
          fabric8.io/git-branch: "release-v2.2.168"
          fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
        finalizers: []
        labels:
          provider: "fabric8"
          project: "zookeeper"
          version: "2.2.168"
          group: "io.fabric8.ipaas.apps"
          serverId: "1"
        name: "zookeeper"
        ownerReferences: []
      spec:
        replicas: 1
        selector:
          matchExpressions: []
          matchLabels:
            provider: "fabric8"
            project: "zookeeper"
            group: "io.fabric8.ipaas.apps"
        template:
          metadata:
            annotations:
              fabric8.io/iconUrl: "https://cdn.rawgit.com/fabric8io/fabric8-ipaas/master/zookeeper/src/main/fabric8/icon.png"
              fabric8.io/git-commit: "0b90360981bed67ebde7b71cc6a96d34cca3dcc6"
              fabric8.io/git-branch: "release-v2.2.168"
              fabric8.io/metrics-path: "dashboard/file/kubernetes-pods.json/?var-project=zookeeper&var-version=2.2.168"
            finalizers: []
            labels:
              provider: "fabric8"
              project: "zookeeper"
              version: "2.2.168"
              group: "io.fabric8.ipaas.apps"
            ownerReferences: []
          spec:
            containers:
            - args: []
              command: []
              env:
              - name: "ENSEMBLE_SIZE"
                value: "1"
              - name: "KUBERNETES_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: "metadata.namespace"
              image: "fabric8/zookeeper:2.2.168"
              imagePullPolicy: "IfNotPresent"
              name: "zookeeper"
              ports:
              - containerPort: 2181
                name: "zkclient"
              - containerPort: 8778
                name: "jolokia"
              resources:
                limits:
                  cpu: "0"
                  memory: "0"
                requests:
                  cpu: "0"
                  memory: "0"
              securityContext:
                privileged: false
              volumeMounts:
              - mountPath: "/opt/zookeeper/data"
                name: "data"
                readOnly: false
              - mountPath: "/opt/zookeeper/log"
                name: "log"
                readOnly: false
            imagePullSecrets: []
            nodeSelector: {}
            volumes:
            - emptyDir:
                medium: "Memory"
              name: "data"
            - emptyDir:
                medium: "Memory"
              name: "log"
    parameters: []
---
# Source: fabric8-platform/templates/exposecontroller-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    provider: fabric8
    project: exposecontroller
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: exposecontroller
data:
  config.yml: |
    domain:
    exposer:
---
# Source: fabric8-platform/templates/fabric8-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.console/summary: '[Fabric8 Console](http://fabric8.io/v2/console.html)
      for working with Fabric8 and Kubernetes'
    description: Creates an instance of the <a href="http://fabric8.io/v2/console.html">Fabric8 Console</a> for working with fabric8 and kubernetes.
    expose.config.fabric8.io/oauth-authorize-url-key: oauth-authorize-uri
    fabric8.console/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-console/master/app-kubernetes/src/main/fabric8/icon.svg
  labels:
    provider: fabric8
    project: fabric8-console
    version: 2.2.199
    group: io.fabric8.platform.console
  name: fabric8
data:
  github-oauth-client-id: ""
  github-oauth-client-secret: ""
  oauth-authorize-uri: ""
  auth-mode: basic
  master-uri: k8s
---
# Source: fabric8-platform/templates/fabric8-environments-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    description: Defines the environments used by your Continuous Delivery pipelines.
    fabric8.console/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-console/master/app-kubernetes/src/main/fabric8/icon.svg
  labels:
    kind: environments
    provider: fabric8
    project: fabric8-console
    version: 2.2.199
    group: io.fabric8.platform.console
  name: fabric8-environments
---
# Source: fabric8-platform/templates/fabric8-forge-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.fabric8-forge/summary: 'Fabric8 :: Forge'
    description: 'Fabric8 :: Forge'
    fabric8.fabric8-forge/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg
    fabric8.io/yaml-schema: |
      type: object
      properties:
        jenkinsfile-library-git-repository:
          type: string
          description: The git clone URL for the library of Jenkinsfiles used to associate CD pipelines with projects
            reused across projects
          default: https://github.com/fabric8io/jenkins-workflow-library.git
        use-external-git-address:
          type: boolean
          description: Whether we should use the external git URLs. Using internal tends to avoid DNS issues of kubernetes pods not seeing external host names.
        jenkins-gogs-user:
          type: string
          description: The user name for Jenkins to login to Gogs
          default: gogsadmin
        jenkins-gogs-email:
          type: string
          description: The email address of the Jenkins user on Gogs
          default: 'gogsadmin@fabric8.local'
        jenkins-gogs-password:
          type: string
          description: The password for Jenkins to login to Gogs
          default: RedHat$1
        fabric8-default-environments:
          type: string
          description: The list of default environment names to actual kubernetes namespaces
          default: Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod
  labels:
    provider: fabric8
    project: fabric8-forge
    version: 2.3.88
    group: io.fabric8.forge.apps
  name: fabric8-forge
data:
  fabric8-default-environments: Testing=${namespace}-testing,Staging=${namespace}-staging,Production=${namespace}-prod
  jenkins-gogs-email: gogsadmin@fabric8.local
  jenkins-gogs-password: RedHat$1
  jenkins-gogs-user: gogsadmin
  jenkinsfile-library-git-repository: https://github.com/fabric8io/fabric8-jenkinsfile-library.git
  jenkinsfile-library-git-tag: v2.2.311
  use-external-git-address: "false"
---
# Source: fabric8-platform/templates/fabric8-git-app-secrets-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    provider: fabric8
    project: gogs
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: fabric8-git-app-secrets
  namespace: user-secrets-source-admin
data:
  gogs: default-git-gogs
---
# Source: fabric8-platform/templates/fabric8-platform-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    fabric8.io/kind: package
    provider: fabric8.io
    version: 2.4.24
    project: fabric8-platform
    group: io.fabric8.platform.packages
  name: fabric8-platform
data:
  metadata-url: http://central.maven.org/maven2/io/fabric8/platform/packages/fabric8-platform/maven-metadata.xml
  package-url-prefix: http://central.maven.org/maven2/io/fabric8/platform/packages/fabric8-platform/%[1]s/fabric8-platform-%[1]s-
---
# Source: fabric8-platform/templates/gogs-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.gogs/summary: '[Gogs](http://gogs/) - A self-hosted Git service written
      in Go'
    description: |
      Gogs is a self-hosted Git service written in Go.

      More details on the <a href="http://gogs.io/" target="gogs">Gogs home page</a>.
    fabric8.gogs/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
    expose.config.fabric8.io/url-key: gogs-server--root-url
    expose.config.fabric8.io/oauth-authorize-url-key: oauth-authorize-uri
    fabric8.io/json-schema: |-
      {
        "type" : "object",
        "properties" : {
          "GOGS_SERVER__ROOT_URL" : {
            "type" : "string",
            "description" : "The root URL for the gogs server"
          },
          "DOMAIN" : {
            "type" : "string",
            "description" : "The domain name applications are installed on",
            "default" : "vagrant.f8"
          },
          "ADMIN_USER_EMAIL" : {
            "type" : "string",
            "description" : "The email address of the admin user on Gogs",
            "default" : "gogsadmin@fabric8.local"
          },
          "ADMIN_USER_PASSWORD" : {
            "type" : "string",
            "description" : "The password to login to Gogs",
            "default" : "RedHat$1"
          },
          "GOGS_SERVER__PROTOCOL" : {
            "type" : "string",
            "description" : "The protocol for gogs to use; either http or https",
            "default" : "http"
          },
          "GOGS_OAUTH_OPENSHIFT__ENABLED" : {
            "type" : "string",
            "default" : "true"
          },
          "ADMIN_USER_CREATE" : {
            "type" : "string",
            "description" : "Should we create an admin user on startup",
            "default" : "true"
          },
          "GOGS_OAUTH_OPENSHIFT__TOKEN_URL" : {
            "type" : "string"
          },
          "GOGS_OAUTH_OPENSHIFT__SCOPES" : {
            "type" : "string"
          },
          "GOGS_OAUTH_OPENSHIFT__AUTH_URL" : {
            "type" : "string"
          },
          "GOGS_WEBHOOK__TASK_INTERVAL" : {
            "type" : "string",
            "default" : "true"
          },
          "GOGS_WEBHOOK__SKIP_TLS_VERIFY" : {
            "type" : "string",
            "default" : "true"
          },
          "GOGS_SERVER__DOMAIN" : {
            "type" : "string",
            "description" : "The gogs server name",
            "default" : "gogs.vagrant.f8"
          },
          "ADMIN_USER_NAME" : {
            "type" : "string",
            "description" : "The user name to login to Gogs",
            "default" : "gogsadmin"
          },
          "GOGS_OAUTH__ENABLED" : {
            "type" : "string",
            "default" : "true"
          },
          "GOGS_OAUTH_TWITTER__ENABLED" : {
            "type" : "string",
            "default" : "false"
          },
          "KUBERNETES_ADMIN_USER" : {
            "type" : "string",
            "description" : "The default Kubernetes admin user",
            "default" : "admin"
          },
          "GOGS_OAUTH_OPENSHIFT__CLIENT_ID" : {
            "type" : "string",
            "default" : "gogs"
          }
        }
      }
  labels:
    provider: fabric8
    project: gogs
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: gogs
data:
  admin-user-create: "true"
  admin-user-email: gogsadmin@fabric8.local
  admin-user-name: gogsadmin
  admin-user-password: RedHat$1
  gogs-oauth--enabled: "true"
  gogs-oauth-openshift--auth-url: ""
  gogs-oauth-openshift--client-id: gogs
  gogs-oauth-openshift--enabled: "true"
  gogs-oauth-openshift--scopes: ""
  gogs-oauth-openshift--token-url: ""
  gogs-oauth-twitter--enabled: "false"
  gogs-server--root-url: ""
  gogs-webhook--skip-tls-verify: "true"
  gogs-webhook--task-interval: "true"
  kubernetes-admin-user: admin
---
# Source: fabric8-platform/templates/jenkins-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    fabric8.jenkins/summary: '[Jenkins](http://jenkins-ci.org/) extendable open source
      continuous integration server'
    description: |-
      Jenkins CI is a leading open-source continuous integration server. Built with Java, it provides 985 plugins to support building and testing virtually any project.

      [http://jenkins-ci.org/](http://jenkins-ci.org/)
    fabric8.jenkins/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg
    fabric8.io/json-schema: |-
      {
        "type" : "object",
        "properties" : {
          "PIPELINE_ELASTICSEARCH_PROTOCOL" : {
            "type" : "string",
            "description" : "Protocol used to connect to elasticsearch",
            "default" : "http"
          },
          "JENKINS_GOGS_USER" : {
            "type" : "string",
            "description" : "The user name for Jenkins to login to Gogs",
            "default" : "gogsadmin"
          },
          "JENKINS_GOGS_PASSWORD" : {
            "type" : "string",
            "description" : "The password for Jenkins to login to Gogs",
            "default" : "RedHat$1"
          },
          "PIPELINE_ELASTICSEARCH_HOST" : {
            "type" : "string",
            "description" : "Elasticsearch hostname used for pipeline events",
            "default" : "elasticsearch"
          },
          "JENKINS_GOGS_EMAIL" : {
            "type" : "string",
            "description" : "The email address of the Jenkins user on Gogs",
            "default" : "gogsadmin@fabric8.local"
          }
        }
      }
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins
data:
  jenkins-gogs-email: gogsadmin@fabric8.local
  jenkins-gogs-password: RedHat$1
  jenkins-gogs-user: gogsadmin
  pipeline-elasticsearch-protocol: http
  pipeline-elasticsearch-host: elasticsearch
  project-version: 2.2.311
---
# Source: fabric8-platform/templates/fabric8-docker-registry-storage-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
  labels:
    provider: fabric8
    project: fabric8-docker-registry
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: fabric8-docker-registry-storage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
# Source: fabric8-platform/templates/gogs-data-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
  labels:
    provider: fabric8
    project: gogs
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: gogs-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: fabric8-platform/templates/jenkins-jobs-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-jobs
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: fabric8-platform/templates/jenkins-mvn-local-repo-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-mvn-local-repo
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# Source: fabric8-platform/templates/jenkins-workspace-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-workspace
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Source: fabric8-platform/templates/nexus-storage-pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
  labels:
    provider: fabric8
    project: nexus
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: nexus-storage
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
# Source: fabric8-platform/templates/configmapcontroller-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    provider: fabric8
    project: configmapcontroller
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: configmapcontroller
---
# Source: fabric8-platform/templates/exposecontroller-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    provider: fabric8
    project: exposecontroller
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: exposecontroller
---
# Source: fabric8-platform/templates/fabric8-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    provider: fabric8
    project: fabric8-console
    version: 2.2.199
    group: io.fabric8.platform.console
  name: fabric8
---
# Source: fabric8-platform/templates/gogs-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
  labels:
    provider: fabric8
    group: io.fabric8.devops.apps
    project: gogs
    version: 2.2.311
  name: gogs
---
# Source: fabric8-platform/templates/jenkins-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins
secrets:
- name: jenkins-git-ssh
- name: jenkins-master-ssh
- name: jenkins-release-gpg
---
# Source: fabric8-platform/templates/fabric8-docker-registry-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
  labels:
    provider: fabric8
    project: fabric8-docker-registry
    version: 2.2.311
    group: io.fabric8.devops.apps
    expose: "true"
  name: fabric8-docker-registry
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
  selector:
    project: fabric8-docker-registry
    provider: fabric8
    group: io.fabric8.devops.apps
---
# Source: fabric8-platform/templates/fabric8-forge-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg
    fabric8.io/git-commit: bad661f3285ecbcd6b7a9373e194bda075d832eb
    fabric8.io/git-branch: release-v2.3.88
  labels:
    provider: fabric8
    project: fabric8-forge
    version: 2.3.88
    group: io.fabric8.forge.apps
    expose: "true"
  name: fabric8-forge
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    project: fabric8-forge
    provider: fabric8
    group: io.fabric8.forge.apps
---
# Source: fabric8-platform/templates/fabric8-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-console/master/app-kubernetes/src/main/fabric8/icon.svg
    fabric8.io/git-commit: 95aff298eeca6fba8f6ade3a5dab742a0f3a4381
    fabric8.io/git-branch: release-v2.2.199
    fabric8.io/build-id: "5"
    fabric8.io/git-url: http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/95aff298eeca6fba8f6ade3a5dab742a0f3a4381
    fabric8.io/build-url: http://jenkins.ux.fabric8.io/job/oss-parent/5
  labels:
    provider: fabric8
    project: fabric8-console
    expose: "true"
    version: 2.2.199
    group: io.fabric8.apps
  name: fabric8
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9090
  selector:
    project: fabric8-console
    provider: fabric8
    expose: "true"
    group: io.fabric8.platform.console
---
# Source: fabric8-platform/templates/gogs-ssh-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
  labels:
    provider: fabric8
    project: gogs
    version: 2.2.311
    group: io.fabric8.devops.apps
    expose: "true"
  name: gogs-ssh
spec:
  ports:
  - port: 22
    protocol: TCP
    targetPort: 2222
  selector:
    project: gogs
    provider: fabric8
    group: io.fabric8.devops.apps
---
# Source: fabric8-platform/templates/gogs-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/app-menu: development
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
  labels:
    provider: fabric8
    project: gogs
    version: 2.2.311
    group: io.fabric8.devops.apps
    expose: "true"
  name: gogs
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    project: gogs
    provider: fabric8
    group: io.fabric8.devops.apps
---
# Source: fabric8-platform/templates/jenkins-jnlp-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.311
  labels:
    project: jenkins
    provider: fabric8
    expose: "true"
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins-jnlp
spec:
  ports:
  - name: agent
    port: 50000
    protocol: TCP
    targetPort: 50000
  selector:
    project: jenkins
    provider: fabric8
    group: io.fabric8.devops.apps
---
# Source: fabric8-platform/templates/jenkins-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/app-menu: development
    api.service.kubernetes.io/path: /blue
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.311
  labels:
    project: jenkins
    provider: fabric8
    expose: "true"
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    project: jenkins
    provider: fabric8
    group: io.fabric8.devops.apps
---
# Source: fabric8-platform/templates/jenkinshift-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/git-commit: 95aff298eeca6fba8f6ade3a5dab742a0f3a4381
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-console/src/main/fabric8/icon.svg
    fabric8.io/git-branch: release-v2.2.199
    fabric8.io/build-id: "5"
    fabric8.io/git-url: http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/95aff298eeca6fba8f6ade3a5dab742a0f3a4381
    fabric8.io/build-url: http://jenkins.ux.fabric8.io/job/oss-parent/5
  labels:
    group: io.fabric8.apps
    project: fabric8-console
    provider: fabric8
    expose: "true"
    version: 2.2.199
  name: jenkinshift
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 9191
  selector:
    group: io.fabric8.platform.console
    project: fabric8-console
    provider: fabric8
---
# Source: fabric8-platform/templates/nexus-svc.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    fabric8.io/app-menu: development
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
  labels:
    provider: fabric8
    project: nexus
    version: 2.2.311
    group: io.fabric8.devops.apps
    expose: "true"
  name: nexus
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8081
  selector:
    project: nexus
    provider: fabric8
    group: io.fabric8.devops.apps
---
# Source: fabric8-platform/templates/configmapcontroller-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=configmapcontroller&var-version=2.2.311
  labels:
    provider: fabric8
    project: configmapcontroller
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: configmapcontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      project: configmapcontroller
      provider: fabric8
      group: io.fabric8.devops.apps
  template:
    metadata:
      annotations:
        fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/configmapcontroller/src/main/fabric8/icon.png
        fabric8.io/git-branch: release-v2.2.311
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=configmapcontroller&var-version=2.2.311
      labels:
        provider: fabric8
        project: configmapcontroller
        version: 2.2.311
        group: io.fabric8.devops.apps
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: fabric8/configmapcontroller:2.3.5
        name: configmapcontroller
      serviceAccountName: configmapcontroller
---
# Source: fabric8-platform/templates/exposecontroller-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    configmap.fabric8.io/update-on-change: exposecontroller
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png
    fabric8.io/git-branch: release-v2.2.311
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=exposecontroller&var-version=2.2.311
  labels:
    provider: fabric8
    project: exposecontroller
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: exposecontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      project: exposecontroller
      provider: fabric8
      group: io.fabric8.devops.apps
  template:
    metadata:
      annotations:
        fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/exposecontroller/src/main/fabric8/icon.png
        configmap.fabric8.io/update-on-change: exposecontroller
        fabric8.io/git-branch: release-v2.2.311
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=exposecontroller&var-version=2.2.311
      labels:
        provider: fabric8
        project: exposecontroller
        version: 2.2.311
        group: io.fabric8.devops.apps
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: fabric8/exposecontroller:2.3.2
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/restarteveryday
          initialDelaySeconds: 86164
        name: exposecontroller
        volumeMounts:
        - mountPath: /etc/exposecontroller
          name: config-volume
      serviceAccountName: exposecontroller
      volumes:
      - configMap:
          name: exposecontroller
        name: config-volume
---
# Source: fabric8-platform/templates/fabric8-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-console/master/app-kubernetes/src/main/fabric8/icon.svg
    configmap.fabric8.io/update-on-change: fabric8
    fabric8.io/git-commit: 95aff298eeca6fba8f6ade3a5dab742a0f3a4381
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=fabric8-console&var-version=2.2.199
    fabric8.io/build-id: "5"
    fabric8.io/build-url: http://jenkins.ux.fabric8.io/job/oss-parent/5
    fabric8.io/git-branch: release-v2.2.199
    fabric8.io/git-url: http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/95aff298eeca6fba8f6ade3a5dab742a0f3a4381
  labels:
    provider: fabric8
    project: fabric8-console
    expose: "true"
    version: 2.2.199
    group: io.fabric8.apps
  name: fabric8
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: fabric8
      group: io.fabric8.platform.console
      project: fabric8-console
      expose: "true"
  template:
    metadata:
      annotations:
        fabric8.io/git-commit: 95aff298eeca6fba8f6ade3a5dab742a0f3a4381
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=fabric8-console&var-version=2.2.199
        fabric8.io/build-id: "5"
        fabric8.io/build-url: http://jenkins.ux.fabric8.io/job/oss-parent/5
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-console/master/app-kubernetes/src/main/fabric8/icon.svg
        configmap.fabric8.io/update-on-change: fabric8
        fabric8.io/git-branch: release-v2.2.199
        fabric8.io/git-url: http://gogs.ux.fabric8.io/gogsadmin/oss-parent/commit/95aff298eeca6fba8f6ade3a5dab742a0f3a4381
      labels:
        provider: fabric8
        group: io.fabric8.platform.console
        project: fabric8-console
        expose: "true"
        version: 2.2.199
    spec:
      containers:
      - command:
        - /kuisp
        - -p
        - "9090"
        - -c
        - /site/osconsole/config.${OAUTH_PROVIDER}.js.tmpl=/site/osconsole/config.js
        - --bearer-token=/var/run/secrets/kubernetes.io/serviceaccount/token
        - --skip-cert-validation=true
        - --default-page=/index.html
        - --max-age=24h
        - -s
        - /k8s/=https://kubernetes:443/
        - --compress
        env:
        - name: GITHUB_OAUTH_CLIENT_SECRET
          valueFrom:
            configMapKeyRef:
              key: github-oauth-client-secret
              name: fabric8
        - name: OAUTH_PROVIDER
          valueFrom:
            configMapKeyRef:
              key: auth-mode
              name: fabric8
        - name: GITHUB_OAUTH_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              key: github-oauth-client-id
              name: fabric8
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_MASTER_URI
          valueFrom:
            configMapKeyRef:
              key: master-uri
              name: fabric8
        image: fabric8/fabric8-console:2.2.199
        name: fabric8
        ports:
        - containerPort: 9090
          name: http
        resources:
          limits:
            cpu: "0"
            memory: "0"
          requests:
            cpu: "0"
            memory: "0"
      - image: fabric8/jenkinshift:2.2.199
        name: jenkinshift
        ports:
        - containerPort: 9191
          name: sun-as-jpda
          protocol: TCP
---
# Source: fabric8-platform/templates/fabric8-docker-registry-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311
  labels:
    provider: fabric8
    project: fabric8-docker-registry
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: fabric8-docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: fabric8
      project: fabric8-docker-registry
      group: io.fabric8.devops.apps
  template:
    metadata:
      annotations:
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/fabric8-docker-registry/src/main/fabric8/icon.png
        fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
        fabric8.io/git-branch: release-v2.2.311
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=fabric8-docker-registry&var-version=2.2.311
        pod.alpha.kubernetes.io/init-containers: '[{"image":"busybox","imagePullPolicy":"IfNotPresent","name":"init","command":["chmod","777","/var/lib/registry"],"volumeMounts":[{"mountPath":"/var/lib/registry","name":"fabric8-docker-registry-storage"}]}]'
      labels:
        provider: fabric8
        project: fabric8-docker-registry
        version: 2.2.311
        group: io.fabric8.devops.apps
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: registry:2
        imagePullPolicy: IfNotPresent
        name: fabric8-docker-registry
        ports:
        - containerPort: 5000
          name: http
        resources:
          limits:
            cpu: "0"
            memory: "0"
          requests:
            cpu: "0"
            memory: "0"
        volumeMounts:
        - mountPath: /var/lib/registry
          name: fabric8-docker-registry-storage
          readOnly: false
      volumes:
      - name: fabric8-docker-registry-storage
        persistentVolumeClaim:
          claimName: fabric8-docker-registry-storage
---
# Source: fabric8-platform/templates/fabric8-forge-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg
    fabric8.io/git-commit: bad661f3285ecbcd6b7a9373e194bda075d832eb
    fabric8.io/git-branch: release-v2.3.88
    fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88
  labels:
    provider: fabric8
    project: fabric8-forge
    version: 2.3.88
    group: io.fabric8.forge.apps
  name: fabric8-forge
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: fabric8
      project: fabric8-forge
      group: io.fabric8.forge.apps
  template:
    metadata:
      annotations:
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-forge/master/fabric8-forge/src/main/fabric8/icon.svg
        fabric8.io/git-commit: bad661f3285ecbcd6b7a9373e194bda075d832eb
        fabric8.io/git-branch: release-v2.3.88
        fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=fabric8-forge&var-version=2.3.88
      labels:
        provider: fabric8
        project: fabric8-forge
        version: 2.3.88
        group: io.fabric8.forge.apps
    spec:
      containers:
      - env:
        - name: FABRIC8_DEFAULT_ENVIRONMENTS
          valueFrom:
            configMapKeyRef:
              key: fabric8-default-environments
              name: fabric8-forge
        - name: JENKINSFILE_LIBRARY_GIT_REPOSITORY
          valueFrom:
            configMapKeyRef:
              key: jenkinsfile-library-git-repository
              name: fabric8-forge
        - name: JENKINSFILE_LIBRARY_GIT_TAG
          valueFrom:
            configMapKeyRef:
              key: jenkinsfile-library-git-tag
              name: fabric8-forge
        - name: USE_EXTERNAL_GIT_ADDRESS
          valueFrom:
            configMapKeyRef:
              key: use-external-git-address
              name: fabric8-forge
        - name: KUBERNETES_TRUST_CERTIFICATES
          value: "true"
        - name: SKIP_TLS_VERIFY
          value: "true"
        - name: JENKINS_GOGS_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: jenkins-gogs-password
              name: fabric8-forge
        - name: JENKINS_GOGS_USER
          valueFrom:
            configMapKeyRef:
              key: jenkins-gogs-user
              name: fabric8-forge
        - name: FABRIC8_ARCHETYPES_VERSION
          value: 2.2.195
        - name: JAVA_OPTIONS
          value: -Dorg.apache.maven.log_transfer=true -Dorg.apache.cxf.logging.enabled=false
        - name: JENKINS_GOGS_EMAIL
          valueFrom:
            configMapKeyRef:
              key: jenkins-gogs-email
              name: fabric8-forge
        - name: KUBERNETES_MASTER
          value: https://kubernetes.default.svc
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: fabric8/fabric8-forge:2.3.88
        imagePullPolicy: IfNotPresent
        name: fabric8-forge
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /_ping
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "0"
            memory: "0"
          requests:
            cpu: "0"
            memory: "0"
        securityContext:
          privileged: false
      serviceAccountName: fabric8
---
# Source: fabric8-platform/templates/gogs-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    configmap.fabric8.io/update-on-change: gogs
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311
  labels:
    provider: fabric8
    project: gogs
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: gogs
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: fabric8
      project: gogs
      group: io.fabric8.devops.apps
  template:
    metadata:
      annotations:
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/gogs/src/main/fabric8/icon.png
        fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
        configmap.fabric8.io/update-on-change: gogs
        fabric8.io/git-branch: release-v2.2.311
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=gogs&var-version=2.2.311
        pod.alpha.kubernetes.io/init-containers: '[{"image":"busybox","imagePullPolicy":"IfNotPresent","name":"init","command":["chmod","777","/app/gogs/data"],"volumeMounts":[{"mountPath":"/app/gogs/data","name":"gogs-data"}]}]'
      labels:
        provider: fabric8
        project: gogs
        version: 2.2.311
        group: io.fabric8.devops.apps
    spec:
      containers:
      - env:
        - name: GOGS_SERVER__ROOT_URL
          valueFrom:
            configMapKeyRef:
              key: gogs-server--root-url
              name: gogs
        - name: ADMIN_USER_EMAIL
          valueFrom:
            configMapKeyRef:
              key: admin-user-email
              name: gogs
        - name: ADMIN_USER_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: admin-user-password
              name: gogs
        - name: ADMIN_USER_CREATE
          value: "true"
        - name: GOGS_WEBHOOK__TASK_INTERVAL
          value: "true"
        - name: GOGS_WEBHOOK__SKIP_TLS_VERIFY
          value: "true"
        - name: ADMIN_USER_NAME
          valueFrom:
            configMapKeyRef:
              key: admin-user-name
              name: gogs
        - name: KUBERNETES_ADMIN_USER
          valueFrom:
            configMapKeyRef:
              key: kubernetes-admin-user
              name: gogs
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: fabric8/gogs:v0.9.97
        imagePullPolicy: IfNotPresent
        name: gogs
        ports:
        - containerPort: 2222
          name: ssh
        - containerPort: 3000
          name: http
        resources:
          limits:
            cpu: "0"
            memory: "0"
          requests:
            cpu: "0"
            memory: "0"
        volumeMounts:
        - mountPath: /app/gogs/data
          name: gogs-data
      serviceAccountName: gogs
      volumes:
      - name: gogs-data
        persistentVolumeClaim:
          claimName: gogs-data
---
# Source: fabric8-platform/templates/jenkins-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311
  labels:
    provider: fabric8
    project: jenkins
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: fabric8
      project: jenkins
      group: io.fabric8.devops.apps
  template:
    metadata:
      annotations:
        fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
        fabric8.io/secret-ssh-key: jenkins-git-ssh,jenkins-master-ssh
        fabric8.io/secret-ssh-config: jenkins-ssh-config
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=jenkins&var-version=2.2.311
        fabric8.io/secret-gpg-key: jenkins-release-gpg
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/jenkins/src/main/fabric8/icon.svg
        fabric8.io/secret-maven-settings: jenkins-maven-settings
        fabric8.io/git-branch: release-v2.2.311
        fabric8.io/secret-hub-api-token: jenkins-hub-api-token
        fabric8.io/secret-docker-cfg: jenkins-docker-cfg
        pod.alpha.kubernetes.io/init-containers: '[{"image":"busybox","imagePullPolicy":"IfNotPresent","name":"init","command":["chmod","777","/var/jenkins_home/workspace","/var/jenkins_home/jobs"],"volumeMounts":[{"mountPath":"/var/jenkins_home/jobs","name":"jenkins-jobs"},{"mountPath":"/var/jenkins_home/workspace","name":"jenkins-workspace"}]}]'
      labels:
        provider: fabric8
        project: jenkins
        version: 2.2.311
        group: io.fabric8.devops.apps
    spec:
      containers:
      - env:
        - name: PROJECT_VERSION
          valueFrom:
            configMapKeyRef:
              key: project-version
              name: jenkins
        - name: PIPELINE_ELASTICSEARCH_PROTOCOL
          valueFrom:
            configMapKeyRef:
              key: pipeline-elasticsearch-protocol
              name: jenkins
        - name: JENKINS_GOGS_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: jenkins-gogs-password
              name: jenkins
        - name: JENKINS_GOGS_USER
          valueFrom:
            configMapKeyRef:
              key: jenkins-gogs-user
              name: jenkins
        - name: JENKINS_GOGS_EMAIL
          valueFrom:
            configMapKeyRef:
              key: jenkins-gogs-email
              name: jenkins
        - name: PIPELINE_ELASTICSEARCH_HOST
          valueFrom:
            configMapKeyRef:
              key: pipeline-elasticsearch-host
              name: jenkins
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_MASTER
          value: https://kubernetes.default
        image: fabric8/jenkins-docker:2.2.311
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /blue/
            port: 8080
          initialDelaySeconds: 120
          timeoutSeconds: 10
        name: jenkins
        ports:
        - containerPort: 50000
          name: slave
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /blue/
            port: 8080
          initialDelaySeconds: 20
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "0"
            memory: "0"
          requests:
            cpu: "0"
            memory: "0"
        volumeMounts:
        - mountPath: /var/jenkins_home/jobs
          name: jenkins-jobs
          readOnly: false
        - mountPath: /var/jenkins_home/workspace
          name: jenkins-workspace
          readOnly: false
      serviceAccountName: jenkins
      volumes:
      - name: jenkins-jobs
        persistentVolumeClaim:
          claimName: jenkins-jobs
      - name: jenkins-workspace
        persistentVolumeClaim:
          claimName: jenkins-workspace
---
# Source: fabric8-platform/templates/nexus-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png
    fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
    fabric8.io/git-branch: release-v2.2.311
    fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311
  labels:
    provider: fabric8
    project: nexus
    version: 2.2.311
    group: io.fabric8.devops.apps
  name: nexus
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: fabric8
      project: nexus
      group: io.fabric8.devops.apps
  template:
    metadata:
      annotations:
        fabric8.io/iconUrl: https://cdn.rawgit.com/fabric8io/fabric8-devops/master/nexus/src/main/fabric8/icon.png
        fabric8.io/git-commit: 2b9f7ce19493fe6d18392ac4f4be16f5e1a76fa3
        fabric8.io/git-branch: release-v2.2.311
        fabric8.io/metrics-path: dashboard/file/kubernetes-pods.json/?var-project=nexus&var-version=2.2.311
        pod.alpha.kubernetes.io/init-containers: '[{"image":"busybox","imagePullPolicy":"IfNotPresent","name":"init","command":["chmod","777","/sonatype-work/storage"],"volumeMounts":[{"mountPath":"/sonatype-work/storage","name":"nexus-storage"}]}]'
      labels:
        provider: fabric8
        project: nexus
        version: 2.2.311
        group: io.fabric8.devops.apps
    spec:
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: fabric8/nexus:2.2.311
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /content/repositories/
            port: 8081
          initialDelaySeconds: 180
          timeoutSeconds: 10
        name: nexus
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          failureThreshold: 10
          httpGet:
            path: /content/repositories/
            port: 8081
          initialDelaySeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "0"
            memory: "0"
          requests:
            cpu: "0"
            memory: "0"
        volumeMounts:
        - mountPath: /sonatype-work/storage
          name: nexus-storage
          readOnly: false
      volumes:
      - name: nexus-storage
        persistentVolumeClaim:
          claimName: nexus-storage
