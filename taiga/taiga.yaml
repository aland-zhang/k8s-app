apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: taiga-web
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: taiga
        tier: web
    spec:
      imagePullSecrets:
      - name: harborkey    
      containers:
      - name: front
#        image: harbor.gdphdc.com/taiga/taiga
        image: benhutchins/taiga
        ports:
        - containerPort: 80
          name: front
        env:
        - name: TAIGA_HOSTNAME
          value: taiga.gdphdc.com
        - name: TAIGA_DB_HOST
          value: "postgres.taiga"
        - name: TAIGA_DB_USER
          value: "taiga"   
        - name: TAIGA_DB_NAME
          value: "taiga"                    
        - name: TAIGA_DB_PASSWORD
          value: "PHp@ssw0rd"
#        - name: TAIGA_ENABLE_EMAIL
#          value: "True"
#       - name: TAIGA_EMAIL_FROM
#         value: "phadmin@gdphdc.com"
#       - name: TAIGA_EMAIL_USE_TLS
#         value: "False"
#       - name: TAIGA_EMAIL_HOST
#         value: "smtp.gdphdc.com"
#       - name: TAIGA_EMAIL_PORT
#         value: "25"


        volumeMounts:
        - name: taigamedia-persistent-storage
          mountPath: /usr/src/taiga-back/media
        - name: taiga-conf
          mountPath: /taiga/conf.json
          subPath: conf.json
        - name: taiga-conf
          mountPath: /taiga/local.py
          subPath: local.py        
      volumes:
      - name: taigamedia-persistent-storage
        persistentVolumeClaim:
          claimName: taigamedia-pv-claim
#     - name: taiga-config
#       persistentVolumeClaim:
#         claimName: taiga-config-pv-claim
      - name: taiga-conf 
        configMap:
          name: taiga-conf 
          items:
          - key: conf.json
            path: conf.json
          - key: local.py
            path: local.py          